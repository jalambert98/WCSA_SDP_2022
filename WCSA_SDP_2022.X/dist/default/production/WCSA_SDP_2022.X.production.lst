

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Jan 30 02:10:14 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	text39,local,class=CODE,merge=1,delta=2
    54                           	psect	text40,local,class=CODE,merge=1,delta=2
    55                           	psect	text41,local,class=CODE,merge=1,delta=2
    56                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text44,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text46,local,class=CODE,merge=1,delta=2
    61                           	psect	text47,local,class=CODE,merge=1,delta=2
    62                           	psect	text48,local,class=CODE,merge=1,delta=2
    63                           	psect	text49,local,class=CODE,merge=1,delta=2
    64                           	psect	text50,local,class=CODE,merge=1,delta=2
    65                           	psect	text51,local,class=CODE,merge=1,delta=2
    66                           	psect	text52,local,class=CODE,merge=1,delta=2
    67                           	psect	text53,local,class=CODE,merge=1,delta=2
    68                           	psect	text54,local,class=CODE,merge=1,delta=2
    69                           	psect	text55,local,class=CODE,merge=1,delta=2
    70                           	psect	text56,local,class=CODE,merge=1,delta=2
    71                           	psect	text57,local,class=CODE,merge=1,delta=2
    72                           	psect	text58,local,class=CODE,merge=1,delta=2
    73                           	psect	text59,local,class=CODE,merge=1,delta=2
    74                           	psect	text60,local,class=CODE,merge=1,delta=2
    75                           	psect	text61,local,class=CODE,merge=1,delta=2
    76                           	psect	text62,local,class=CODE,merge=1,delta=2
    77                           	psect	text63,local,class=CODE,merge=1,delta=2
    78                           	psect	text64,local,class=CODE,merge=1,delta=2
    79                           	psect	text65,local,class=CODE,merge=1,delta=2
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    82                           	dabs	1,0x7E,2
    83  0000                     
    84                           ; Version 2.40
    85                           ; Generated 19/01/2022 GMT
    86                           ; 
    87                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F18345 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0090                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0097                     	;# 
   162  009B                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  0111                     	;# 
   172  0112                     	;# 
   173  0113                     	;# 
   174  0114                     	;# 
   175  0115                     	;# 
   176  0116                     	;# 
   177  0117                     	;# 
   178  0118                     	;# 
   179  0119                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  018E                     	;# 
   183  0197                     	;# 
   184  0199                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019C                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019D                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019E                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019F                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  020C                     	;# 
   210  020D                     	;# 
   211  020E                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0216                     	;# 
   225  0216                     	;# 
   226  0217                     	;# 
   227  0217                     	;# 
   228  0219                     	;# 
   229  021A                     	;# 
   230  021B                     	;# 
   231  021C                     	;# 
   232  021D                     	;# 
   233  021D                     	;# 
   234  021E                     	;# 
   235  021F                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  0291                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0293                     	;# 
   243  0294                     	;# 
   244  0295                     	;# 
   245  0295                     	;# 
   246  0296                     	;# 
   247  0297                     	;# 
   248  0298                     	;# 
   249  029F                     	;# 
   250  030C                     	;# 
   251  030D                     	;# 
   252  030E                     	;# 
   253  0311                     	;# 
   254  0311                     	;# 
   255  0312                     	;# 
   256  0313                     	;# 
   257  0314                     	;# 
   258  0315                     	;# 
   259  0315                     	;# 
   260  0316                     	;# 
   261  0317                     	;# 
   262  0318                     	;# 
   263  038C                     	;# 
   264  038D                     	;# 
   265  038E                     	;# 
   266  0391                     	;# 
   267  0392                     	;# 
   268  0393                     	;# 
   269  0394                     	;# 
   270  0395                     	;# 
   271  0396                     	;# 
   272  0397                     	;# 
   273  0398                     	;# 
   274  0399                     	;# 
   275  039A                     	;# 
   276  039C                     	;# 
   277  039D                     	;# 
   278  039E                     	;# 
   279  039F                     	;# 
   280  0411                     	;# 
   281  0411                     	;# 
   282  0412                     	;# 
   283  0413                     	;# 
   284  0414                     	;# 
   285  0415                     	;# 
   286  0416                     	;# 
   287  0417                     	;# 
   288  0418                     	;# 
   289  0418                     	;# 
   290  0419                     	;# 
   291  041A                     	;# 
   292  041B                     	;# 
   293  041C                     	;# 
   294  041D                     	;# 
   295  041E                     	;# 
   296  041F                     	;# 
   297  0498                     	;# 
   298  0498                     	;# 
   299  0499                     	;# 
   300  049A                     	;# 
   301  049B                     	;# 
   302  049B                     	;# 
   303  049C                     	;# 
   304  049D                     	;# 
   305  049E                     	;# 
   306  049F                     	;# 
   307  0617                     	;# 
   308  0618                     	;# 
   309  0619                     	;# 
   310  0619                     	;# 
   311  061A                     	;# 
   312  061B                     	;# 
   313  061C                     	;# 
   314  061C                     	;# 
   315  061F                     	;# 
   316  0691                     	;# 
   317  0692                     	;# 
   318  0693                     	;# 
   319  0694                     	;# 
   320  0695                     	;# 
   321  0696                     	;# 
   322  0697                     	;# 
   323  0698                     	;# 
   324  0699                     	;# 
   325  0711                     	;# 
   326  0712                     	;# 
   327  0713                     	;# 
   328  0714                     	;# 
   329  0715                     	;# 
   330  0716                     	;# 
   331  0717                     	;# 
   332  0718                     	;# 
   333  0719                     	;# 
   334  0891                     	;# 
   335  0891                     	;# 
   336  0891                     	;# 
   337  0891                     	;# 
   338  0891                     	;# 
   339  0891                     	;# 
   340  0892                     	;# 
   341  0892                     	;# 
   342  0892                     	;# 
   343  0893                     	;# 
   344  0893                     	;# 
   345  0893                     	;# 
   346  0893                     	;# 
   347  0893                     	;# 
   348  0893                     	;# 
   349  0894                     	;# 
   350  0894                     	;# 
   351  0894                     	;# 
   352  0895                     	;# 
   353  0895                     	;# 
   354  0895                     	;# 
   355  0896                     	;# 
   356  0896                     	;# 
   357  0896                     	;# 
   358  089B                     	;# 
   359  0911                     	;# 
   360  0912                     	;# 
   361  0913                     	;# 
   362  0914                     	;# 
   363  0915                     	;# 
   364  0916                     	;# 
   365  0918                     	;# 
   366  0919                     	;# 
   367  091A                     	;# 
   368  091B                     	;# 
   369  091C                     	;# 
   370  091D                     	;# 
   371  091E                     	;# 
   372  091F                     	;# 
   373  0E0F                     	;# 
   374  0E10                     	;# 
   375  0E11                     	;# 
   376  0E12                     	;# 
   377  0E13                     	;# 
   378  0E14                     	;# 
   379  0E15                     	;# 
   380  0E16                     	;# 
   381  0E17                     	;# 
   382  0E18                     	;# 
   383  0E19                     	;# 
   384  0E1A                     	;# 
   385  0E1B                     	;# 
   386  0E1C                     	;# 
   387  0E1D                     	;# 
   388  0E1E                     	;# 
   389  0E1F                     	;# 
   390  0E20                     	;# 
   391  0E21                     	;# 
   392  0E22                     	;# 
   393  0E24                     	;# 
   394  0E25                     	;# 
   395  0E28                     	;# 
   396  0E29                     	;# 
   397  0E2A                     	;# 
   398  0E2B                     	;# 
   399  0E2C                     	;# 
   400  0E2D                     	;# 
   401  0E2E                     	;# 
   402  0E2F                     	;# 
   403  0E90                     	;# 
   404  0E91                     	;# 
   405  0E92                     	;# 
   406  0E94                     	;# 
   407  0E95                     	;# 
   408  0E9C                     	;# 
   409  0E9D                     	;# 
   410  0E9E                     	;# 
   411  0E9F                     	;# 
   412  0EA0                     	;# 
   413  0EA1                     	;# 
   414  0EA2                     	;# 
   415  0EA3                     	;# 
   416  0EA4                     	;# 
   417  0EA5                     	;# 
   418  0EA6                     	;# 
   419  0EA7                     	;# 
   420  0F0F                     	;# 
   421  0F10                     	;# 
   422  0F11                     	;# 
   423  0F12                     	;# 
   424  0F13                     	;# 
   425  0F14                     	;# 
   426  0F15                     	;# 
   427  0F16                     	;# 
   428  0F17                     	;# 
   429  0F18                     	;# 
   430  0F19                     	;# 
   431  0F1A                     	;# 
   432  0F1B                     	;# 
   433  0F1C                     	;# 
   434  0F1D                     	;# 
   435  0F1E                     	;# 
   436  0F1F                     	;# 
   437  0F20                     	;# 
   438  0F21                     	;# 
   439  0F22                     	;# 
   440  0F23                     	;# 
   441  0F24                     	;# 
   442  0F25                     	;# 
   443  0F26                     	;# 
   444  0F27                     	;# 
   445  0F28                     	;# 
   446  0F29                     	;# 
   447  0F2A                     	;# 
   448  0F2B                     	;# 
   449  0F2C                     	;# 
   450  0F2D                     	;# 
   451  0F2E                     	;# 
   452  0F2F                     	;# 
   453  0F30                     	;# 
   454  0F31                     	;# 
   455  0F32                     	;# 
   456  0F33                     	;# 
   457  0F34                     	;# 
   458  0F35                     	;# 
   459  0F36                     	;# 
   460  0F37                     	;# 
   461  0FE4                     	;# 
   462  0FE5                     	;# 
   463  0FE6                     	;# 
   464  0FE7                     	;# 
   465  0FE8                     	;# 
   466  0FE9                     	;# 
   467  0FEA                     	;# 
   468  0FEB                     	;# 
   469  0FED                     	;# 
   470  0FEE                     	;# 
   471  0FEF                     	;# 
   472  0000                     	;# 
   473  0001                     	;# 
   474  0002                     	;# 
   475  0003                     	;# 
   476  0004                     	;# 
   477  0005                     	;# 
   478  0006                     	;# 
   479  0007                     	;# 
   480  0008                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000D                     	;# 
   486  000E                     	;# 
   487  0010                     	;# 
   488  0011                     	;# 
   489  0012                     	;# 
   490  0013                     	;# 
   491  0014                     	;# 
   492  0015                     	;# 
   493  0015                     	;# 
   494  0016                     	;# 
   495  0016                     	;# 
   496  0017                     	;# 
   497  0018                     	;# 
   498  0019                     	;# 
   499  0019                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001C                     	;# 
   503  001D                     	;# 
   504  001E                     	;# 
   505  001F                     	;# 
   506  008C                     	;# 
   507  008D                     	;# 
   508  008E                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0097                     	;# 
   515  009B                     	;# 
   516  009B                     	;# 
   517  009C                     	;# 
   518  009D                     	;# 
   519  009E                     	;# 
   520  009F                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  0111                     	;# 
   525  0112                     	;# 
   526  0113                     	;# 
   527  0114                     	;# 
   528  0115                     	;# 
   529  0116                     	;# 
   530  0117                     	;# 
   531  0118                     	;# 
   532  0119                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  018E                     	;# 
   536  0197                     	;# 
   537  0199                     	;# 
   538  0199                     	;# 
   539  0199                     	;# 
   540  019A                     	;# 
   541  019A                     	;# 
   542  019A                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019C                     	;# 
   549  019C                     	;# 
   550  019C                     	;# 
   551  019D                     	;# 
   552  019D                     	;# 
   553  019D                     	;# 
   554  019E                     	;# 
   555  019E                     	;# 
   556  019E                     	;# 
   557  019F                     	;# 
   558  019F                     	;# 
   559  019F                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  020C                     	;# 
   563  020D                     	;# 
   564  020E                     	;# 
   565  0211                     	;# 
   566  0211                     	;# 
   567  0212                     	;# 
   568  0212                     	;# 
   569  0213                     	;# 
   570  0213                     	;# 
   571  0214                     	;# 
   572  0214                     	;# 
   573  0215                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0216                     	;# 
   578  0216                     	;# 
   579  0217                     	;# 
   580  0217                     	;# 
   581  0219                     	;# 
   582  021A                     	;# 
   583  021B                     	;# 
   584  021C                     	;# 
   585  021D                     	;# 
   586  021D                     	;# 
   587  021E                     	;# 
   588  021F                     	;# 
   589  028C                     	;# 
   590  028D                     	;# 
   591  028E                     	;# 
   592  0291                     	;# 
   593  0291                     	;# 
   594  0292                     	;# 
   595  0293                     	;# 
   596  0294                     	;# 
   597  0295                     	;# 
   598  0295                     	;# 
   599  0296                     	;# 
   600  0297                     	;# 
   601  0298                     	;# 
   602  029F                     	;# 
   603  030C                     	;# 
   604  030D                     	;# 
   605  030E                     	;# 
   606  0311                     	;# 
   607  0311                     	;# 
   608  0312                     	;# 
   609  0313                     	;# 
   610  0314                     	;# 
   611  0315                     	;# 
   612  0315                     	;# 
   613  0316                     	;# 
   614  0317                     	;# 
   615  0318                     	;# 
   616  038C                     	;# 
   617  038D                     	;# 
   618  038E                     	;# 
   619  0391                     	;# 
   620  0392                     	;# 
   621  0393                     	;# 
   622  0394                     	;# 
   623  0395                     	;# 
   624  0396                     	;# 
   625  0397                     	;# 
   626  0398                     	;# 
   627  0399                     	;# 
   628  039A                     	;# 
   629  039C                     	;# 
   630  039D                     	;# 
   631  039E                     	;# 
   632  039F                     	;# 
   633  0411                     	;# 
   634  0411                     	;# 
   635  0412                     	;# 
   636  0413                     	;# 
   637  0414                     	;# 
   638  0415                     	;# 
   639  0416                     	;# 
   640  0417                     	;# 
   641  0418                     	;# 
   642  0418                     	;# 
   643  0419                     	;# 
   644  041A                     	;# 
   645  041B                     	;# 
   646  041C                     	;# 
   647  041D                     	;# 
   648  041E                     	;# 
   649  041F                     	;# 
   650  0498                     	;# 
   651  0498                     	;# 
   652  0499                     	;# 
   653  049A                     	;# 
   654  049B                     	;# 
   655  049B                     	;# 
   656  049C                     	;# 
   657  049D                     	;# 
   658  049E                     	;# 
   659  049F                     	;# 
   660  0617                     	;# 
   661  0618                     	;# 
   662  0619                     	;# 
   663  0619                     	;# 
   664  061A                     	;# 
   665  061B                     	;# 
   666  061C                     	;# 
   667  061C                     	;# 
   668  061F                     	;# 
   669  0691                     	;# 
   670  0692                     	;# 
   671  0693                     	;# 
   672  0694                     	;# 
   673  0695                     	;# 
   674  0696                     	;# 
   675  0697                     	;# 
   676  0698                     	;# 
   677  0699                     	;# 
   678  0711                     	;# 
   679  0712                     	;# 
   680  0713                     	;# 
   681  0714                     	;# 
   682  0715                     	;# 
   683  0716                     	;# 
   684  0717                     	;# 
   685  0718                     	;# 
   686  0719                     	;# 
   687  0891                     	;# 
   688  0891                     	;# 
   689  0891                     	;# 
   690  0891                     	;# 
   691  0891                     	;# 
   692  0891                     	;# 
   693  0892                     	;# 
   694  0892                     	;# 
   695  0892                     	;# 
   696  0893                     	;# 
   697  0893                     	;# 
   698  0893                     	;# 
   699  0893                     	;# 
   700  0893                     	;# 
   701  0893                     	;# 
   702  0894                     	;# 
   703  0894                     	;# 
   704  0894                     	;# 
   705  0895                     	;# 
   706  0895                     	;# 
   707  0895                     	;# 
   708  0896                     	;# 
   709  0896                     	;# 
   710  0896                     	;# 
   711  089B                     	;# 
   712  0911                     	;# 
   713  0912                     	;# 
   714  0913                     	;# 
   715  0914                     	;# 
   716  0915                     	;# 
   717  0916                     	;# 
   718  0918                     	;# 
   719  0919                     	;# 
   720  091A                     	;# 
   721  091B                     	;# 
   722  091C                     	;# 
   723  091D                     	;# 
   724  091E                     	;# 
   725  091F                     	;# 
   726  0E0F                     	;# 
   727  0E10                     	;# 
   728  0E11                     	;# 
   729  0E12                     	;# 
   730  0E13                     	;# 
   731  0E14                     	;# 
   732  0E15                     	;# 
   733  0E16                     	;# 
   734  0E17                     	;# 
   735  0E18                     	;# 
   736  0E19                     	;# 
   737  0E1A                     	;# 
   738  0E1B                     	;# 
   739  0E1C                     	;# 
   740  0E1D                     	;# 
   741  0E1E                     	;# 
   742  0E1F                     	;# 
   743  0E20                     	;# 
   744  0E21                     	;# 
   745  0E22                     	;# 
   746  0E24                     	;# 
   747  0E25                     	;# 
   748  0E28                     	;# 
   749  0E29                     	;# 
   750  0E2A                     	;# 
   751  0E2B                     	;# 
   752  0E2C                     	;# 
   753  0E2D                     	;# 
   754  0E2E                     	;# 
   755  0E2F                     	;# 
   756  0E90                     	;# 
   757  0E91                     	;# 
   758  0E92                     	;# 
   759  0E94                     	;# 
   760  0E95                     	;# 
   761  0E9C                     	;# 
   762  0E9D                     	;# 
   763  0E9E                     	;# 
   764  0E9F                     	;# 
   765  0EA0                     	;# 
   766  0EA1                     	;# 
   767  0EA2                     	;# 
   768  0EA3                     	;# 
   769  0EA4                     	;# 
   770  0EA5                     	;# 
   771  0EA6                     	;# 
   772  0EA7                     	;# 
   773  0F0F                     	;# 
   774  0F10                     	;# 
   775  0F11                     	;# 
   776  0F12                     	;# 
   777  0F13                     	;# 
   778  0F14                     	;# 
   779  0F15                     	;# 
   780  0F16                     	;# 
   781  0F17                     	;# 
   782  0F18                     	;# 
   783  0F19                     	;# 
   784  0F1A                     	;# 
   785  0F1B                     	;# 
   786  0F1C                     	;# 
   787  0F1D                     	;# 
   788  0F1E                     	;# 
   789  0F1F                     	;# 
   790  0F20                     	;# 
   791  0F21                     	;# 
   792  0F22                     	;# 
   793  0F23                     	;# 
   794  0F24                     	;# 
   795  0F25                     	;# 
   796  0F26                     	;# 
   797  0F27                     	;# 
   798  0F28                     	;# 
   799  0F29                     	;# 
   800  0F2A                     	;# 
   801  0F2B                     	;# 
   802  0F2C                     	;# 
   803  0F2D                     	;# 
   804  0F2E                     	;# 
   805  0F2F                     	;# 
   806  0F30                     	;# 
   807  0F31                     	;# 
   808  0F32                     	;# 
   809  0F33                     	;# 
   810  0F34                     	;# 
   811  0F35                     	;# 
   812  0F36                     	;# 
   813  0F37                     	;# 
   814  0FE4                     	;# 
   815  0FE5                     	;# 
   816  0FE6                     	;# 
   817  0FE7                     	;# 
   818  0FE8                     	;# 
   819  0FE9                     	;# 
   820  0FEA                     	;# 
   821  0FEB                     	;# 
   822  0FED                     	;# 
   823  0FEE                     	;# 
   824  0FEF                     	;# 
   825  0000                     	;# 
   826  0001                     	;# 
   827  0002                     	;# 
   828  0003                     	;# 
   829  0004                     	;# 
   830  0005                     	;# 
   831  0006                     	;# 
   832  0007                     	;# 
   833  0008                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000D                     	;# 
   839  000E                     	;# 
   840  0010                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0014                     	;# 
   845  0015                     	;# 
   846  0015                     	;# 
   847  0016                     	;# 
   848  0016                     	;# 
   849  0017                     	;# 
   850  0018                     	;# 
   851  0019                     	;# 
   852  0019                     	;# 
   853  001A                     	;# 
   854  001B                     	;# 
   855  001C                     	;# 
   856  001D                     	;# 
   857  001E                     	;# 
   858  001F                     	;# 
   859  008C                     	;# 
   860  008D                     	;# 
   861  008E                     	;# 
   862  0090                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0093                     	;# 
   866  0094                     	;# 
   867  0097                     	;# 
   868  009B                     	;# 
   869  009B                     	;# 
   870  009C                     	;# 
   871  009D                     	;# 
   872  009E                     	;# 
   873  009F                     	;# 
   874  010C                     	;# 
   875  010D                     	;# 
   876  010E                     	;# 
   877  0111                     	;# 
   878  0112                     	;# 
   879  0113                     	;# 
   880  0114                     	;# 
   881  0115                     	;# 
   882  0116                     	;# 
   883  0117                     	;# 
   884  0118                     	;# 
   885  0119                     	;# 
   886  018C                     	;# 
   887  018D                     	;# 
   888  018E                     	;# 
   889  0197                     	;# 
   890  0199                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  019A                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019D                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019E                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020D                     	;# 
   917  020E                     	;# 
   918  0211                     	;# 
   919  0211                     	;# 
   920  0212                     	;# 
   921  0212                     	;# 
   922  0213                     	;# 
   923  0213                     	;# 
   924  0214                     	;# 
   925  0214                     	;# 
   926  0215                     	;# 
   927  0215                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0216                     	;# 
   931  0216                     	;# 
   932  0217                     	;# 
   933  0217                     	;# 
   934  0219                     	;# 
   935  021A                     	;# 
   936  021B                     	;# 
   937  021C                     	;# 
   938  021D                     	;# 
   939  021D                     	;# 
   940  021E                     	;# 
   941  021F                     	;# 
   942  028C                     	;# 
   943  028D                     	;# 
   944  028E                     	;# 
   945  0291                     	;# 
   946  0291                     	;# 
   947  0292                     	;# 
   948  0293                     	;# 
   949  0294                     	;# 
   950  0295                     	;# 
   951  0295                     	;# 
   952  0296                     	;# 
   953  0297                     	;# 
   954  0298                     	;# 
   955  029F                     	;# 
   956  030C                     	;# 
   957  030D                     	;# 
   958  030E                     	;# 
   959  0311                     	;# 
   960  0311                     	;# 
   961  0312                     	;# 
   962  0313                     	;# 
   963  0314                     	;# 
   964  0315                     	;# 
   965  0315                     	;# 
   966  0316                     	;# 
   967  0317                     	;# 
   968  0318                     	;# 
   969  038C                     	;# 
   970  038D                     	;# 
   971  038E                     	;# 
   972  0391                     	;# 
   973  0392                     	;# 
   974  0393                     	;# 
   975  0394                     	;# 
   976  0395                     	;# 
   977  0396                     	;# 
   978  0397                     	;# 
   979  0398                     	;# 
   980  0399                     	;# 
   981  039A                     	;# 
   982  039C                     	;# 
   983  039D                     	;# 
   984  039E                     	;# 
   985  039F                     	;# 
   986  0411                     	;# 
   987  0411                     	;# 
   988  0412                     	;# 
   989  0413                     	;# 
   990  0414                     	;# 
   991  0415                     	;# 
   992  0416                     	;# 
   993  0417                     	;# 
   994  0418                     	;# 
   995  0418                     	;# 
   996  0419                     	;# 
   997  041A                     	;# 
   998  041B                     	;# 
   999  041C                     	;# 
  1000  041D                     	;# 
  1001  041E                     	;# 
  1002  041F                     	;# 
  1003  0498                     	;# 
  1004  0498                     	;# 
  1005  0499                     	;# 
  1006  049A                     	;# 
  1007  049B                     	;# 
  1008  049B                     	;# 
  1009  049C                     	;# 
  1010  049D                     	;# 
  1011  049E                     	;# 
  1012  049F                     	;# 
  1013  0617                     	;# 
  1014  0618                     	;# 
  1015  0619                     	;# 
  1016  0619                     	;# 
  1017  061A                     	;# 
  1018  061B                     	;# 
  1019  061C                     	;# 
  1020  061C                     	;# 
  1021  061F                     	;# 
  1022  0691                     	;# 
  1023  0692                     	;# 
  1024  0693                     	;# 
  1025  0694                     	;# 
  1026  0695                     	;# 
  1027  0696                     	;# 
  1028  0697                     	;# 
  1029  0698                     	;# 
  1030  0699                     	;# 
  1031  0711                     	;# 
  1032  0712                     	;# 
  1033  0713                     	;# 
  1034  0714                     	;# 
  1035  0715                     	;# 
  1036  0716                     	;# 
  1037  0717                     	;# 
  1038  0718                     	;# 
  1039  0719                     	;# 
  1040  0891                     	;# 
  1041  0891                     	;# 
  1042  0891                     	;# 
  1043  0891                     	;# 
  1044  0891                     	;# 
  1045  0891                     	;# 
  1046  0892                     	;# 
  1047  0892                     	;# 
  1048  0892                     	;# 
  1049  0893                     	;# 
  1050  0893                     	;# 
  1051  0893                     	;# 
  1052  0893                     	;# 
  1053  0893                     	;# 
  1054  0893                     	;# 
  1055  0894                     	;# 
  1056  0894                     	;# 
  1057  0894                     	;# 
  1058  0895                     	;# 
  1059  0895                     	;# 
  1060  0895                     	;# 
  1061  0896                     	;# 
  1062  0896                     	;# 
  1063  0896                     	;# 
  1064  089B                     	;# 
  1065  0911                     	;# 
  1066  0912                     	;# 
  1067  0913                     	;# 
  1068  0914                     	;# 
  1069  0915                     	;# 
  1070  0916                     	;# 
  1071  0918                     	;# 
  1072  0919                     	;# 
  1073  091A                     	;# 
  1074  091B                     	;# 
  1075  091C                     	;# 
  1076  091D                     	;# 
  1077  091E                     	;# 
  1078  091F                     	;# 
  1079  0E0F                     	;# 
  1080  0E10                     	;# 
  1081  0E11                     	;# 
  1082  0E12                     	;# 
  1083  0E13                     	;# 
  1084  0E14                     	;# 
  1085  0E15                     	;# 
  1086  0E16                     	;# 
  1087  0E17                     	;# 
  1088  0E18                     	;# 
  1089  0E19                     	;# 
  1090  0E1A                     	;# 
  1091  0E1B                     	;# 
  1092  0E1C                     	;# 
  1093  0E1D                     	;# 
  1094  0E1E                     	;# 
  1095  0E1F                     	;# 
  1096  0E20                     	;# 
  1097  0E21                     	;# 
  1098  0E22                     	;# 
  1099  0E24                     	;# 
  1100  0E25                     	;# 
  1101  0E28                     	;# 
  1102  0E29                     	;# 
  1103  0E2A                     	;# 
  1104  0E2B                     	;# 
  1105  0E2C                     	;# 
  1106  0E2D                     	;# 
  1107  0E2E                     	;# 
  1108  0E2F                     	;# 
  1109  0E90                     	;# 
  1110  0E91                     	;# 
  1111  0E92                     	;# 
  1112  0E94                     	;# 
  1113  0E95                     	;# 
  1114  0E9C                     	;# 
  1115  0E9D                     	;# 
  1116  0E9E                     	;# 
  1117  0E9F                     	;# 
  1118  0EA0                     	;# 
  1119  0EA1                     	;# 
  1120  0EA2                     	;# 
  1121  0EA3                     	;# 
  1122  0EA4                     	;# 
  1123  0EA5                     	;# 
  1124  0EA6                     	;# 
  1125  0EA7                     	;# 
  1126  0F0F                     	;# 
  1127  0F10                     	;# 
  1128  0F11                     	;# 
  1129  0F12                     	;# 
  1130  0F13                     	;# 
  1131  0F14                     	;# 
  1132  0F15                     	;# 
  1133  0F16                     	;# 
  1134  0F17                     	;# 
  1135  0F18                     	;# 
  1136  0F19                     	;# 
  1137  0F1A                     	;# 
  1138  0F1B                     	;# 
  1139  0F1C                     	;# 
  1140  0F1D                     	;# 
  1141  0F1E                     	;# 
  1142  0F1F                     	;# 
  1143  0F20                     	;# 
  1144  0F21                     	;# 
  1145  0F22                     	;# 
  1146  0F23                     	;# 
  1147  0F24                     	;# 
  1148  0F25                     	;# 
  1149  0F26                     	;# 
  1150  0F27                     	;# 
  1151  0F28                     	;# 
  1152  0F29                     	;# 
  1153  0F2A                     	;# 
  1154  0F2B                     	;# 
  1155  0F2C                     	;# 
  1156  0F2D                     	;# 
  1157  0F2E                     	;# 
  1158  0F2F                     	;# 
  1159  0F30                     	;# 
  1160  0F31                     	;# 
  1161  0F32                     	;# 
  1162  0F33                     	;# 
  1163  0F34                     	;# 
  1164  0F35                     	;# 
  1165  0F36                     	;# 
  1166  0F37                     	;# 
  1167  0FE4                     	;# 
  1168  0FE5                     	;# 
  1169  0FE6                     	;# 
  1170  0FE7                     	;# 
  1171  0FE8                     	;# 
  1172  0FE9                     	;# 
  1173  0FEA                     	;# 
  1174  0FEB                     	;# 
  1175  0FED                     	;# 
  1176  0FEE                     	;# 
  1177  0FEF                     	;# 
  1178  0000                     	;# 
  1179  0001                     	;# 
  1180  0002                     	;# 
  1181  0003                     	;# 
  1182  0004                     	;# 
  1183  0005                     	;# 
  1184  0006                     	;# 
  1185  0007                     	;# 
  1186  0008                     	;# 
  1187  0009                     	;# 
  1188  000A                     	;# 
  1189  000B                     	;# 
  1190  000C                     	;# 
  1191  000D                     	;# 
  1192  000E                     	;# 
  1193  0010                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0013                     	;# 
  1197  0014                     	;# 
  1198  0015                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  0019                     	;# 
  1206  001A                     	;# 
  1207  001B                     	;# 
  1208  001C                     	;# 
  1209  001D                     	;# 
  1210  001E                     	;# 
  1211  001F                     	;# 
  1212  008C                     	;# 
  1213  008D                     	;# 
  1214  008E                     	;# 
  1215  0090                     	;# 
  1216  0091                     	;# 
  1217  0092                     	;# 
  1218  0093                     	;# 
  1219  0094                     	;# 
  1220  0097                     	;# 
  1221  009B                     	;# 
  1222  009B                     	;# 
  1223  009C                     	;# 
  1224  009D                     	;# 
  1225  009E                     	;# 
  1226  009F                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  010E                     	;# 
  1230  0111                     	;# 
  1231  0112                     	;# 
  1232  0113                     	;# 
  1233  0114                     	;# 
  1234  0115                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0118                     	;# 
  1238  0119                     	;# 
  1239  018C                     	;# 
  1240  018D                     	;# 
  1241  018E                     	;# 
  1242  0197                     	;# 
  1243  0199                     	;# 
  1244  0199                     	;# 
  1245  0199                     	;# 
  1246  019A                     	;# 
  1247  019A                     	;# 
  1248  019A                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019C                     	;# 
  1255  019C                     	;# 
  1256  019C                     	;# 
  1257  019D                     	;# 
  1258  019D                     	;# 
  1259  019D                     	;# 
  1260  019E                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  020C                     	;# 
  1269  020D                     	;# 
  1270  020E                     	;# 
  1271  0211                     	;# 
  1272  0211                     	;# 
  1273  0212                     	;# 
  1274  0212                     	;# 
  1275  0213                     	;# 
  1276  0213                     	;# 
  1277  0214                     	;# 
  1278  0214                     	;# 
  1279  0215                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0216                     	;# 
  1284  0216                     	;# 
  1285  0217                     	;# 
  1286  0217                     	;# 
  1287  0219                     	;# 
  1288  021A                     	;# 
  1289  021B                     	;# 
  1290  021C                     	;# 
  1291  021D                     	;# 
  1292  021D                     	;# 
  1293  021E                     	;# 
  1294  021F                     	;# 
  1295  028C                     	;# 
  1296  028D                     	;# 
  1297  028E                     	;# 
  1298  0291                     	;# 
  1299  0291                     	;# 
  1300  0292                     	;# 
  1301  0293                     	;# 
  1302  0294                     	;# 
  1303  0295                     	;# 
  1304  0295                     	;# 
  1305  0296                     	;# 
  1306  0297                     	;# 
  1307  0298                     	;# 
  1308  029F                     	;# 
  1309  030C                     	;# 
  1310  030D                     	;# 
  1311  030E                     	;# 
  1312  0311                     	;# 
  1313  0311                     	;# 
  1314  0312                     	;# 
  1315  0313                     	;# 
  1316  0314                     	;# 
  1317  0315                     	;# 
  1318  0315                     	;# 
  1319  0316                     	;# 
  1320  0317                     	;# 
  1321  0318                     	;# 
  1322  038C                     	;# 
  1323  038D                     	;# 
  1324  038E                     	;# 
  1325  0391                     	;# 
  1326  0392                     	;# 
  1327  0393                     	;# 
  1328  0394                     	;# 
  1329  0395                     	;# 
  1330  0396                     	;# 
  1331  0397                     	;# 
  1332  0398                     	;# 
  1333  0399                     	;# 
  1334  039A                     	;# 
  1335  039C                     	;# 
  1336  039D                     	;# 
  1337  039E                     	;# 
  1338  039F                     	;# 
  1339  0411                     	;# 
  1340  0411                     	;# 
  1341  0412                     	;# 
  1342  0413                     	;# 
  1343  0414                     	;# 
  1344  0415                     	;# 
  1345  0416                     	;# 
  1346  0417                     	;# 
  1347  0418                     	;# 
  1348  0418                     	;# 
  1349  0419                     	;# 
  1350  041A                     	;# 
  1351  041B                     	;# 
  1352  041C                     	;# 
  1353  041D                     	;# 
  1354  041E                     	;# 
  1355  041F                     	;# 
  1356  0498                     	;# 
  1357  0498                     	;# 
  1358  0499                     	;# 
  1359  049A                     	;# 
  1360  049B                     	;# 
  1361  049B                     	;# 
  1362  049C                     	;# 
  1363  049D                     	;# 
  1364  049E                     	;# 
  1365  049F                     	;# 
  1366  0617                     	;# 
  1367  0618                     	;# 
  1368  0619                     	;# 
  1369  0619                     	;# 
  1370  061A                     	;# 
  1371  061B                     	;# 
  1372  061C                     	;# 
  1373  061C                     	;# 
  1374  061F                     	;# 
  1375  0691                     	;# 
  1376  0692                     	;# 
  1377  0693                     	;# 
  1378  0694                     	;# 
  1379  0695                     	;# 
  1380  0696                     	;# 
  1381  0697                     	;# 
  1382  0698                     	;# 
  1383  0699                     	;# 
  1384  0711                     	;# 
  1385  0712                     	;# 
  1386  0713                     	;# 
  1387  0714                     	;# 
  1388  0715                     	;# 
  1389  0716                     	;# 
  1390  0717                     	;# 
  1391  0718                     	;# 
  1392  0719                     	;# 
  1393  0891                     	;# 
  1394  0891                     	;# 
  1395  0891                     	;# 
  1396  0891                     	;# 
  1397  0891                     	;# 
  1398  0891                     	;# 
  1399  0892                     	;# 
  1400  0892                     	;# 
  1401  0892                     	;# 
  1402  0893                     	;# 
  1403  0893                     	;# 
  1404  0893                     	;# 
  1405  0893                     	;# 
  1406  0893                     	;# 
  1407  0893                     	;# 
  1408  0894                     	;# 
  1409  0894                     	;# 
  1410  0894                     	;# 
  1411  0895                     	;# 
  1412  0895                     	;# 
  1413  0895                     	;# 
  1414  0896                     	;# 
  1415  0896                     	;# 
  1416  0896                     	;# 
  1417  089B                     	;# 
  1418  0911                     	;# 
  1419  0912                     	;# 
  1420  0913                     	;# 
  1421  0914                     	;# 
  1422  0915                     	;# 
  1423  0916                     	;# 
  1424  0918                     	;# 
  1425  0919                     	;# 
  1426  091A                     	;# 
  1427  091B                     	;# 
  1428  091C                     	;# 
  1429  091D                     	;# 
  1430  091E                     	;# 
  1431  091F                     	;# 
  1432  0E0F                     	;# 
  1433  0E10                     	;# 
  1434  0E11                     	;# 
  1435  0E12                     	;# 
  1436  0E13                     	;# 
  1437  0E14                     	;# 
  1438  0E15                     	;# 
  1439  0E16                     	;# 
  1440  0E17                     	;# 
  1441  0E18                     	;# 
  1442  0E19                     	;# 
  1443  0E1A                     	;# 
  1444  0E1B                     	;# 
  1445  0E1C                     	;# 
  1446  0E1D                     	;# 
  1447  0E1E                     	;# 
  1448  0E1F                     	;# 
  1449  0E20                     	;# 
  1450  0E21                     	;# 
  1451  0E22                     	;# 
  1452  0E24                     	;# 
  1453  0E25                     	;# 
  1454  0E28                     	;# 
  1455  0E29                     	;# 
  1456  0E2A                     	;# 
  1457  0E2B                     	;# 
  1458  0E2C                     	;# 
  1459  0E2D                     	;# 
  1460  0E2E                     	;# 
  1461  0E2F                     	;# 
  1462  0E90                     	;# 
  1463  0E91                     	;# 
  1464  0E92                     	;# 
  1465  0E94                     	;# 
  1466  0E95                     	;# 
  1467  0E9C                     	;# 
  1468  0E9D                     	;# 
  1469  0E9E                     	;# 
  1470  0E9F                     	;# 
  1471  0EA0                     	;# 
  1472  0EA1                     	;# 
  1473  0EA2                     	;# 
  1474  0EA3                     	;# 
  1475  0EA4                     	;# 
  1476  0EA5                     	;# 
  1477  0EA6                     	;# 
  1478  0EA7                     	;# 
  1479  0F0F                     	;# 
  1480  0F10                     	;# 
  1481  0F11                     	;# 
  1482  0F12                     	;# 
  1483  0F13                     	;# 
  1484  0F14                     	;# 
  1485  0F15                     	;# 
  1486  0F16                     	;# 
  1487  0F17                     	;# 
  1488  0F18                     	;# 
  1489  0F19                     	;# 
  1490  0F1A                     	;# 
  1491  0F1B                     	;# 
  1492  0F1C                     	;# 
  1493  0F1D                     	;# 
  1494  0F1E                     	;# 
  1495  0F1F                     	;# 
  1496  0F20                     	;# 
  1497  0F21                     	;# 
  1498  0F22                     	;# 
  1499  0F23                     	;# 
  1500  0F24                     	;# 
  1501  0F25                     	;# 
  1502  0F26                     	;# 
  1503  0F27                     	;# 
  1504  0F28                     	;# 
  1505  0F29                     	;# 
  1506  0F2A                     	;# 
  1507  0F2B                     	;# 
  1508  0F2C                     	;# 
  1509  0F2D                     	;# 
  1510  0F2E                     	;# 
  1511  0F2F                     	;# 
  1512  0F30                     	;# 
  1513  0F31                     	;# 
  1514  0F32                     	;# 
  1515  0F33                     	;# 
  1516  0F34                     	;# 
  1517  0F35                     	;# 
  1518  0F36                     	;# 
  1519  0F37                     	;# 
  1520  0FE4                     	;# 
  1521  0FE5                     	;# 
  1522  0FE6                     	;# 
  1523  0FE7                     	;# 
  1524  0FE8                     	;# 
  1525  0FE9                     	;# 
  1526  0FEA                     	;# 
  1527  0FEB                     	;# 
  1528  0FED                     	;# 
  1529  0FEE                     	;# 
  1530  0FEF                     	;# 
  1531  0000                     	;# 
  1532  0001                     	;# 
  1533  0002                     	;# 
  1534  0003                     	;# 
  1535  0004                     	;# 
  1536  0005                     	;# 
  1537  0006                     	;# 
  1538  0007                     	;# 
  1539  0008                     	;# 
  1540  0009                     	;# 
  1541  000A                     	;# 
  1542  000B                     	;# 
  1543  000C                     	;# 
  1544  000D                     	;# 
  1545  000E                     	;# 
  1546  0010                     	;# 
  1547  0011                     	;# 
  1548  0012                     	;# 
  1549  0013                     	;# 
  1550  0014                     	;# 
  1551  0015                     	;# 
  1552  0015                     	;# 
  1553  0016                     	;# 
  1554  0016                     	;# 
  1555  0017                     	;# 
  1556  0018                     	;# 
  1557  0019                     	;# 
  1558  0019                     	;# 
  1559  001A                     	;# 
  1560  001B                     	;# 
  1561  001C                     	;# 
  1562  001D                     	;# 
  1563  001E                     	;# 
  1564  001F                     	;# 
  1565  008C                     	;# 
  1566  008D                     	;# 
  1567  008E                     	;# 
  1568  0090                     	;# 
  1569  0091                     	;# 
  1570  0092                     	;# 
  1571  0093                     	;# 
  1572  0094                     	;# 
  1573  0097                     	;# 
  1574  009B                     	;# 
  1575  009B                     	;# 
  1576  009C                     	;# 
  1577  009D                     	;# 
  1578  009E                     	;# 
  1579  009F                     	;# 
  1580  010C                     	;# 
  1581  010D                     	;# 
  1582  010E                     	;# 
  1583  0111                     	;# 
  1584  0112                     	;# 
  1585  0113                     	;# 
  1586  0114                     	;# 
  1587  0115                     	;# 
  1588  0116                     	;# 
  1589  0117                     	;# 
  1590  0118                     	;# 
  1591  0119                     	;# 
  1592  018C                     	;# 
  1593  018D                     	;# 
  1594  018E                     	;# 
  1595  0197                     	;# 
  1596  0199                     	;# 
  1597  0199                     	;# 
  1598  0199                     	;# 
  1599  019A                     	;# 
  1600  019A                     	;# 
  1601  019A                     	;# 
  1602  019B                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019B                     	;# 
  1606  019B                     	;# 
  1607  019C                     	;# 
  1608  019C                     	;# 
  1609  019C                     	;# 
  1610  019D                     	;# 
  1611  019D                     	;# 
  1612  019D                     	;# 
  1613  019E                     	;# 
  1614  019E                     	;# 
  1615  019E                     	;# 
  1616  019F                     	;# 
  1617  019F                     	;# 
  1618  019F                     	;# 
  1619  019F                     	;# 
  1620  019F                     	;# 
  1621  020C                     	;# 
  1622  020D                     	;# 
  1623  020E                     	;# 
  1624  0211                     	;# 
  1625  0211                     	;# 
  1626  0212                     	;# 
  1627  0212                     	;# 
  1628  0213                     	;# 
  1629  0213                     	;# 
  1630  0214                     	;# 
  1631  0214                     	;# 
  1632  0215                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0216                     	;# 
  1637  0216                     	;# 
  1638  0217                     	;# 
  1639  0217                     	;# 
  1640  0219                     	;# 
  1641  021A                     	;# 
  1642  021B                     	;# 
  1643  021C                     	;# 
  1644  021D                     	;# 
  1645  021D                     	;# 
  1646  021E                     	;# 
  1647  021F                     	;# 
  1648  028C                     	;# 
  1649  028D                     	;# 
  1650  028E                     	;# 
  1651  0291                     	;# 
  1652  0291                     	;# 
  1653  0292                     	;# 
  1654  0293                     	;# 
  1655  0294                     	;# 
  1656  0295                     	;# 
  1657  0295                     	;# 
  1658  0296                     	;# 
  1659  0297                     	;# 
  1660  0298                     	;# 
  1661  029F                     	;# 
  1662  030C                     	;# 
  1663  030D                     	;# 
  1664  030E                     	;# 
  1665  0311                     	;# 
  1666  0311                     	;# 
  1667  0312                     	;# 
  1668  0313                     	;# 
  1669  0314                     	;# 
  1670  0315                     	;# 
  1671  0315                     	;# 
  1672  0316                     	;# 
  1673  0317                     	;# 
  1674  0318                     	;# 
  1675  038C                     	;# 
  1676  038D                     	;# 
  1677  038E                     	;# 
  1678  0391                     	;# 
  1679  0392                     	;# 
  1680  0393                     	;# 
  1681  0394                     	;# 
  1682  0395                     	;# 
  1683  0396                     	;# 
  1684  0397                     	;# 
  1685  0398                     	;# 
  1686  0399                     	;# 
  1687  039A                     	;# 
  1688  039C                     	;# 
  1689  039D                     	;# 
  1690  039E                     	;# 
  1691  039F                     	;# 
  1692  0411                     	;# 
  1693  0411                     	;# 
  1694  0412                     	;# 
  1695  0413                     	;# 
  1696  0414                     	;# 
  1697  0415                     	;# 
  1698  0416                     	;# 
  1699  0417                     	;# 
  1700  0418                     	;# 
  1701  0418                     	;# 
  1702  0419                     	;# 
  1703  041A                     	;# 
  1704  041B                     	;# 
  1705  041C                     	;# 
  1706  041D                     	;# 
  1707  041E                     	;# 
  1708  041F                     	;# 
  1709  0498                     	;# 
  1710  0498                     	;# 
  1711  0499                     	;# 
  1712  049A                     	;# 
  1713  049B                     	;# 
  1714  049B                     	;# 
  1715  049C                     	;# 
  1716  049D                     	;# 
  1717  049E                     	;# 
  1718  049F                     	;# 
  1719  0617                     	;# 
  1720  0618                     	;# 
  1721  0619                     	;# 
  1722  0619                     	;# 
  1723  061A                     	;# 
  1724  061B                     	;# 
  1725  061C                     	;# 
  1726  061C                     	;# 
  1727  061F                     	;# 
  1728  0691                     	;# 
  1729  0692                     	;# 
  1730  0693                     	;# 
  1731  0694                     	;# 
  1732  0695                     	;# 
  1733  0696                     	;# 
  1734  0697                     	;# 
  1735  0698                     	;# 
  1736  0699                     	;# 
  1737  0711                     	;# 
  1738  0712                     	;# 
  1739  0713                     	;# 
  1740  0714                     	;# 
  1741  0715                     	;# 
  1742  0716                     	;# 
  1743  0717                     	;# 
  1744  0718                     	;# 
  1745  0719                     	;# 
  1746  0891                     	;# 
  1747  0891                     	;# 
  1748  0891                     	;# 
  1749  0891                     	;# 
  1750  0891                     	;# 
  1751  0891                     	;# 
  1752  0892                     	;# 
  1753  0892                     	;# 
  1754  0892                     	;# 
  1755  0893                     	;# 
  1756  0893                     	;# 
  1757  0893                     	;# 
  1758  0893                     	;# 
  1759  0893                     	;# 
  1760  0893                     	;# 
  1761  0894                     	;# 
  1762  0894                     	;# 
  1763  0894                     	;# 
  1764  0895                     	;# 
  1765  0895                     	;# 
  1766  0895                     	;# 
  1767  0896                     	;# 
  1768  0896                     	;# 
  1769  0896                     	;# 
  1770  089B                     	;# 
  1771  0911                     	;# 
  1772  0912                     	;# 
  1773  0913                     	;# 
  1774  0914                     	;# 
  1775  0915                     	;# 
  1776  0916                     	;# 
  1777  0918                     	;# 
  1778  0919                     	;# 
  1779  091A                     	;# 
  1780  091B                     	;# 
  1781  091C                     	;# 
  1782  091D                     	;# 
  1783  091E                     	;# 
  1784  091F                     	;# 
  1785  0E0F                     	;# 
  1786  0E10                     	;# 
  1787  0E11                     	;# 
  1788  0E12                     	;# 
  1789  0E13                     	;# 
  1790  0E14                     	;# 
  1791  0E15                     	;# 
  1792  0E16                     	;# 
  1793  0E17                     	;# 
  1794  0E18                     	;# 
  1795  0E19                     	;# 
  1796  0E1A                     	;# 
  1797  0E1B                     	;# 
  1798  0E1C                     	;# 
  1799  0E1D                     	;# 
  1800  0E1E                     	;# 
  1801  0E1F                     	;# 
  1802  0E20                     	;# 
  1803  0E21                     	;# 
  1804  0E22                     	;# 
  1805  0E24                     	;# 
  1806  0E25                     	;# 
  1807  0E28                     	;# 
  1808  0E29                     	;# 
  1809  0E2A                     	;# 
  1810  0E2B                     	;# 
  1811  0E2C                     	;# 
  1812  0E2D                     	;# 
  1813  0E2E                     	;# 
  1814  0E2F                     	;# 
  1815  0E90                     	;# 
  1816  0E91                     	;# 
  1817  0E92                     	;# 
  1818  0E94                     	;# 
  1819  0E95                     	;# 
  1820  0E9C                     	;# 
  1821  0E9D                     	;# 
  1822  0E9E                     	;# 
  1823  0E9F                     	;# 
  1824  0EA0                     	;# 
  1825  0EA1                     	;# 
  1826  0EA2                     	;# 
  1827  0EA3                     	;# 
  1828  0EA4                     	;# 
  1829  0EA5                     	;# 
  1830  0EA6                     	;# 
  1831  0EA7                     	;# 
  1832  0F0F                     	;# 
  1833  0F10                     	;# 
  1834  0F11                     	;# 
  1835  0F12                     	;# 
  1836  0F13                     	;# 
  1837  0F14                     	;# 
  1838  0F15                     	;# 
  1839  0F16                     	;# 
  1840  0F17                     	;# 
  1841  0F18                     	;# 
  1842  0F19                     	;# 
  1843  0F1A                     	;# 
  1844  0F1B                     	;# 
  1845  0F1C                     	;# 
  1846  0F1D                     	;# 
  1847  0F1E                     	;# 
  1848  0F1F                     	;# 
  1849  0F20                     	;# 
  1850  0F21                     	;# 
  1851  0F22                     	;# 
  1852  0F23                     	;# 
  1853  0F24                     	;# 
  1854  0F25                     	;# 
  1855  0F26                     	;# 
  1856  0F27                     	;# 
  1857  0F28                     	;# 
  1858  0F29                     	;# 
  1859  0F2A                     	;# 
  1860  0F2B                     	;# 
  1861  0F2C                     	;# 
  1862  0F2D                     	;# 
  1863  0F2E                     	;# 
  1864  0F2F                     	;# 
  1865  0F30                     	;# 
  1866  0F31                     	;# 
  1867  0F32                     	;# 
  1868  0F33                     	;# 
  1869  0F34                     	;# 
  1870  0F35                     	;# 
  1871  0F36                     	;# 
  1872  0F37                     	;# 
  1873  0FE4                     	;# 
  1874  0FE5                     	;# 
  1875  0FE6                     	;# 
  1876  0FE7                     	;# 
  1877  0FE8                     	;# 
  1878  0FE9                     	;# 
  1879  0FEA                     	;# 
  1880  0FEB                     	;# 
  1881  0FED                     	;# 
  1882  0FEE                     	;# 
  1883  0FEF                     	;# 
  1884  0000                     	;# 
  1885  0001                     	;# 
  1886  0002                     	;# 
  1887  0003                     	;# 
  1888  0004                     	;# 
  1889  0005                     	;# 
  1890  0006                     	;# 
  1891  0007                     	;# 
  1892  0008                     	;# 
  1893  0009                     	;# 
  1894  000A                     	;# 
  1895  000B                     	;# 
  1896  000C                     	;# 
  1897  000D                     	;# 
  1898  000E                     	;# 
  1899  0010                     	;# 
  1900  0011                     	;# 
  1901  0012                     	;# 
  1902  0013                     	;# 
  1903  0014                     	;# 
  1904  0015                     	;# 
  1905  0015                     	;# 
  1906  0016                     	;# 
  1907  0016                     	;# 
  1908  0017                     	;# 
  1909  0018                     	;# 
  1910  0019                     	;# 
  1911  0019                     	;# 
  1912  001A                     	;# 
  1913  001B                     	;# 
  1914  001C                     	;# 
  1915  001D                     	;# 
  1916  001E                     	;# 
  1917  001F                     	;# 
  1918  008C                     	;# 
  1919  008D                     	;# 
  1920  008E                     	;# 
  1921  0090                     	;# 
  1922  0091                     	;# 
  1923  0092                     	;# 
  1924  0093                     	;# 
  1925  0094                     	;# 
  1926  0097                     	;# 
  1927  009B                     	;# 
  1928  009B                     	;# 
  1929  009C                     	;# 
  1930  009D                     	;# 
  1931  009E                     	;# 
  1932  009F                     	;# 
  1933  010C                     	;# 
  1934  010D                     	;# 
  1935  010E                     	;# 
  1936  0111                     	;# 
  1937  0112                     	;# 
  1938  0113                     	;# 
  1939  0114                     	;# 
  1940  0115                     	;# 
  1941  0116                     	;# 
  1942  0117                     	;# 
  1943  0118                     	;# 
  1944  0119                     	;# 
  1945  018C                     	;# 
  1946  018D                     	;# 
  1947  018E                     	;# 
  1948  0197                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020D                     	;# 
  1976  020E                     	;# 
  1977  0211                     	;# 
  1978  0211                     	;# 
  1979  0212                     	;# 
  1980  0212                     	;# 
  1981  0213                     	;# 
  1982  0213                     	;# 
  1983  0214                     	;# 
  1984  0214                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0215                     	;# 
  1989  0216                     	;# 
  1990  0216                     	;# 
  1991  0217                     	;# 
  1992  0217                     	;# 
  1993  0219                     	;# 
  1994  021A                     	;# 
  1995  021B                     	;# 
  1996  021C                     	;# 
  1997  021D                     	;# 
  1998  021D                     	;# 
  1999  021E                     	;# 
  2000  021F                     	;# 
  2001  028C                     	;# 
  2002  028D                     	;# 
  2003  028E                     	;# 
  2004  0291                     	;# 
  2005  0291                     	;# 
  2006  0292                     	;# 
  2007  0293                     	;# 
  2008  0294                     	;# 
  2009  0295                     	;# 
  2010  0295                     	;# 
  2011  0296                     	;# 
  2012  0297                     	;# 
  2013  0298                     	;# 
  2014  029F                     	;# 
  2015  030C                     	;# 
  2016  030D                     	;# 
  2017  030E                     	;# 
  2018  0311                     	;# 
  2019  0311                     	;# 
  2020  0312                     	;# 
  2021  0313                     	;# 
  2022  0314                     	;# 
  2023  0315                     	;# 
  2024  0315                     	;# 
  2025  0316                     	;# 
  2026  0317                     	;# 
  2027  0318                     	;# 
  2028  038C                     	;# 
  2029  038D                     	;# 
  2030  038E                     	;# 
  2031  0391                     	;# 
  2032  0392                     	;# 
  2033  0393                     	;# 
  2034  0394                     	;# 
  2035  0395                     	;# 
  2036  0396                     	;# 
  2037  0397                     	;# 
  2038  0398                     	;# 
  2039  0399                     	;# 
  2040  039A                     	;# 
  2041  039C                     	;# 
  2042  039D                     	;# 
  2043  039E                     	;# 
  2044  039F                     	;# 
  2045  0411                     	;# 
  2046  0411                     	;# 
  2047  0412                     	;# 
  2048  0413                     	;# 
  2049  0414                     	;# 
  2050  0415                     	;# 
  2051  0416                     	;# 
  2052  0417                     	;# 
  2053  0418                     	;# 
  2054  0418                     	;# 
  2055  0419                     	;# 
  2056  041A                     	;# 
  2057  041B                     	;# 
  2058  041C                     	;# 
  2059  041D                     	;# 
  2060  041E                     	;# 
  2061  041F                     	;# 
  2062  0498                     	;# 
  2063  0498                     	;# 
  2064  0499                     	;# 
  2065  049A                     	;# 
  2066  049B                     	;# 
  2067  049B                     	;# 
  2068  049C                     	;# 
  2069  049D                     	;# 
  2070  049E                     	;# 
  2071  049F                     	;# 
  2072  0617                     	;# 
  2073  0618                     	;# 
  2074  0619                     	;# 
  2075  0619                     	;# 
  2076  061A                     	;# 
  2077  061B                     	;# 
  2078  061C                     	;# 
  2079  061C                     	;# 
  2080  061F                     	;# 
  2081  0691                     	;# 
  2082  0692                     	;# 
  2083  0693                     	;# 
  2084  0694                     	;# 
  2085  0695                     	;# 
  2086  0696                     	;# 
  2087  0697                     	;# 
  2088  0698                     	;# 
  2089  0699                     	;# 
  2090  0711                     	;# 
  2091  0712                     	;# 
  2092  0713                     	;# 
  2093  0714                     	;# 
  2094  0715                     	;# 
  2095  0716                     	;# 
  2096  0717                     	;# 
  2097  0718                     	;# 
  2098  0719                     	;# 
  2099  0891                     	;# 
  2100  0891                     	;# 
  2101  0891                     	;# 
  2102  0891                     	;# 
  2103  0891                     	;# 
  2104  0891                     	;# 
  2105  0892                     	;# 
  2106  0892                     	;# 
  2107  0892                     	;# 
  2108  0893                     	;# 
  2109  0893                     	;# 
  2110  0893                     	;# 
  2111  0893                     	;# 
  2112  0893                     	;# 
  2113  0893                     	;# 
  2114  0894                     	;# 
  2115  0894                     	;# 
  2116  0894                     	;# 
  2117  0895                     	;# 
  2118  0895                     	;# 
  2119  0895                     	;# 
  2120  0896                     	;# 
  2121  0896                     	;# 
  2122  0896                     	;# 
  2123  089B                     	;# 
  2124  0911                     	;# 
  2125  0912                     	;# 
  2126  0913                     	;# 
  2127  0914                     	;# 
  2128  0915                     	;# 
  2129  0916                     	;# 
  2130  0918                     	;# 
  2131  0919                     	;# 
  2132  091A                     	;# 
  2133  091B                     	;# 
  2134  091C                     	;# 
  2135  091D                     	;# 
  2136  091E                     	;# 
  2137  091F                     	;# 
  2138  0E0F                     	;# 
  2139  0E10                     	;# 
  2140  0E11                     	;# 
  2141  0E12                     	;# 
  2142  0E13                     	;# 
  2143  0E14                     	;# 
  2144  0E15                     	;# 
  2145  0E16                     	;# 
  2146  0E17                     	;# 
  2147  0E18                     	;# 
  2148  0E19                     	;# 
  2149  0E1A                     	;# 
  2150  0E1B                     	;# 
  2151  0E1C                     	;# 
  2152  0E1D                     	;# 
  2153  0E1E                     	;# 
  2154  0E1F                     	;# 
  2155  0E20                     	;# 
  2156  0E21                     	;# 
  2157  0E22                     	;# 
  2158  0E24                     	;# 
  2159  0E25                     	;# 
  2160  0E28                     	;# 
  2161  0E29                     	;# 
  2162  0E2A                     	;# 
  2163  0E2B                     	;# 
  2164  0E2C                     	;# 
  2165  0E2D                     	;# 
  2166  0E2E                     	;# 
  2167  0E2F                     	;# 
  2168  0E90                     	;# 
  2169  0E91                     	;# 
  2170  0E92                     	;# 
  2171  0E94                     	;# 
  2172  0E95                     	;# 
  2173  0E9C                     	;# 
  2174  0E9D                     	;# 
  2175  0E9E                     	;# 
  2176  0E9F                     	;# 
  2177  0EA0                     	;# 
  2178  0EA1                     	;# 
  2179  0EA2                     	;# 
  2180  0EA3                     	;# 
  2181  0EA4                     	;# 
  2182  0EA5                     	;# 
  2183  0EA6                     	;# 
  2184  0EA7                     	;# 
  2185  0F0F                     	;# 
  2186  0F10                     	;# 
  2187  0F11                     	;# 
  2188  0F12                     	;# 
  2189  0F13                     	;# 
  2190  0F14                     	;# 
  2191  0F15                     	;# 
  2192  0F16                     	;# 
  2193  0F17                     	;# 
  2194  0F18                     	;# 
  2195  0F19                     	;# 
  2196  0F1A                     	;# 
  2197  0F1B                     	;# 
  2198  0F1C                     	;# 
  2199  0F1D                     	;# 
  2200  0F1E                     	;# 
  2201  0F1F                     	;# 
  2202  0F20                     	;# 
  2203  0F21                     	;# 
  2204  0F22                     	;# 
  2205  0F23                     	;# 
  2206  0F24                     	;# 
  2207  0F25                     	;# 
  2208  0F26                     	;# 
  2209  0F27                     	;# 
  2210  0F28                     	;# 
  2211  0F29                     	;# 
  2212  0F2A                     	;# 
  2213  0F2B                     	;# 
  2214  0F2C                     	;# 
  2215  0F2D                     	;# 
  2216  0F2E                     	;# 
  2217  0F2F                     	;# 
  2218  0F30                     	;# 
  2219  0F31                     	;# 
  2220  0F32                     	;# 
  2221  0F33                     	;# 
  2222  0F34                     	;# 
  2223  0F35                     	;# 
  2224  0F36                     	;# 
  2225  0F37                     	;# 
  2226  0FE4                     	;# 
  2227  0FE5                     	;# 
  2228  0FE6                     	;# 
  2229  0FE7                     	;# 
  2230  0FE8                     	;# 
  2231  0FE9                     	;# 
  2232  0FEA                     	;# 
  2233  0FEB                     	;# 
  2234  0FED                     	;# 
  2235  0FEE                     	;# 
  2236  0FEF                     	;# 
  2237  0000                     	;# 
  2238  0001                     	;# 
  2239  0002                     	;# 
  2240  0003                     	;# 
  2241  0004                     	;# 
  2242  0005                     	;# 
  2243  0006                     	;# 
  2244  0007                     	;# 
  2245  0008                     	;# 
  2246  0009                     	;# 
  2247  000A                     	;# 
  2248  000B                     	;# 
  2249  000C                     	;# 
  2250  000D                     	;# 
  2251  000E                     	;# 
  2252  0010                     	;# 
  2253  0011                     	;# 
  2254  0012                     	;# 
  2255  0013                     	;# 
  2256  0014                     	;# 
  2257  0015                     	;# 
  2258  0015                     	;# 
  2259  0016                     	;# 
  2260  0016                     	;# 
  2261  0017                     	;# 
  2262  0018                     	;# 
  2263  0019                     	;# 
  2264  0019                     	;# 
  2265  001A                     	;# 
  2266  001B                     	;# 
  2267  001C                     	;# 
  2268  001D                     	;# 
  2269  001E                     	;# 
  2270  001F                     	;# 
  2271  008C                     	;# 
  2272  008D                     	;# 
  2273  008E                     	;# 
  2274  0090                     	;# 
  2275  0091                     	;# 
  2276  0092                     	;# 
  2277  0093                     	;# 
  2278  0094                     	;# 
  2279  0097                     	;# 
  2280  009B                     	;# 
  2281  009B                     	;# 
  2282  009C                     	;# 
  2283  009D                     	;# 
  2284  009E                     	;# 
  2285  009F                     	;# 
  2286  010C                     	;# 
  2287  010D                     	;# 
  2288  010E                     	;# 
  2289  0111                     	;# 
  2290  0112                     	;# 
  2291  0113                     	;# 
  2292  0114                     	;# 
  2293  0115                     	;# 
  2294  0116                     	;# 
  2295  0117                     	;# 
  2296  0118                     	;# 
  2297  0119                     	;# 
  2298  018C                     	;# 
  2299  018D                     	;# 
  2300  018E                     	;# 
  2301  0197                     	;# 
  2302  0199                     	;# 
  2303  0199                     	;# 
  2304  0199                     	;# 
  2305  019A                     	;# 
  2306  019A                     	;# 
  2307  019A                     	;# 
  2308  019B                     	;# 
  2309  019B                     	;# 
  2310  019B                     	;# 
  2311  019B                     	;# 
  2312  019B                     	;# 
  2313  019C                     	;# 
  2314  019C                     	;# 
  2315  019C                     	;# 
  2316  019D                     	;# 
  2317  019D                     	;# 
  2318  019D                     	;# 
  2319  019E                     	;# 
  2320  019E                     	;# 
  2321  019E                     	;# 
  2322  019F                     	;# 
  2323  019F                     	;# 
  2324  019F                     	;# 
  2325  019F                     	;# 
  2326  019F                     	;# 
  2327  020C                     	;# 
  2328  020D                     	;# 
  2329  020E                     	;# 
  2330  0211                     	;# 
  2331  0211                     	;# 
  2332  0212                     	;# 
  2333  0212                     	;# 
  2334  0213                     	;# 
  2335  0213                     	;# 
  2336  0214                     	;# 
  2337  0214                     	;# 
  2338  0215                     	;# 
  2339  0215                     	;# 
  2340  0215                     	;# 
  2341  0215                     	;# 
  2342  0216                     	;# 
  2343  0216                     	;# 
  2344  0217                     	;# 
  2345  0217                     	;# 
  2346  0219                     	;# 
  2347  021A                     	;# 
  2348  021B                     	;# 
  2349  021C                     	;# 
  2350  021D                     	;# 
  2351  021D                     	;# 
  2352  021E                     	;# 
  2353  021F                     	;# 
  2354  028C                     	;# 
  2355  028D                     	;# 
  2356  028E                     	;# 
  2357  0291                     	;# 
  2358  0291                     	;# 
  2359  0292                     	;# 
  2360  0293                     	;# 
  2361  0294                     	;# 
  2362  0295                     	;# 
  2363  0295                     	;# 
  2364  0296                     	;# 
  2365  0297                     	;# 
  2366  0298                     	;# 
  2367  029F                     	;# 
  2368  030C                     	;# 
  2369  030D                     	;# 
  2370  030E                     	;# 
  2371  0311                     	;# 
  2372  0311                     	;# 
  2373  0312                     	;# 
  2374  0313                     	;# 
  2375  0314                     	;# 
  2376  0315                     	;# 
  2377  0315                     	;# 
  2378  0316                     	;# 
  2379  0317                     	;# 
  2380  0318                     	;# 
  2381  038C                     	;# 
  2382  038D                     	;# 
  2383  038E                     	;# 
  2384  0391                     	;# 
  2385  0392                     	;# 
  2386  0393                     	;# 
  2387  0394                     	;# 
  2388  0395                     	;# 
  2389  0396                     	;# 
  2390  0397                     	;# 
  2391  0398                     	;# 
  2392  0399                     	;# 
  2393  039A                     	;# 
  2394  039C                     	;# 
  2395  039D                     	;# 
  2396  039E                     	;# 
  2397  039F                     	;# 
  2398  0411                     	;# 
  2399  0411                     	;# 
  2400  0412                     	;# 
  2401  0413                     	;# 
  2402  0414                     	;# 
  2403  0415                     	;# 
  2404  0416                     	;# 
  2405  0417                     	;# 
  2406  0418                     	;# 
  2407  0418                     	;# 
  2408  0419                     	;# 
  2409  041A                     	;# 
  2410  041B                     	;# 
  2411  041C                     	;# 
  2412  041D                     	;# 
  2413  041E                     	;# 
  2414  041F                     	;# 
  2415  0498                     	;# 
  2416  0498                     	;# 
  2417  0499                     	;# 
  2418  049A                     	;# 
  2419  049B                     	;# 
  2420  049B                     	;# 
  2421  049C                     	;# 
  2422  049D                     	;# 
  2423  049E                     	;# 
  2424  049F                     	;# 
  2425  0617                     	;# 
  2426  0618                     	;# 
  2427  0619                     	;# 
  2428  0619                     	;# 
  2429  061A                     	;# 
  2430  061B                     	;# 
  2431  061C                     	;# 
  2432  061C                     	;# 
  2433  061F                     	;# 
  2434  0691                     	;# 
  2435  0692                     	;# 
  2436  0693                     	;# 
  2437  0694                     	;# 
  2438  0695                     	;# 
  2439  0696                     	;# 
  2440  0697                     	;# 
  2441  0698                     	;# 
  2442  0699                     	;# 
  2443  0711                     	;# 
  2444  0712                     	;# 
  2445  0713                     	;# 
  2446  0714                     	;# 
  2447  0715                     	;# 
  2448  0716                     	;# 
  2449  0717                     	;# 
  2450  0718                     	;# 
  2451  0719                     	;# 
  2452  0891                     	;# 
  2453  0891                     	;# 
  2454  0891                     	;# 
  2455  0891                     	;# 
  2456  0891                     	;# 
  2457  0891                     	;# 
  2458  0892                     	;# 
  2459  0892                     	;# 
  2460  0892                     	;# 
  2461  0893                     	;# 
  2462  0893                     	;# 
  2463  0893                     	;# 
  2464  0893                     	;# 
  2465  0893                     	;# 
  2466  0893                     	;# 
  2467  0894                     	;# 
  2468  0894                     	;# 
  2469  0894                     	;# 
  2470  0895                     	;# 
  2471  0895                     	;# 
  2472  0895                     	;# 
  2473  0896                     	;# 
  2474  0896                     	;# 
  2475  0896                     	;# 
  2476  089B                     	;# 
  2477  0911                     	;# 
  2478  0912                     	;# 
  2479  0913                     	;# 
  2480  0914                     	;# 
  2481  0915                     	;# 
  2482  0916                     	;# 
  2483  0918                     	;# 
  2484  0919                     	;# 
  2485  091A                     	;# 
  2486  091B                     	;# 
  2487  091C                     	;# 
  2488  091D                     	;# 
  2489  091E                     	;# 
  2490  091F                     	;# 
  2491  0E0F                     	;# 
  2492  0E10                     	;# 
  2493  0E11                     	;# 
  2494  0E12                     	;# 
  2495  0E13                     	;# 
  2496  0E14                     	;# 
  2497  0E15                     	;# 
  2498  0E16                     	;# 
  2499  0E17                     	;# 
  2500  0E18                     	;# 
  2501  0E19                     	;# 
  2502  0E1A                     	;# 
  2503  0E1B                     	;# 
  2504  0E1C                     	;# 
  2505  0E1D                     	;# 
  2506  0E1E                     	;# 
  2507  0E1F                     	;# 
  2508  0E20                     	;# 
  2509  0E21                     	;# 
  2510  0E22                     	;# 
  2511  0E24                     	;# 
  2512  0E25                     	;# 
  2513  0E28                     	;# 
  2514  0E29                     	;# 
  2515  0E2A                     	;# 
  2516  0E2B                     	;# 
  2517  0E2C                     	;# 
  2518  0E2D                     	;# 
  2519  0E2E                     	;# 
  2520  0E2F                     	;# 
  2521  0E90                     	;# 
  2522  0E91                     	;# 
  2523  0E92                     	;# 
  2524  0E94                     	;# 
  2525  0E95                     	;# 
  2526  0E9C                     	;# 
  2527  0E9D                     	;# 
  2528  0E9E                     	;# 
  2529  0E9F                     	;# 
  2530  0EA0                     	;# 
  2531  0EA1                     	;# 
  2532  0EA2                     	;# 
  2533  0EA3                     	;# 
  2534  0EA4                     	;# 
  2535  0EA5                     	;# 
  2536  0EA6                     	;# 
  2537  0EA7                     	;# 
  2538  0F0F                     	;# 
  2539  0F10                     	;# 
  2540  0F11                     	;# 
  2541  0F12                     	;# 
  2542  0F13                     	;# 
  2543  0F14                     	;# 
  2544  0F15                     	;# 
  2545  0F16                     	;# 
  2546  0F17                     	;# 
  2547  0F18                     	;# 
  2548  0F19                     	;# 
  2549  0F1A                     	;# 
  2550  0F1B                     	;# 
  2551  0F1C                     	;# 
  2552  0F1D                     	;# 
  2553  0F1E                     	;# 
  2554  0F1F                     	;# 
  2555  0F20                     	;# 
  2556  0F21                     	;# 
  2557  0F22                     	;# 
  2558  0F23                     	;# 
  2559  0F24                     	;# 
  2560  0F25                     	;# 
  2561  0F26                     	;# 
  2562  0F27                     	;# 
  2563  0F28                     	;# 
  2564  0F29                     	;# 
  2565  0F2A                     	;# 
  2566  0F2B                     	;# 
  2567  0F2C                     	;# 
  2568  0F2D                     	;# 
  2569  0F2E                     	;# 
  2570  0F2F                     	;# 
  2571  0F30                     	;# 
  2572  0F31                     	;# 
  2573  0F32                     	;# 
  2574  0F33                     	;# 
  2575  0F34                     	;# 
  2576  0F35                     	;# 
  2577  0F36                     	;# 
  2578  0F37                     	;# 
  2579  0FE4                     	;# 
  2580  0FE5                     	;# 
  2581  0FE6                     	;# 
  2582  0FE7                     	;# 
  2583  0FE8                     	;# 
  2584  0FE9                     	;# 
  2585  0FEA                     	;# 
  2586  0FEB                     	;# 
  2587  0FED                     	;# 
  2588  0FEE                     	;# 
  2589  0FEF                     	;# 
  2590  0000                     	;# 
  2591  0001                     	;# 
  2592  0002                     	;# 
  2593  0003                     	;# 
  2594  0004                     	;# 
  2595  0005                     	;# 
  2596  0006                     	;# 
  2597  0007                     	;# 
  2598  0008                     	;# 
  2599  0009                     	;# 
  2600  000A                     	;# 
  2601  000B                     	;# 
  2602  000C                     	;# 
  2603  000D                     	;# 
  2604  000E                     	;# 
  2605  0010                     	;# 
  2606  0011                     	;# 
  2607  0012                     	;# 
  2608  0013                     	;# 
  2609  0014                     	;# 
  2610  0015                     	;# 
  2611  0015                     	;# 
  2612  0016                     	;# 
  2613  0016                     	;# 
  2614  0017                     	;# 
  2615  0018                     	;# 
  2616  0019                     	;# 
  2617  0019                     	;# 
  2618  001A                     	;# 
  2619  001B                     	;# 
  2620  001C                     	;# 
  2621  001D                     	;# 
  2622  001E                     	;# 
  2623  001F                     	;# 
  2624  008C                     	;# 
  2625  008D                     	;# 
  2626  008E                     	;# 
  2627  0090                     	;# 
  2628  0091                     	;# 
  2629  0092                     	;# 
  2630  0093                     	;# 
  2631  0094                     	;# 
  2632  0097                     	;# 
  2633  009B                     	;# 
  2634  009B                     	;# 
  2635  009C                     	;# 
  2636  009D                     	;# 
  2637  009E                     	;# 
  2638  009F                     	;# 
  2639  010C                     	;# 
  2640  010D                     	;# 
  2641  010E                     	;# 
  2642  0111                     	;# 
  2643  0112                     	;# 
  2644  0113                     	;# 
  2645  0114                     	;# 
  2646  0115                     	;# 
  2647  0116                     	;# 
  2648  0117                     	;# 
  2649  0118                     	;# 
  2650  0119                     	;# 
  2651  018C                     	;# 
  2652  018D                     	;# 
  2653  018E                     	;# 
  2654  0197                     	;# 
  2655  0199                     	;# 
  2656  0199                     	;# 
  2657  0199                     	;# 
  2658  019A                     	;# 
  2659  019A                     	;# 
  2660  019A                     	;# 
  2661  019B                     	;# 
  2662  019B                     	;# 
  2663  019B                     	;# 
  2664  019B                     	;# 
  2665  019B                     	;# 
  2666  019C                     	;# 
  2667  019C                     	;# 
  2668  019C                     	;# 
  2669  019D                     	;# 
  2670  019D                     	;# 
  2671  019D                     	;# 
  2672  019E                     	;# 
  2673  019E                     	;# 
  2674  019E                     	;# 
  2675  019F                     	;# 
  2676  019F                     	;# 
  2677  019F                     	;# 
  2678  019F                     	;# 
  2679  019F                     	;# 
  2680  020C                     	;# 
  2681  020D                     	;# 
  2682  020E                     	;# 
  2683  0211                     	;# 
  2684  0211                     	;# 
  2685  0212                     	;# 
  2686  0212                     	;# 
  2687  0213                     	;# 
  2688  0213                     	;# 
  2689  0214                     	;# 
  2690  0214                     	;# 
  2691  0215                     	;# 
  2692  0215                     	;# 
  2693  0215                     	;# 
  2694  0215                     	;# 
  2695  0216                     	;# 
  2696  0216                     	;# 
  2697  0217                     	;# 
  2698  0217                     	;# 
  2699  0219                     	;# 
  2700  021A                     	;# 
  2701  021B                     	;# 
  2702  021C                     	;# 
  2703  021D                     	;# 
  2704  021D                     	;# 
  2705  021E                     	;# 
  2706  021F                     	;# 
  2707  028C                     	;# 
  2708  028D                     	;# 
  2709  028E                     	;# 
  2710  0291                     	;# 
  2711  0291                     	;# 
  2712  0292                     	;# 
  2713  0293                     	;# 
  2714  0294                     	;# 
  2715  0295                     	;# 
  2716  0295                     	;# 
  2717  0296                     	;# 
  2718  0297                     	;# 
  2719  0298                     	;# 
  2720  029F                     	;# 
  2721  030C                     	;# 
  2722  030D                     	;# 
  2723  030E                     	;# 
  2724  0311                     	;# 
  2725  0311                     	;# 
  2726  0312                     	;# 
  2727  0313                     	;# 
  2728  0314                     	;# 
  2729  0315                     	;# 
  2730  0315                     	;# 
  2731  0316                     	;# 
  2732  0317                     	;# 
  2733  0318                     	;# 
  2734  038C                     	;# 
  2735  038D                     	;# 
  2736  038E                     	;# 
  2737  0391                     	;# 
  2738  0392                     	;# 
  2739  0393                     	;# 
  2740  0394                     	;# 
  2741  0395                     	;# 
  2742  0396                     	;# 
  2743  0397                     	;# 
  2744  0398                     	;# 
  2745  0399                     	;# 
  2746  039A                     	;# 
  2747  039C                     	;# 
  2748  039D                     	;# 
  2749  039E                     	;# 
  2750  039F                     	;# 
  2751  0411                     	;# 
  2752  0411                     	;# 
  2753  0412                     	;# 
  2754  0413                     	;# 
  2755  0414                     	;# 
  2756  0415                     	;# 
  2757  0416                     	;# 
  2758  0417                     	;# 
  2759  0418                     	;# 
  2760  0418                     	;# 
  2761  0419                     	;# 
  2762  041A                     	;# 
  2763  041B                     	;# 
  2764  041C                     	;# 
  2765  041D                     	;# 
  2766  041E                     	;# 
  2767  041F                     	;# 
  2768  0498                     	;# 
  2769  0498                     	;# 
  2770  0499                     	;# 
  2771  049A                     	;# 
  2772  049B                     	;# 
  2773  049B                     	;# 
  2774  049C                     	;# 
  2775  049D                     	;# 
  2776  049E                     	;# 
  2777  049F                     	;# 
  2778  0617                     	;# 
  2779  0618                     	;# 
  2780  0619                     	;# 
  2781  0619                     	;# 
  2782  061A                     	;# 
  2783  061B                     	;# 
  2784  061C                     	;# 
  2785  061C                     	;# 
  2786  061F                     	;# 
  2787  0691                     	;# 
  2788  0692                     	;# 
  2789  0693                     	;# 
  2790  0694                     	;# 
  2791  0695                     	;# 
  2792  0696                     	;# 
  2793  0697                     	;# 
  2794  0698                     	;# 
  2795  0699                     	;# 
  2796  0711                     	;# 
  2797  0712                     	;# 
  2798  0713                     	;# 
  2799  0714                     	;# 
  2800  0715                     	;# 
  2801  0716                     	;# 
  2802  0717                     	;# 
  2803  0718                     	;# 
  2804  0719                     	;# 
  2805  0891                     	;# 
  2806  0891                     	;# 
  2807  0891                     	;# 
  2808  0891                     	;# 
  2809  0891                     	;# 
  2810  0891                     	;# 
  2811  0892                     	;# 
  2812  0892                     	;# 
  2813  0892                     	;# 
  2814  0893                     	;# 
  2815  0893                     	;# 
  2816  0893                     	;# 
  2817  0893                     	;# 
  2818  0893                     	;# 
  2819  0893                     	;# 
  2820  0894                     	;# 
  2821  0894                     	;# 
  2822  0894                     	;# 
  2823  0895                     	;# 
  2824  0895                     	;# 
  2825  0895                     	;# 
  2826  0896                     	;# 
  2827  0896                     	;# 
  2828  0896                     	;# 
  2829  089B                     	;# 
  2830  0911                     	;# 
  2831  0912                     	;# 
  2832  0913                     	;# 
  2833  0914                     	;# 
  2834  0915                     	;# 
  2835  0916                     	;# 
  2836  0918                     	;# 
  2837  0919                     	;# 
  2838  091A                     	;# 
  2839  091B                     	;# 
  2840  091C                     	;# 
  2841  091D                     	;# 
  2842  091E                     	;# 
  2843  091F                     	;# 
  2844  0E0F                     	;# 
  2845  0E10                     	;# 
  2846  0E11                     	;# 
  2847  0E12                     	;# 
  2848  0E13                     	;# 
  2849  0E14                     	;# 
  2850  0E15                     	;# 
  2851  0E16                     	;# 
  2852  0E17                     	;# 
  2853  0E18                     	;# 
  2854  0E19                     	;# 
  2855  0E1A                     	;# 
  2856  0E1B                     	;# 
  2857  0E1C                     	;# 
  2858  0E1D                     	;# 
  2859  0E1E                     	;# 
  2860  0E1F                     	;# 
  2861  0E20                     	;# 
  2862  0E21                     	;# 
  2863  0E22                     	;# 
  2864  0E24                     	;# 
  2865  0E25                     	;# 
  2866  0E28                     	;# 
  2867  0E29                     	;# 
  2868  0E2A                     	;# 
  2869  0E2B                     	;# 
  2870  0E2C                     	;# 
  2871  0E2D                     	;# 
  2872  0E2E                     	;# 
  2873  0E2F                     	;# 
  2874  0E90                     	;# 
  2875  0E91                     	;# 
  2876  0E92                     	;# 
  2877  0E94                     	;# 
  2878  0E95                     	;# 
  2879  0E9C                     	;# 
  2880  0E9D                     	;# 
  2881  0E9E                     	;# 
  2882  0E9F                     	;# 
  2883  0EA0                     	;# 
  2884  0EA1                     	;# 
  2885  0EA2                     	;# 
  2886  0EA3                     	;# 
  2887  0EA4                     	;# 
  2888  0EA5                     	;# 
  2889  0EA6                     	;# 
  2890  0EA7                     	;# 
  2891  0F0F                     	;# 
  2892  0F10                     	;# 
  2893  0F11                     	;# 
  2894  0F12                     	;# 
  2895  0F13                     	;# 
  2896  0F14                     	;# 
  2897  0F15                     	;# 
  2898  0F16                     	;# 
  2899  0F17                     	;# 
  2900  0F18                     	;# 
  2901  0F19                     	;# 
  2902  0F1A                     	;# 
  2903  0F1B                     	;# 
  2904  0F1C                     	;# 
  2905  0F1D                     	;# 
  2906  0F1E                     	;# 
  2907  0F1F                     	;# 
  2908  0F20                     	;# 
  2909  0F21                     	;# 
  2910  0F22                     	;# 
  2911  0F23                     	;# 
  2912  0F24                     	;# 
  2913  0F25                     	;# 
  2914  0F26                     	;# 
  2915  0F27                     	;# 
  2916  0F28                     	;# 
  2917  0F29                     	;# 
  2918  0F2A                     	;# 
  2919  0F2B                     	;# 
  2920  0F2C                     	;# 
  2921  0F2D                     	;# 
  2922  0F2E                     	;# 
  2923  0F2F                     	;# 
  2924  0F30                     	;# 
  2925  0F31                     	;# 
  2926  0F32                     	;# 
  2927  0F33                     	;# 
  2928  0F34                     	;# 
  2929  0F35                     	;# 
  2930  0F36                     	;# 
  2931  0F37                     	;# 
  2932  0FE4                     	;# 
  2933  0FE5                     	;# 
  2934  0FE6                     	;# 
  2935  0FE7                     	;# 
  2936  0FE8                     	;# 
  2937  0FE9                     	;# 
  2938  0FEA                     	;# 
  2939  0FEB                     	;# 
  2940  0FED                     	;# 
  2941  0FEE                     	;# 
  2942  0FEF                     	;# 
  2943  0000                     	;# 
  2944  0001                     	;# 
  2945  0002                     	;# 
  2946  0003                     	;# 
  2947  0004                     	;# 
  2948  0005                     	;# 
  2949  0006                     	;# 
  2950  0007                     	;# 
  2951  0008                     	;# 
  2952  0009                     	;# 
  2953  000A                     	;# 
  2954  000B                     	;# 
  2955  000C                     	;# 
  2956  000D                     	;# 
  2957  000E                     	;# 
  2958  0010                     	;# 
  2959  0011                     	;# 
  2960  0012                     	;# 
  2961  0013                     	;# 
  2962  0014                     	;# 
  2963  0015                     	;# 
  2964  0015                     	;# 
  2965  0016                     	;# 
  2966  0016                     	;# 
  2967  0017                     	;# 
  2968  0018                     	;# 
  2969  0019                     	;# 
  2970  0019                     	;# 
  2971  001A                     	;# 
  2972  001B                     	;# 
  2973  001C                     	;# 
  2974  001D                     	;# 
  2975  001E                     	;# 
  2976  001F                     	;# 
  2977  008C                     	;# 
  2978  008D                     	;# 
  2979  008E                     	;# 
  2980  0090                     	;# 
  2981  0091                     	;# 
  2982  0092                     	;# 
  2983  0093                     	;# 
  2984  0094                     	;# 
  2985  0097                     	;# 
  2986  009B                     	;# 
  2987  009B                     	;# 
  2988  009C                     	;# 
  2989  009D                     	;# 
  2990  009E                     	;# 
  2991  009F                     	;# 
  2992  010C                     	;# 
  2993  010D                     	;# 
  2994  010E                     	;# 
  2995  0111                     	;# 
  2996  0112                     	;# 
  2997  0113                     	;# 
  2998  0114                     	;# 
  2999  0115                     	;# 
  3000  0116                     	;# 
  3001  0117                     	;# 
  3002  0118                     	;# 
  3003  0119                     	;# 
  3004  018C                     	;# 
  3005  018D                     	;# 
  3006  018E                     	;# 
  3007  0197                     	;# 
  3008  0199                     	;# 
  3009  0199                     	;# 
  3010  0199                     	;# 
  3011  019A                     	;# 
  3012  019A                     	;# 
  3013  019A                     	;# 
  3014  019B                     	;# 
  3015  019B                     	;# 
  3016  019B                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019C                     	;# 
  3020  019C                     	;# 
  3021  019C                     	;# 
  3022  019D                     	;# 
  3023  019D                     	;# 
  3024  019D                     	;# 
  3025  019E                     	;# 
  3026  019E                     	;# 
  3027  019E                     	;# 
  3028  019F                     	;# 
  3029  019F                     	;# 
  3030  019F                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  020C                     	;# 
  3034  020D                     	;# 
  3035  020E                     	;# 
  3036  0211                     	;# 
  3037  0211                     	;# 
  3038  0212                     	;# 
  3039  0212                     	;# 
  3040  0213                     	;# 
  3041  0213                     	;# 
  3042  0214                     	;# 
  3043  0214                     	;# 
  3044  0215                     	;# 
  3045  0215                     	;# 
  3046  0215                     	;# 
  3047  0215                     	;# 
  3048  0216                     	;# 
  3049  0216                     	;# 
  3050  0217                     	;# 
  3051  0217                     	;# 
  3052  0219                     	;# 
  3053  021A                     	;# 
  3054  021B                     	;# 
  3055  021C                     	;# 
  3056  021D                     	;# 
  3057  021D                     	;# 
  3058  021E                     	;# 
  3059  021F                     	;# 
  3060  028C                     	;# 
  3061  028D                     	;# 
  3062  028E                     	;# 
  3063  0291                     	;# 
  3064  0291                     	;# 
  3065  0292                     	;# 
  3066  0293                     	;# 
  3067  0294                     	;# 
  3068  0295                     	;# 
  3069  0295                     	;# 
  3070  0296                     	;# 
  3071  0297                     	;# 
  3072  0298                     	;# 
  3073  029F                     	;# 
  3074  030C                     	;# 
  3075  030D                     	;# 
  3076  030E                     	;# 
  3077  0311                     	;# 
  3078  0311                     	;# 
  3079  0312                     	;# 
  3080  0313                     	;# 
  3081  0314                     	;# 
  3082  0315                     	;# 
  3083  0315                     	;# 
  3084  0316                     	;# 
  3085  0317                     	;# 
  3086  0318                     	;# 
  3087  038C                     	;# 
  3088  038D                     	;# 
  3089  038E                     	;# 
  3090  0391                     	;# 
  3091  0392                     	;# 
  3092  0393                     	;# 
  3093  0394                     	;# 
  3094  0395                     	;# 
  3095  0396                     	;# 
  3096  0397                     	;# 
  3097  0398                     	;# 
  3098  0399                     	;# 
  3099  039A                     	;# 
  3100  039C                     	;# 
  3101  039D                     	;# 
  3102  039E                     	;# 
  3103  039F                     	;# 
  3104  0411                     	;# 
  3105  0411                     	;# 
  3106  0412                     	;# 
  3107  0413                     	;# 
  3108  0414                     	;# 
  3109  0415                     	;# 
  3110  0416                     	;# 
  3111  0417                     	;# 
  3112  0418                     	;# 
  3113  0418                     	;# 
  3114  0419                     	;# 
  3115  041A                     	;# 
  3116  041B                     	;# 
  3117  041C                     	;# 
  3118  041D                     	;# 
  3119  041E                     	;# 
  3120  041F                     	;# 
  3121  0498                     	;# 
  3122  0498                     	;# 
  3123  0499                     	;# 
  3124  049A                     	;# 
  3125  049B                     	;# 
  3126  049B                     	;# 
  3127  049C                     	;# 
  3128  049D                     	;# 
  3129  049E                     	;# 
  3130  049F                     	;# 
  3131  0617                     	;# 
  3132  0618                     	;# 
  3133  0619                     	;# 
  3134  0619                     	;# 
  3135  061A                     	;# 
  3136  061B                     	;# 
  3137  061C                     	;# 
  3138  061C                     	;# 
  3139  061F                     	;# 
  3140  0691                     	;# 
  3141  0692                     	;# 
  3142  0693                     	;# 
  3143  0694                     	;# 
  3144  0695                     	;# 
  3145  0696                     	;# 
  3146  0697                     	;# 
  3147  0698                     	;# 
  3148  0699                     	;# 
  3149  0711                     	;# 
  3150  0712                     	;# 
  3151  0713                     	;# 
  3152  0714                     	;# 
  3153  0715                     	;# 
  3154  0716                     	;# 
  3155  0717                     	;# 
  3156  0718                     	;# 
  3157  0719                     	;# 
  3158  0891                     	;# 
  3159  0891                     	;# 
  3160  0891                     	;# 
  3161  0891                     	;# 
  3162  0891                     	;# 
  3163  0891                     	;# 
  3164  0892                     	;# 
  3165  0892                     	;# 
  3166  0892                     	;# 
  3167  0893                     	;# 
  3168  0893                     	;# 
  3169  0893                     	;# 
  3170  0893                     	;# 
  3171  0893                     	;# 
  3172  0893                     	;# 
  3173  0894                     	;# 
  3174  0894                     	;# 
  3175  0894                     	;# 
  3176  0895                     	;# 
  3177  0895                     	;# 
  3178  0895                     	;# 
  3179  0896                     	;# 
  3180  0896                     	;# 
  3181  0896                     	;# 
  3182  089B                     	;# 
  3183  0911                     	;# 
  3184  0912                     	;# 
  3185  0913                     	;# 
  3186  0914                     	;# 
  3187  0915                     	;# 
  3188  0916                     	;# 
  3189  0918                     	;# 
  3190  0919                     	;# 
  3191  091A                     	;# 
  3192  091B                     	;# 
  3193  091C                     	;# 
  3194  091D                     	;# 
  3195  091E                     	;# 
  3196  091F                     	;# 
  3197  0E0F                     	;# 
  3198  0E10                     	;# 
  3199  0E11                     	;# 
  3200  0E12                     	;# 
  3201  0E13                     	;# 
  3202  0E14                     	;# 
  3203  0E15                     	;# 
  3204  0E16                     	;# 
  3205  0E17                     	;# 
  3206  0E18                     	;# 
  3207  0E19                     	;# 
  3208  0E1A                     	;# 
  3209  0E1B                     	;# 
  3210  0E1C                     	;# 
  3211  0E1D                     	;# 
  3212  0E1E                     	;# 
  3213  0E1F                     	;# 
  3214  0E20                     	;# 
  3215  0E21                     	;# 
  3216  0E22                     	;# 
  3217  0E24                     	;# 
  3218  0E25                     	;# 
  3219  0E28                     	;# 
  3220  0E29                     	;# 
  3221  0E2A                     	;# 
  3222  0E2B                     	;# 
  3223  0E2C                     	;# 
  3224  0E2D                     	;# 
  3225  0E2E                     	;# 
  3226  0E2F                     	;# 
  3227  0E90                     	;# 
  3228  0E91                     	;# 
  3229  0E92                     	;# 
  3230  0E94                     	;# 
  3231  0E95                     	;# 
  3232  0E9C                     	;# 
  3233  0E9D                     	;# 
  3234  0E9E                     	;# 
  3235  0E9F                     	;# 
  3236  0EA0                     	;# 
  3237  0EA1                     	;# 
  3238  0EA2                     	;# 
  3239  0EA3                     	;# 
  3240  0EA4                     	;# 
  3241  0EA5                     	;# 
  3242  0EA6                     	;# 
  3243  0EA7                     	;# 
  3244  0F0F                     	;# 
  3245  0F10                     	;# 
  3246  0F11                     	;# 
  3247  0F12                     	;# 
  3248  0F13                     	;# 
  3249  0F14                     	;# 
  3250  0F15                     	;# 
  3251  0F16                     	;# 
  3252  0F17                     	;# 
  3253  0F18                     	;# 
  3254  0F19                     	;# 
  3255  0F1A                     	;# 
  3256  0F1B                     	;# 
  3257  0F1C                     	;# 
  3258  0F1D                     	;# 
  3259  0F1E                     	;# 
  3260  0F1F                     	;# 
  3261  0F20                     	;# 
  3262  0F21                     	;# 
  3263  0F22                     	;# 
  3264  0F23                     	;# 
  3265  0F24                     	;# 
  3266  0F25                     	;# 
  3267  0F26                     	;# 
  3268  0F27                     	;# 
  3269  0F28                     	;# 
  3270  0F29                     	;# 
  3271  0F2A                     	;# 
  3272  0F2B                     	;# 
  3273  0F2C                     	;# 
  3274  0F2D                     	;# 
  3275  0F2E                     	;# 
  3276  0F2F                     	;# 
  3277  0F30                     	;# 
  3278  0F31                     	;# 
  3279  0F32                     	;# 
  3280  0F33                     	;# 
  3281  0F34                     	;# 
  3282  0F35                     	;# 
  3283  0F36                     	;# 
  3284  0F37                     	;# 
  3285  0FE4                     	;# 
  3286  0FE5                     	;# 
  3287  0FE6                     	;# 
  3288  0FE7                     	;# 
  3289  0FE8                     	;# 
  3290  0FE9                     	;# 
  3291  0FEA                     	;# 
  3292  0FEB                     	;# 
  3293  0FED                     	;# 
  3294  0FEE                     	;# 
  3295  0FEF                     	;# 
  3296  0000                     	;# 
  3297  0001                     	;# 
  3298  0002                     	;# 
  3299  0003                     	;# 
  3300  0004                     	;# 
  3301  0005                     	;# 
  3302  0006                     	;# 
  3303  0007                     	;# 
  3304  0008                     	;# 
  3305  0009                     	;# 
  3306  000A                     	;# 
  3307  000B                     	;# 
  3308  000C                     	;# 
  3309  000D                     	;# 
  3310  000E                     	;# 
  3311  0010                     	;# 
  3312  0011                     	;# 
  3313  0012                     	;# 
  3314  0013                     	;# 
  3315  0014                     	;# 
  3316  0015                     	;# 
  3317  0015                     	;# 
  3318  0016                     	;# 
  3319  0016                     	;# 
  3320  0017                     	;# 
  3321  0018                     	;# 
  3322  0019                     	;# 
  3323  0019                     	;# 
  3324  001A                     	;# 
  3325  001B                     	;# 
  3326  001C                     	;# 
  3327  001D                     	;# 
  3328  001E                     	;# 
  3329  001F                     	;# 
  3330  008C                     	;# 
  3331  008D                     	;# 
  3332  008E                     	;# 
  3333  0090                     	;# 
  3334  0091                     	;# 
  3335  0092                     	;# 
  3336  0093                     	;# 
  3337  0094                     	;# 
  3338  0097                     	;# 
  3339  009B                     	;# 
  3340  009B                     	;# 
  3341  009C                     	;# 
  3342  009D                     	;# 
  3343  009E                     	;# 
  3344  009F                     	;# 
  3345  010C                     	;# 
  3346  010D                     	;# 
  3347  010E                     	;# 
  3348  0111                     	;# 
  3349  0112                     	;# 
  3350  0113                     	;# 
  3351  0114                     	;# 
  3352  0115                     	;# 
  3353  0116                     	;# 
  3354  0117                     	;# 
  3355  0118                     	;# 
  3356  0119                     	;# 
  3357  018C                     	;# 
  3358  018D                     	;# 
  3359  018E                     	;# 
  3360  0197                     	;# 
  3361  0199                     	;# 
  3362  0199                     	;# 
  3363  0199                     	;# 
  3364  019A                     	;# 
  3365  019A                     	;# 
  3366  019A                     	;# 
  3367  019B                     	;# 
  3368  019B                     	;# 
  3369  019B                     	;# 
  3370  019B                     	;# 
  3371  019B                     	;# 
  3372  019C                     	;# 
  3373  019C                     	;# 
  3374  019C                     	;# 
  3375  019D                     	;# 
  3376  019D                     	;# 
  3377  019D                     	;# 
  3378  019E                     	;# 
  3379  019E                     	;# 
  3380  019E                     	;# 
  3381  019F                     	;# 
  3382  019F                     	;# 
  3383  019F                     	;# 
  3384  019F                     	;# 
  3385  019F                     	;# 
  3386  020C                     	;# 
  3387  020D                     	;# 
  3388  020E                     	;# 
  3389  0211                     	;# 
  3390  0211                     	;# 
  3391  0212                     	;# 
  3392  0212                     	;# 
  3393  0213                     	;# 
  3394  0213                     	;# 
  3395  0214                     	;# 
  3396  0214                     	;# 
  3397  0215                     	;# 
  3398  0215                     	;# 
  3399  0215                     	;# 
  3400  0215                     	;# 
  3401  0216                     	;# 
  3402  0216                     	;# 
  3403  0217                     	;# 
  3404  0217                     	;# 
  3405  0219                     	;# 
  3406  021A                     	;# 
  3407  021B                     	;# 
  3408  021C                     	;# 
  3409  021D                     	;# 
  3410  021D                     	;# 
  3411  021E                     	;# 
  3412  021F                     	;# 
  3413  028C                     	;# 
  3414  028D                     	;# 
  3415  028E                     	;# 
  3416  0291                     	;# 
  3417  0291                     	;# 
  3418  0292                     	;# 
  3419  0293                     	;# 
  3420  0294                     	;# 
  3421  0295                     	;# 
  3422  0295                     	;# 
  3423  0296                     	;# 
  3424  0297                     	;# 
  3425  0298                     	;# 
  3426  029F                     	;# 
  3427  030C                     	;# 
  3428  030D                     	;# 
  3429  030E                     	;# 
  3430  0311                     	;# 
  3431  0311                     	;# 
  3432  0312                     	;# 
  3433  0313                     	;# 
  3434  0314                     	;# 
  3435  0315                     	;# 
  3436  0315                     	;# 
  3437  0316                     	;# 
  3438  0317                     	;# 
  3439  0318                     	;# 
  3440  038C                     	;# 
  3441  038D                     	;# 
  3442  038E                     	;# 
  3443  0391                     	;# 
  3444  0392                     	;# 
  3445  0393                     	;# 
  3446  0394                     	;# 
  3447  0395                     	;# 
  3448  0396                     	;# 
  3449  0397                     	;# 
  3450  0398                     	;# 
  3451  0399                     	;# 
  3452  039A                     	;# 
  3453  039C                     	;# 
  3454  039D                     	;# 
  3455  039E                     	;# 
  3456  039F                     	;# 
  3457  0411                     	;# 
  3458  0411                     	;# 
  3459  0412                     	;# 
  3460  0413                     	;# 
  3461  0414                     	;# 
  3462  0415                     	;# 
  3463  0416                     	;# 
  3464  0417                     	;# 
  3465  0418                     	;# 
  3466  0418                     	;# 
  3467  0419                     	;# 
  3468  041A                     	;# 
  3469  041B                     	;# 
  3470  041C                     	;# 
  3471  041D                     	;# 
  3472  041E                     	;# 
  3473  041F                     	;# 
  3474  0498                     	;# 
  3475  0498                     	;# 
  3476  0499                     	;# 
  3477  049A                     	;# 
  3478  049B                     	;# 
  3479  049B                     	;# 
  3480  049C                     	;# 
  3481  049D                     	;# 
  3482  049E                     	;# 
  3483  049F                     	;# 
  3484  0617                     	;# 
  3485  0618                     	;# 
  3486  0619                     	;# 
  3487  0619                     	;# 
  3488  061A                     	;# 
  3489  061B                     	;# 
  3490  061C                     	;# 
  3491  061C                     	;# 
  3492  061F                     	;# 
  3493  0691                     	;# 
  3494  0692                     	;# 
  3495  0693                     	;# 
  3496  0694                     	;# 
  3497  0695                     	;# 
  3498  0696                     	;# 
  3499  0697                     	;# 
  3500  0698                     	;# 
  3501  0699                     	;# 
  3502  0711                     	;# 
  3503  0712                     	;# 
  3504  0713                     	;# 
  3505  0714                     	;# 
  3506  0715                     	;# 
  3507  0716                     	;# 
  3508  0717                     	;# 
  3509  0718                     	;# 
  3510  0719                     	;# 
  3511  0891                     	;# 
  3512  0891                     	;# 
  3513  0891                     	;# 
  3514  0891                     	;# 
  3515  0891                     	;# 
  3516  0891                     	;# 
  3517  0892                     	;# 
  3518  0892                     	;# 
  3519  0892                     	;# 
  3520  0893                     	;# 
  3521  0893                     	;# 
  3522  0893                     	;# 
  3523  0893                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0894                     	;# 
  3527  0894                     	;# 
  3528  0894                     	;# 
  3529  0895                     	;# 
  3530  0895                     	;# 
  3531  0895                     	;# 
  3532  0896                     	;# 
  3533  0896                     	;# 
  3534  0896                     	;# 
  3535  089B                     	;# 
  3536  0911                     	;# 
  3537  0912                     	;# 
  3538  0913                     	;# 
  3539  0914                     	;# 
  3540  0915                     	;# 
  3541  0916                     	;# 
  3542  0918                     	;# 
  3543  0919                     	;# 
  3544  091A                     	;# 
  3545  091B                     	;# 
  3546  091C                     	;# 
  3547  091D                     	;# 
  3548  091E                     	;# 
  3549  091F                     	;# 
  3550  0E0F                     	;# 
  3551  0E10                     	;# 
  3552  0E11                     	;# 
  3553  0E12                     	;# 
  3554  0E13                     	;# 
  3555  0E14                     	;# 
  3556  0E15                     	;# 
  3557  0E16                     	;# 
  3558  0E17                     	;# 
  3559  0E18                     	;# 
  3560  0E19                     	;# 
  3561  0E1A                     	;# 
  3562  0E1B                     	;# 
  3563  0E1C                     	;# 
  3564  0E1D                     	;# 
  3565  0E1E                     	;# 
  3566  0E1F                     	;# 
  3567  0E20                     	;# 
  3568  0E21                     	;# 
  3569  0E22                     	;# 
  3570  0E24                     	;# 
  3571  0E25                     	;# 
  3572  0E28                     	;# 
  3573  0E29                     	;# 
  3574  0E2A                     	;# 
  3575  0E2B                     	;# 
  3576  0E2C                     	;# 
  3577  0E2D                     	;# 
  3578  0E2E                     	;# 
  3579  0E2F                     	;# 
  3580  0E90                     	;# 
  3581  0E91                     	;# 
  3582  0E92                     	;# 
  3583  0E94                     	;# 
  3584  0E95                     	;# 
  3585  0E9C                     	;# 
  3586  0E9D                     	;# 
  3587  0E9E                     	;# 
  3588  0E9F                     	;# 
  3589  0EA0                     	;# 
  3590  0EA1                     	;# 
  3591  0EA2                     	;# 
  3592  0EA3                     	;# 
  3593  0EA4                     	;# 
  3594  0EA5                     	;# 
  3595  0EA6                     	;# 
  3596  0EA7                     	;# 
  3597  0F0F                     	;# 
  3598  0F10                     	;# 
  3599  0F11                     	;# 
  3600  0F12                     	;# 
  3601  0F13                     	;# 
  3602  0F14                     	;# 
  3603  0F15                     	;# 
  3604  0F16                     	;# 
  3605  0F17                     	;# 
  3606  0F18                     	;# 
  3607  0F19                     	;# 
  3608  0F1A                     	;# 
  3609  0F1B                     	;# 
  3610  0F1C                     	;# 
  3611  0F1D                     	;# 
  3612  0F1E                     	;# 
  3613  0F1F                     	;# 
  3614  0F20                     	;# 
  3615  0F21                     	;# 
  3616  0F22                     	;# 
  3617  0F23                     	;# 
  3618  0F24                     	;# 
  3619  0F25                     	;# 
  3620  0F26                     	;# 
  3621  0F27                     	;# 
  3622  0F28                     	;# 
  3623  0F29                     	;# 
  3624  0F2A                     	;# 
  3625  0F2B                     	;# 
  3626  0F2C                     	;# 
  3627  0F2D                     	;# 
  3628  0F2E                     	;# 
  3629  0F2F                     	;# 
  3630  0F30                     	;# 
  3631  0F31                     	;# 
  3632  0F32                     	;# 
  3633  0F33                     	;# 
  3634  0F34                     	;# 
  3635  0F35                     	;# 
  3636  0F36                     	;# 
  3637  0F37                     	;# 
  3638  0FE4                     	;# 
  3639  0FE5                     	;# 
  3640  0FE6                     	;# 
  3641  0FE7                     	;# 
  3642  0FE8                     	;# 
  3643  0FE9                     	;# 
  3644  0FEA                     	;# 
  3645  0FEB                     	;# 
  3646  0FED                     	;# 
  3647  0FEE                     	;# 
  3648  0FEF                     	;# 
  3649  0000                     	;# 
  3650  0001                     	;# 
  3651  0002                     	;# 
  3652  0003                     	;# 
  3653  0004                     	;# 
  3654  0005                     	;# 
  3655  0006                     	;# 
  3656  0007                     	;# 
  3657  0008                     	;# 
  3658  0009                     	;# 
  3659  000A                     	;# 
  3660  000B                     	;# 
  3661  000C                     	;# 
  3662  000D                     	;# 
  3663  000E                     	;# 
  3664  0010                     	;# 
  3665  0011                     	;# 
  3666  0012                     	;# 
  3667  0013                     	;# 
  3668  0014                     	;# 
  3669  0015                     	;# 
  3670  0015                     	;# 
  3671  0016                     	;# 
  3672  0016                     	;# 
  3673  0017                     	;# 
  3674  0018                     	;# 
  3675  0019                     	;# 
  3676  0019                     	;# 
  3677  001A                     	;# 
  3678  001B                     	;# 
  3679  001C                     	;# 
  3680  001D                     	;# 
  3681  001E                     	;# 
  3682  001F                     	;# 
  3683  008C                     	;# 
  3684  008D                     	;# 
  3685  008E                     	;# 
  3686  0090                     	;# 
  3687  0091                     	;# 
  3688  0092                     	;# 
  3689  0093                     	;# 
  3690  0094                     	;# 
  3691  0097                     	;# 
  3692  009B                     	;# 
  3693  009B                     	;# 
  3694  009C                     	;# 
  3695  009D                     	;# 
  3696  009E                     	;# 
  3697  009F                     	;# 
  3698  010C                     	;# 
  3699  010D                     	;# 
  3700  010E                     	;# 
  3701  0111                     	;# 
  3702  0112                     	;# 
  3703  0113                     	;# 
  3704  0114                     	;# 
  3705  0115                     	;# 
  3706  0116                     	;# 
  3707  0117                     	;# 
  3708  0118                     	;# 
  3709  0119                     	;# 
  3710  018C                     	;# 
  3711  018D                     	;# 
  3712  018E                     	;# 
  3713  0197                     	;# 
  3714  0199                     	;# 
  3715  0199                     	;# 
  3716  0199                     	;# 
  3717  019A                     	;# 
  3718  019A                     	;# 
  3719  019A                     	;# 
  3720  019B                     	;# 
  3721  019B                     	;# 
  3722  019B                     	;# 
  3723  019B                     	;# 
  3724  019B                     	;# 
  3725  019C                     	;# 
  3726  019C                     	;# 
  3727  019C                     	;# 
  3728  019D                     	;# 
  3729  019D                     	;# 
  3730  019D                     	;# 
  3731  019E                     	;# 
  3732  019E                     	;# 
  3733  019E                     	;# 
  3734  019F                     	;# 
  3735  019F                     	;# 
  3736  019F                     	;# 
  3737  019F                     	;# 
  3738  019F                     	;# 
  3739  020C                     	;# 
  3740  020D                     	;# 
  3741  020E                     	;# 
  3742  0211                     	;# 
  3743  0211                     	;# 
  3744  0212                     	;# 
  3745  0212                     	;# 
  3746  0213                     	;# 
  3747  0213                     	;# 
  3748  0214                     	;# 
  3749  0214                     	;# 
  3750  0215                     	;# 
  3751  0215                     	;# 
  3752  0215                     	;# 
  3753  0215                     	;# 
  3754  0216                     	;# 
  3755  0216                     	;# 
  3756  0217                     	;# 
  3757  0217                     	;# 
  3758  0219                     	;# 
  3759  021A                     	;# 
  3760  021B                     	;# 
  3761  021C                     	;# 
  3762  021D                     	;# 
  3763  021D                     	;# 
  3764  021E                     	;# 
  3765  021F                     	;# 
  3766  028C                     	;# 
  3767  028D                     	;# 
  3768  028E                     	;# 
  3769  0291                     	;# 
  3770  0291                     	;# 
  3771  0292                     	;# 
  3772  0293                     	;# 
  3773  0294                     	;# 
  3774  0295                     	;# 
  3775  0295                     	;# 
  3776  0296                     	;# 
  3777  0297                     	;# 
  3778  0298                     	;# 
  3779  029F                     	;# 
  3780  030C                     	;# 
  3781  030D                     	;# 
  3782  030E                     	;# 
  3783  0311                     	;# 
  3784  0311                     	;# 
  3785  0312                     	;# 
  3786  0313                     	;# 
  3787  0314                     	;# 
  3788  0315                     	;# 
  3789  0315                     	;# 
  3790  0316                     	;# 
  3791  0317                     	;# 
  3792  0318                     	;# 
  3793  038C                     	;# 
  3794  038D                     	;# 
  3795  038E                     	;# 
  3796  0391                     	;# 
  3797  0392                     	;# 
  3798  0393                     	;# 
  3799  0394                     	;# 
  3800  0395                     	;# 
  3801  0396                     	;# 
  3802  0397                     	;# 
  3803  0398                     	;# 
  3804  0399                     	;# 
  3805  039A                     	;# 
  3806  039C                     	;# 
  3807  039D                     	;# 
  3808  039E                     	;# 
  3809  039F                     	;# 
  3810  0411                     	;# 
  3811  0411                     	;# 
  3812  0412                     	;# 
  3813  0413                     	;# 
  3814  0414                     	;# 
  3815  0415                     	;# 
  3816  0416                     	;# 
  3817  0417                     	;# 
  3818  0418                     	;# 
  3819  0418                     	;# 
  3820  0419                     	;# 
  3821  041A                     	;# 
  3822  041B                     	;# 
  3823  041C                     	;# 
  3824  041D                     	;# 
  3825  041E                     	;# 
  3826  041F                     	;# 
  3827  0498                     	;# 
  3828  0498                     	;# 
  3829  0499                     	;# 
  3830  049A                     	;# 
  3831  049B                     	;# 
  3832  049B                     	;# 
  3833  049C                     	;# 
  3834  049D                     	;# 
  3835  049E                     	;# 
  3836  049F                     	;# 
  3837  0617                     	;# 
  3838  0618                     	;# 
  3839  0619                     	;# 
  3840  0619                     	;# 
  3841  061A                     	;# 
  3842  061B                     	;# 
  3843  061C                     	;# 
  3844  061C                     	;# 
  3845  061F                     	;# 
  3846  0691                     	;# 
  3847  0692                     	;# 
  3848  0693                     	;# 
  3849  0694                     	;# 
  3850  0695                     	;# 
  3851  0696                     	;# 
  3852  0697                     	;# 
  3853  0698                     	;# 
  3854  0699                     	;# 
  3855  0711                     	;# 
  3856  0712                     	;# 
  3857  0713                     	;# 
  3858  0714                     	;# 
  3859  0715                     	;# 
  3860  0716                     	;# 
  3861  0717                     	;# 
  3862  0718                     	;# 
  3863  0719                     	;# 
  3864  0891                     	;# 
  3865  0891                     	;# 
  3866  0891                     	;# 
  3867  0891                     	;# 
  3868  0891                     	;# 
  3869  0891                     	;# 
  3870  0892                     	;# 
  3871  0892                     	;# 
  3872  0892                     	;# 
  3873  0893                     	;# 
  3874  0893                     	;# 
  3875  0893                     	;# 
  3876  0893                     	;# 
  3877  0893                     	;# 
  3878  0893                     	;# 
  3879  0894                     	;# 
  3880  0894                     	;# 
  3881  0894                     	;# 
  3882  0895                     	;# 
  3883  0895                     	;# 
  3884  0895                     	;# 
  3885  0896                     	;# 
  3886  0896                     	;# 
  3887  0896                     	;# 
  3888  089B                     	;# 
  3889  0911                     	;# 
  3890  0912                     	;# 
  3891  0913                     	;# 
  3892  0914                     	;# 
  3893  0915                     	;# 
  3894  0916                     	;# 
  3895  0918                     	;# 
  3896  0919                     	;# 
  3897  091A                     	;# 
  3898  091B                     	;# 
  3899  091C                     	;# 
  3900  091D                     	;# 
  3901  091E                     	;# 
  3902  091F                     	;# 
  3903  0E0F                     	;# 
  3904  0E10                     	;# 
  3905  0E11                     	;# 
  3906  0E12                     	;# 
  3907  0E13                     	;# 
  3908  0E14                     	;# 
  3909  0E15                     	;# 
  3910  0E16                     	;# 
  3911  0E17                     	;# 
  3912  0E18                     	;# 
  3913  0E19                     	;# 
  3914  0E1A                     	;# 
  3915  0E1B                     	;# 
  3916  0E1C                     	;# 
  3917  0E1D                     	;# 
  3918  0E1E                     	;# 
  3919  0E1F                     	;# 
  3920  0E20                     	;# 
  3921  0E21                     	;# 
  3922  0E22                     	;# 
  3923  0E24                     	;# 
  3924  0E25                     	;# 
  3925  0E28                     	;# 
  3926  0E29                     	;# 
  3927  0E2A                     	;# 
  3928  0E2B                     	;# 
  3929  0E2C                     	;# 
  3930  0E2D                     	;# 
  3931  0E2E                     	;# 
  3932  0E2F                     	;# 
  3933  0E90                     	;# 
  3934  0E91                     	;# 
  3935  0E92                     	;# 
  3936  0E94                     	;# 
  3937  0E95                     	;# 
  3938  0E9C                     	;# 
  3939  0E9D                     	;# 
  3940  0E9E                     	;# 
  3941  0E9F                     	;# 
  3942  0EA0                     	;# 
  3943  0EA1                     	;# 
  3944  0EA2                     	;# 
  3945  0EA3                     	;# 
  3946  0EA4                     	;# 
  3947  0EA5                     	;# 
  3948  0EA6                     	;# 
  3949  0EA7                     	;# 
  3950  0F0F                     	;# 
  3951  0F10                     	;# 
  3952  0F11                     	;# 
  3953  0F12                     	;# 
  3954  0F13                     	;# 
  3955  0F14                     	;# 
  3956  0F15                     	;# 
  3957  0F16                     	;# 
  3958  0F17                     	;# 
  3959  0F18                     	;# 
  3960  0F19                     	;# 
  3961  0F1A                     	;# 
  3962  0F1B                     	;# 
  3963  0F1C                     	;# 
  3964  0F1D                     	;# 
  3965  0F1E                     	;# 
  3966  0F1F                     	;# 
  3967  0F20                     	;# 
  3968  0F21                     	;# 
  3969  0F22                     	;# 
  3970  0F23                     	;# 
  3971  0F24                     	;# 
  3972  0F25                     	;# 
  3973  0F26                     	;# 
  3974  0F27                     	;# 
  3975  0F28                     	;# 
  3976  0F29                     	;# 
  3977  0F2A                     	;# 
  3978  0F2B                     	;# 
  3979  0F2C                     	;# 
  3980  0F2D                     	;# 
  3981  0F2E                     	;# 
  3982  0F2F                     	;# 
  3983  0F30                     	;# 
  3984  0F31                     	;# 
  3985  0F32                     	;# 
  3986  0F33                     	;# 
  3987  0F34                     	;# 
  3988  0F35                     	;# 
  3989  0F36                     	;# 
  3990  0F37                     	;# 
  3991  0FE4                     	;# 
  3992  0FE5                     	;# 
  3993  0FE6                     	;# 
  3994  0FE7                     	;# 
  3995  0FE8                     	;# 
  3996  0FE9                     	;# 
  3997  0FEA                     	;# 
  3998  0FEB                     	;# 
  3999  0FED                     	;# 
  4000  0FEE                     	;# 
  4001  0FEF                     	;# 
  4002  0000                     	;# 
  4003  0001                     	;# 
  4004  0002                     	;# 
  4005  0003                     	;# 
  4006  0004                     	;# 
  4007  0005                     	;# 
  4008  0006                     	;# 
  4009  0007                     	;# 
  4010  0008                     	;# 
  4011  0009                     	;# 
  4012  000A                     	;# 
  4013  000B                     	;# 
  4014  000C                     	;# 
  4015  000D                     	;# 
  4016  000E                     	;# 
  4017  0010                     	;# 
  4018  0011                     	;# 
  4019  0012                     	;# 
  4020  0013                     	;# 
  4021  0014                     	;# 
  4022  0015                     	;# 
  4023  0015                     	;# 
  4024  0016                     	;# 
  4025  0016                     	;# 
  4026  0017                     	;# 
  4027  0018                     	;# 
  4028  0019                     	;# 
  4029  0019                     	;# 
  4030  001A                     	;# 
  4031  001B                     	;# 
  4032  001C                     	;# 
  4033  001D                     	;# 
  4034  001E                     	;# 
  4035  001F                     	;# 
  4036  008C                     	;# 
  4037  008D                     	;# 
  4038  008E                     	;# 
  4039  0090                     	;# 
  4040  0091                     	;# 
  4041  0092                     	;# 
  4042  0093                     	;# 
  4043  0094                     	;# 
  4044  0097                     	;# 
  4045  009B                     	;# 
  4046  009B                     	;# 
  4047  009C                     	;# 
  4048  009D                     	;# 
  4049  009E                     	;# 
  4050  009F                     	;# 
  4051  010C                     	;# 
  4052  010D                     	;# 
  4053  010E                     	;# 
  4054  0111                     	;# 
  4055  0112                     	;# 
  4056  0113                     	;# 
  4057  0114                     	;# 
  4058  0115                     	;# 
  4059  0116                     	;# 
  4060  0117                     	;# 
  4061  0118                     	;# 
  4062  0119                     	;# 
  4063  018C                     	;# 
  4064  018D                     	;# 
  4065  018E                     	;# 
  4066  0197                     	;# 
  4067  0199                     	;# 
  4068  0199                     	;# 
  4069  0199                     	;# 
  4070  019A                     	;# 
  4071  019A                     	;# 
  4072  019A                     	;# 
  4073  019B                     	;# 
  4074  019B                     	;# 
  4075  019B                     	;# 
  4076  019B                     	;# 
  4077  019B                     	;# 
  4078  019C                     	;# 
  4079  019C                     	;# 
  4080  019C                     	;# 
  4081  019D                     	;# 
  4082  019D                     	;# 
  4083  019D                     	;# 
  4084  019E                     	;# 
  4085  019E                     	;# 
  4086  019E                     	;# 
  4087  019F                     	;# 
  4088  019F                     	;# 
  4089  019F                     	;# 
  4090  019F                     	;# 
  4091  019F                     	;# 
  4092  020C                     	;# 
  4093  020D                     	;# 
  4094  020E                     	;# 
  4095  0211                     	;# 
  4096  0211                     	;# 
  4097  0212                     	;# 
  4098  0212                     	;# 
  4099  0213                     	;# 
  4100  0213                     	;# 
  4101  0214                     	;# 
  4102  0214                     	;# 
  4103  0215                     	;# 
  4104  0215                     	;# 
  4105  0215                     	;# 
  4106  0215                     	;# 
  4107  0216                     	;# 
  4108  0216                     	;# 
  4109  0217                     	;# 
  4110  0217                     	;# 
  4111  0219                     	;# 
  4112  021A                     	;# 
  4113  021B                     	;# 
  4114  021C                     	;# 
  4115  021D                     	;# 
  4116  021D                     	;# 
  4117  021E                     	;# 
  4118  021F                     	;# 
  4119  028C                     	;# 
  4120  028D                     	;# 
  4121  028E                     	;# 
  4122  0291                     	;# 
  4123  0291                     	;# 
  4124  0292                     	;# 
  4125  0293                     	;# 
  4126  0294                     	;# 
  4127  0295                     	;# 
  4128  0295                     	;# 
  4129  0296                     	;# 
  4130  0297                     	;# 
  4131  0298                     	;# 
  4132  029F                     	;# 
  4133  030C                     	;# 
  4134  030D                     	;# 
  4135  030E                     	;# 
  4136  0311                     	;# 
  4137  0311                     	;# 
  4138  0312                     	;# 
  4139  0313                     	;# 
  4140  0314                     	;# 
  4141  0315                     	;# 
  4142  0315                     	;# 
  4143  0316                     	;# 
  4144  0317                     	;# 
  4145  0318                     	;# 
  4146  038C                     	;# 
  4147  038D                     	;# 
  4148  038E                     	;# 
  4149  0391                     	;# 
  4150  0392                     	;# 
  4151  0393                     	;# 
  4152  0394                     	;# 
  4153  0395                     	;# 
  4154  0396                     	;# 
  4155  0397                     	;# 
  4156  0398                     	;# 
  4157  0399                     	;# 
  4158  039A                     	;# 
  4159  039C                     	;# 
  4160  039D                     	;# 
  4161  039E                     	;# 
  4162  039F                     	;# 
  4163  0411                     	;# 
  4164  0411                     	;# 
  4165  0412                     	;# 
  4166  0413                     	;# 
  4167  0414                     	;# 
  4168  0415                     	;# 
  4169  0416                     	;# 
  4170  0417                     	;# 
  4171  0418                     	;# 
  4172  0418                     	;# 
  4173  0419                     	;# 
  4174  041A                     	;# 
  4175  041B                     	;# 
  4176  041C                     	;# 
  4177  041D                     	;# 
  4178  041E                     	;# 
  4179  041F                     	;# 
  4180  0498                     	;# 
  4181  0498                     	;# 
  4182  0499                     	;# 
  4183  049A                     	;# 
  4184  049B                     	;# 
  4185  049B                     	;# 
  4186  049C                     	;# 
  4187  049D                     	;# 
  4188  049E                     	;# 
  4189  049F                     	;# 
  4190  0617                     	;# 
  4191  0618                     	;# 
  4192  0619                     	;# 
  4193  0619                     	;# 
  4194  061A                     	;# 
  4195  061B                     	;# 
  4196  061C                     	;# 
  4197  061C                     	;# 
  4198  061F                     	;# 
  4199  0691                     	;# 
  4200  0692                     	;# 
  4201  0693                     	;# 
  4202  0694                     	;# 
  4203  0695                     	;# 
  4204  0696                     	;# 
  4205  0697                     	;# 
  4206  0698                     	;# 
  4207  0699                     	;# 
  4208  0711                     	;# 
  4209  0712                     	;# 
  4210  0713                     	;# 
  4211  0714                     	;# 
  4212  0715                     	;# 
  4213  0716                     	;# 
  4214  0717                     	;# 
  4215  0718                     	;# 
  4216  0719                     	;# 
  4217  0891                     	;# 
  4218  0891                     	;# 
  4219  0891                     	;# 
  4220  0891                     	;# 
  4221  0891                     	;# 
  4222  0891                     	;# 
  4223  0892                     	;# 
  4224  0892                     	;# 
  4225  0892                     	;# 
  4226  0893                     	;# 
  4227  0893                     	;# 
  4228  0893                     	;# 
  4229  0893                     	;# 
  4230  0893                     	;# 
  4231  0893                     	;# 
  4232  0894                     	;# 
  4233  0894                     	;# 
  4234  0894                     	;# 
  4235  0895                     	;# 
  4236  0895                     	;# 
  4237  0895                     	;# 
  4238  0896                     	;# 
  4239  0896                     	;# 
  4240  0896                     	;# 
  4241  089B                     	;# 
  4242  0911                     	;# 
  4243  0912                     	;# 
  4244  0913                     	;# 
  4245  0914                     	;# 
  4246  0915                     	;# 
  4247  0916                     	;# 
  4248  0918                     	;# 
  4249  0919                     	;# 
  4250  091A                     	;# 
  4251  091B                     	;# 
  4252  091C                     	;# 
  4253  091D                     	;# 
  4254  091E                     	;# 
  4255  091F                     	;# 
  4256  0E0F                     	;# 
  4257  0E10                     	;# 
  4258  0E11                     	;# 
  4259  0E12                     	;# 
  4260  0E13                     	;# 
  4261  0E14                     	;# 
  4262  0E15                     	;# 
  4263  0E16                     	;# 
  4264  0E17                     	;# 
  4265  0E18                     	;# 
  4266  0E19                     	;# 
  4267  0E1A                     	;# 
  4268  0E1B                     	;# 
  4269  0E1C                     	;# 
  4270  0E1D                     	;# 
  4271  0E1E                     	;# 
  4272  0E1F                     	;# 
  4273  0E20                     	;# 
  4274  0E21                     	;# 
  4275  0E22                     	;# 
  4276  0E24                     	;# 
  4277  0E25                     	;# 
  4278  0E28                     	;# 
  4279  0E29                     	;# 
  4280  0E2A                     	;# 
  4281  0E2B                     	;# 
  4282  0E2C                     	;# 
  4283  0E2D                     	;# 
  4284  0E2E                     	;# 
  4285  0E2F                     	;# 
  4286  0E90                     	;# 
  4287  0E91                     	;# 
  4288  0E92                     	;# 
  4289  0E94                     	;# 
  4290  0E95                     	;# 
  4291  0E9C                     	;# 
  4292  0E9D                     	;# 
  4293  0E9E                     	;# 
  4294  0E9F                     	;# 
  4295  0EA0                     	;# 
  4296  0EA1                     	;# 
  4297  0EA2                     	;# 
  4298  0EA3                     	;# 
  4299  0EA4                     	;# 
  4300  0EA5                     	;# 
  4301  0EA6                     	;# 
  4302  0EA7                     	;# 
  4303  0F0F                     	;# 
  4304  0F10                     	;# 
  4305  0F11                     	;# 
  4306  0F12                     	;# 
  4307  0F13                     	;# 
  4308  0F14                     	;# 
  4309  0F15                     	;# 
  4310  0F16                     	;# 
  4311  0F17                     	;# 
  4312  0F18                     	;# 
  4313  0F19                     	;# 
  4314  0F1A                     	;# 
  4315  0F1B                     	;# 
  4316  0F1C                     	;# 
  4317  0F1D                     	;# 
  4318  0F1E                     	;# 
  4319  0F1F                     	;# 
  4320  0F20                     	;# 
  4321  0F21                     	;# 
  4322  0F22                     	;# 
  4323  0F23                     	;# 
  4324  0F24                     	;# 
  4325  0F25                     	;# 
  4326  0F26                     	;# 
  4327  0F27                     	;# 
  4328  0F28                     	;# 
  4329  0F29                     	;# 
  4330  0F2A                     	;# 
  4331  0F2B                     	;# 
  4332  0F2C                     	;# 
  4333  0F2D                     	;# 
  4334  0F2E                     	;# 
  4335  0F2F                     	;# 
  4336  0F30                     	;# 
  4337  0F31                     	;# 
  4338  0F32                     	;# 
  4339  0F33                     	;# 
  4340  0F34                     	;# 
  4341  0F35                     	;# 
  4342  0F36                     	;# 
  4343  0F37                     	;# 
  4344  0FE4                     	;# 
  4345  0FE5                     	;# 
  4346  0FE6                     	;# 
  4347  0FE7                     	;# 
  4348  0FE8                     	;# 
  4349  0FE9                     	;# 
  4350  0FEA                     	;# 
  4351  0FEB                     	;# 
  4352  0FED                     	;# 
  4353  0FEE                     	;# 
  4354  0FEF                     	;# 
  4355  0000                     	;# 
  4356  0001                     	;# 
  4357  0002                     	;# 
  4358  0003                     	;# 
  4359  0004                     	;# 
  4360  0005                     	;# 
  4361  0006                     	;# 
  4362  0007                     	;# 
  4363  0008                     	;# 
  4364  0009                     	;# 
  4365  000A                     	;# 
  4366  000B                     	;# 
  4367  000C                     	;# 
  4368  000D                     	;# 
  4369  000E                     	;# 
  4370  0010                     	;# 
  4371  0011                     	;# 
  4372  0012                     	;# 
  4373  0013                     	;# 
  4374  0014                     	;# 
  4375  0015                     	;# 
  4376  0015                     	;# 
  4377  0016                     	;# 
  4378  0016                     	;# 
  4379  0017                     	;# 
  4380  0018                     	;# 
  4381  0019                     	;# 
  4382  0019                     	;# 
  4383  001A                     	;# 
  4384  001B                     	;# 
  4385  001C                     	;# 
  4386  001D                     	;# 
  4387  001E                     	;# 
  4388  001F                     	;# 
  4389  008C                     	;# 
  4390  008D                     	;# 
  4391  008E                     	;# 
  4392  0090                     	;# 
  4393  0091                     	;# 
  4394  0092                     	;# 
  4395  0093                     	;# 
  4396  0094                     	;# 
  4397  0097                     	;# 
  4398  009B                     	;# 
  4399  009B                     	;# 
  4400  009C                     	;# 
  4401  009D                     	;# 
  4402  009E                     	;# 
  4403  009F                     	;# 
  4404  010C                     	;# 
  4405  010D                     	;# 
  4406  010E                     	;# 
  4407  0111                     	;# 
  4408  0112                     	;# 
  4409  0113                     	;# 
  4410  0114                     	;# 
  4411  0115                     	;# 
  4412  0116                     	;# 
  4413  0117                     	;# 
  4414  0118                     	;# 
  4415  0119                     	;# 
  4416  018C                     	;# 
  4417  018D                     	;# 
  4418  018E                     	;# 
  4419  0197                     	;# 
  4420  0199                     	;# 
  4421  0199                     	;# 
  4422  0199                     	;# 
  4423  019A                     	;# 
  4424  019A                     	;# 
  4425  019A                     	;# 
  4426  019B                     	;# 
  4427  019B                     	;# 
  4428  019B                     	;# 
  4429  019B                     	;# 
  4430  019B                     	;# 
  4431  019C                     	;# 
  4432  019C                     	;# 
  4433  019C                     	;# 
  4434  019D                     	;# 
  4435  019D                     	;# 
  4436  019D                     	;# 
  4437  019E                     	;# 
  4438  019E                     	;# 
  4439  019E                     	;# 
  4440  019F                     	;# 
  4441  019F                     	;# 
  4442  019F                     	;# 
  4443  019F                     	;# 
  4444  019F                     	;# 
  4445  020C                     	;# 
  4446  020D                     	;# 
  4447  020E                     	;# 
  4448  0211                     	;# 
  4449  0211                     	;# 
  4450  0212                     	;# 
  4451  0212                     	;# 
  4452  0213                     	;# 
  4453  0213                     	;# 
  4454  0214                     	;# 
  4455  0214                     	;# 
  4456  0215                     	;# 
  4457  0215                     	;# 
  4458  0215                     	;# 
  4459  0215                     	;# 
  4460  0216                     	;# 
  4461  0216                     	;# 
  4462  0217                     	;# 
  4463  0217                     	;# 
  4464  0219                     	;# 
  4465  021A                     	;# 
  4466  021B                     	;# 
  4467  021C                     	;# 
  4468  021D                     	;# 
  4469  021D                     	;# 
  4470  021E                     	;# 
  4471  021F                     	;# 
  4472  028C                     	;# 
  4473  028D                     	;# 
  4474  028E                     	;# 
  4475  0291                     	;# 
  4476  0291                     	;# 
  4477  0292                     	;# 
  4478  0293                     	;# 
  4479  0294                     	;# 
  4480  0295                     	;# 
  4481  0295                     	;# 
  4482  0296                     	;# 
  4483  0297                     	;# 
  4484  0298                     	;# 
  4485  029F                     	;# 
  4486  030C                     	;# 
  4487  030D                     	;# 
  4488  030E                     	;# 
  4489  0311                     	;# 
  4490  0311                     	;# 
  4491  0312                     	;# 
  4492  0313                     	;# 
  4493  0314                     	;# 
  4494  0315                     	;# 
  4495  0315                     	;# 
  4496  0316                     	;# 
  4497  0317                     	;# 
  4498  0318                     	;# 
  4499  038C                     	;# 
  4500  038D                     	;# 
  4501  038E                     	;# 
  4502  0391                     	;# 
  4503  0392                     	;# 
  4504  0393                     	;# 
  4505  0394                     	;# 
  4506  0395                     	;# 
  4507  0396                     	;# 
  4508  0397                     	;# 
  4509  0398                     	;# 
  4510  0399                     	;# 
  4511  039A                     	;# 
  4512  039C                     	;# 
  4513  039D                     	;# 
  4514  039E                     	;# 
  4515  039F                     	;# 
  4516  0411                     	;# 
  4517  0411                     	;# 
  4518  0412                     	;# 
  4519  0413                     	;# 
  4520  0414                     	;# 
  4521  0415                     	;# 
  4522  0416                     	;# 
  4523  0417                     	;# 
  4524  0418                     	;# 
  4525  0418                     	;# 
  4526  0419                     	;# 
  4527  041A                     	;# 
  4528  041B                     	;# 
  4529  041C                     	;# 
  4530  041D                     	;# 
  4531  041E                     	;# 
  4532  041F                     	;# 
  4533  0498                     	;# 
  4534  0498                     	;# 
  4535  0499                     	;# 
  4536  049A                     	;# 
  4537  049B                     	;# 
  4538  049B                     	;# 
  4539  049C                     	;# 
  4540  049D                     	;# 
  4541  049E                     	;# 
  4542  049F                     	;# 
  4543  0617                     	;# 
  4544  0618                     	;# 
  4545  0619                     	;# 
  4546  0619                     	;# 
  4547  061A                     	;# 
  4548  061B                     	;# 
  4549  061C                     	;# 
  4550  061C                     	;# 
  4551  061F                     	;# 
  4552  0691                     	;# 
  4553  0692                     	;# 
  4554  0693                     	;# 
  4555  0694                     	;# 
  4556  0695                     	;# 
  4557  0696                     	;# 
  4558  0697                     	;# 
  4559  0698                     	;# 
  4560  0699                     	;# 
  4561  0711                     	;# 
  4562  0712                     	;# 
  4563  0713                     	;# 
  4564  0714                     	;# 
  4565  0715                     	;# 
  4566  0716                     	;# 
  4567  0717                     	;# 
  4568  0718                     	;# 
  4569  0719                     	;# 
  4570  0891                     	;# 
  4571  0891                     	;# 
  4572  0891                     	;# 
  4573  0891                     	;# 
  4574  0891                     	;# 
  4575  0891                     	;# 
  4576  0892                     	;# 
  4577  0892                     	;# 
  4578  0892                     	;# 
  4579  0893                     	;# 
  4580  0893                     	;# 
  4581  0893                     	;# 
  4582  0893                     	;# 
  4583  0893                     	;# 
  4584  0893                     	;# 
  4585  0894                     	;# 
  4586  0894                     	;# 
  4587  0894                     	;# 
  4588  0895                     	;# 
  4589  0895                     	;# 
  4590  0895                     	;# 
  4591  0896                     	;# 
  4592  0896                     	;# 
  4593  0896                     	;# 
  4594  089B                     	;# 
  4595  0911                     	;# 
  4596  0912                     	;# 
  4597  0913                     	;# 
  4598  0914                     	;# 
  4599  0915                     	;# 
  4600  0916                     	;# 
  4601  0918                     	;# 
  4602  0919                     	;# 
  4603  091A                     	;# 
  4604  091B                     	;# 
  4605  091C                     	;# 
  4606  091D                     	;# 
  4607  091E                     	;# 
  4608  091F                     	;# 
  4609  0E0F                     	;# 
  4610  0E10                     	;# 
  4611  0E11                     	;# 
  4612  0E12                     	;# 
  4613  0E13                     	;# 
  4614  0E14                     	;# 
  4615  0E15                     	;# 
  4616  0E16                     	;# 
  4617  0E17                     	;# 
  4618  0E18                     	;# 
  4619  0E19                     	;# 
  4620  0E1A                     	;# 
  4621  0E1B                     	;# 
  4622  0E1C                     	;# 
  4623  0E1D                     	;# 
  4624  0E1E                     	;# 
  4625  0E1F                     	;# 
  4626  0E20                     	;# 
  4627  0E21                     	;# 
  4628  0E22                     	;# 
  4629  0E24                     	;# 
  4630  0E25                     	;# 
  4631  0E28                     	;# 
  4632  0E29                     	;# 
  4633  0E2A                     	;# 
  4634  0E2B                     	;# 
  4635  0E2C                     	;# 
  4636  0E2D                     	;# 
  4637  0E2E                     	;# 
  4638  0E2F                     	;# 
  4639  0E90                     	;# 
  4640  0E91                     	;# 
  4641  0E92                     	;# 
  4642  0E94                     	;# 
  4643  0E95                     	;# 
  4644  0E9C                     	;# 
  4645  0E9D                     	;# 
  4646  0E9E                     	;# 
  4647  0E9F                     	;# 
  4648  0EA0                     	;# 
  4649  0EA1                     	;# 
  4650  0EA2                     	;# 
  4651  0EA3                     	;# 
  4652  0EA4                     	;# 
  4653  0EA5                     	;# 
  4654  0EA6                     	;# 
  4655  0EA7                     	;# 
  4656  0F0F                     	;# 
  4657  0F10                     	;# 
  4658  0F11                     	;# 
  4659  0F12                     	;# 
  4660  0F13                     	;# 
  4661  0F14                     	;# 
  4662  0F15                     	;# 
  4663  0F16                     	;# 
  4664  0F17                     	;# 
  4665  0F18                     	;# 
  4666  0F19                     	;# 
  4667  0F1A                     	;# 
  4668  0F1B                     	;# 
  4669  0F1C                     	;# 
  4670  0F1D                     	;# 
  4671  0F1E                     	;# 
  4672  0F1F                     	;# 
  4673  0F20                     	;# 
  4674  0F21                     	;# 
  4675  0F22                     	;# 
  4676  0F23                     	;# 
  4677  0F24                     	;# 
  4678  0F25                     	;# 
  4679  0F26                     	;# 
  4680  0F27                     	;# 
  4681  0F28                     	;# 
  4682  0F29                     	;# 
  4683  0F2A                     	;# 
  4684  0F2B                     	;# 
  4685  0F2C                     	;# 
  4686  0F2D                     	;# 
  4687  0F2E                     	;# 
  4688  0F2F                     	;# 
  4689  0F30                     	;# 
  4690  0F31                     	;# 
  4691  0F32                     	;# 
  4692  0F33                     	;# 
  4693  0F34                     	;# 
  4694  0F35                     	;# 
  4695  0F36                     	;# 
  4696  0F37                     	;# 
  4697  0FE4                     	;# 
  4698  0FE5                     	;# 
  4699  0FE6                     	;# 
  4700  0FE7                     	;# 
  4701  0FE8                     	;# 
  4702  0FE9                     	;# 
  4703  0FEA                     	;# 
  4704  0FEB                     	;# 
  4705  0FED                     	;# 
  4706  0FEE                     	;# 
  4707  0FEF                     	;# 
  4708                           
  4709 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  4710  0000                     
  4711 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  4712  001C                     _T1GCONbits	set	28
  4713  001B                     _T1CONbits	set	27
  4714  001B                     _T1CON	set	27
  4715  0011                     _PIR1bits	set	17
  4716  0019                     _TMR1L	set	25
  4717  001A                     _TMR1H	set	26
  4718  001C                     _T1GCON	set	28
  4719  0014                     _PIR4bits	set	20
  4720  0017                     _T0CON0bits	set	23
  4721  0017                     _T0CON0	set	23
  4722  0010                     _PIR0bits	set	16
  4723  0015                     _TMR0L	set	21
  4724  0016                     _TMR0H	set	22
  4725  0018                     _T0CON1	set	24
  4726  000D                     _PORTBbits	set	13
  4727  000E                     _PORTCbits	set	14
  4728  000C                     _PORTAbits	set	12
  4729  000B                     _INTCONbits	set	11
  4730  0014                     _PIR4	set	20
  4731  0013                     _PIR3	set	19
  4732  0012                     _PIR2	set	18
  4733  0011                     _PIR1	set	17
  4734  0010                     _PIR0	set	16
  4735  0091                     _PIE1bits	set	145
  4736  0094                     _PIE4bits	set	148
  4737  0090                     _PIE0bits	set	144
  4738  0097                     _WDTCON	set	151
  4739  008D                     _TRISBbits	set	141
  4740  008E                     _TRISCbits	set	142
  4741  008C                     _TRISAbits	set	140
  4742  008E                     _TRISC	set	142
  4743  008D                     _TRISB	set	141
  4744  008C                     _TRISA	set	140
  4745  0094                     _PIE4	set	148
  4746  0093                     _PIE3	set	147
  4747  0092                     _PIE2	set	146
  4748  0091                     _PIE1	set	145
  4749  0090                     _PIE0	set	144
  4750  010D                     _LATBbits	set	269
  4751  010E                     _LATCbits	set	270
  4752  010C                     _LATAbits	set	268
  4753  010E                     _LATC	set	270
  4754  010D                     _LATB	set	269
  4755  010C                     _LATA	set	268
  4756  0199                     _RC1REG	set	409
  4757  019D                     _RC1STAbits	set	413
  4758  019A                     _TX1REG	set	410
  4759  019E                     _TX1STAbits	set	414
  4760  019C                     _SP1BRGH	set	412
  4761  019B                     _SP1BRGL	set	411
  4762  019E                     _TX1STA	set	414
  4763  019D                     _RC1STA	set	413
  4764  019F                     _BAUD1CON	set	415
  4765  018C                     _ANSELA	set	396
  4766  018D                     _ANSELB	set	397
  4767  018E                     _ANSELC	set	398
  4768  020E                     _WPUC	set	526
  4769  020C                     _WPUA	set	524
  4770  020D                     _WPUB	set	525
  4771  0295                     _CCPR2L	set	661
  4772  0296                     _CCPR2H	set	662
  4773  0298                     _CCP2CAP	set	664
  4774  0297                     _CCP2CON	set	663
  4775  029F                     _CCPTMRSbits	set	671
  4776  0291                     _CCPR1L	set	657
  4777  0292                     _CCPR1H	set	658
  4778  0294                     _CCP1CAP	set	660
  4779  0293                     _CCP1CON	set	659
  4780  028E                     _ODCONC	set	654
  4781  028D                     _ODCONB	set	653
  4782  028C                     _ODCONA	set	652
  4783  0311                     _CCPR3L	set	785
  4784  0312                     _CCPR3H	set	786
  4785  0314                     _CCP3CAP	set	788
  4786  0313                     _CCP3CON	set	787
  4787  030E                     _SLRCONC	set	782
  4788  030D                     _SLRCONB	set	781
  4789  030C                     _SLRCONA	set	780
  4790  038E                     _INLVLC	set	910
  4791  038D                     _INLVLB	set	909
  4792  038C                     _INLVLA	set	908
  4793  0916                     _PMD5	set	2326
  4794  0915                     _PMD4	set	2325
  4795  0914                     _PMD3	set	2324
  4796  0913                     _PMD2	set	2323
  4797  0912                     _PMD1	set	2322
  4798  0911                     _PMD0	set	2321
  4799  091E                     _OSCTUNE	set	2334
  4800  091F                     _OSCFRQ	set	2335
  4801  091D                     _OSCEN	set	2333
  4802  091B                     _OSCCON3	set	2331
  4803  0919                     _OSCCON1	set	2329
  4804  48E0                     _PLLR	set	18656
  4805  0E14                     _CCP1PPS	set	3604
  4806  0E16                     _CCP3PPS	set	3606
  4807  0E15                     _CCP2PPS	set	3605
  4808  0E24                     _RXPPS	set	3620
  4809  0EA4                     _RC4PPS	set	3748
  4810                           
  4811                           	psect	stringtext1
  4812  1000                     __pstringtext1:
  4813  1000                     STR_1:
  4814  1000  3444               	retlw	68	;'D'
  4815  1001  3469               	retlw	105	;'i'
  4816  1002  3473               	retlw	115	;'s'
  4817  1003  3474               	retlw	116	;'t'
  4818  1004  3461               	retlw	97	;'a'
  4819  1005  346E               	retlw	110	;'n'
  4820  1006  3463               	retlw	99	;'c'
  4821  1007  3465               	retlw	101	;'e'
  4822  1008  3420               	retlw	32	;' '
  4823  1009  343D               	retlw	61	;'='
  4824  100A  3420               	retlw	32	;' '
  4825  100B  3425               	retlw	37	;'%'
  4826  100C  3475               	retlw	117	;'u'
  4827  100D  3420               	retlw	32	;' '
  4828  100E  340A               	retlw	10
  4829  100F  3400               	retlw	0
  4830                           
  4831                           	psect	stringtext2
  4832  0000                     __pstringtext2:
  4833                           
  4834                           	psect	cinit
  4835  0076                     start_initialization:	
  4836                           ; #config settings
  4837                           
  4838  0076                     __initialization:
  4839                           
  4840                           ; Clear objects allocated to COMMON
  4841  0076  01FB               	clrf	__pbssCOMMON& (0+127)
  4842  0077  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  4843  0078  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
  4844                           
  4845                           ; Clear objects allocated to BANK1
  4846  0079  30A0               	movlw	low __pbssBANK1
  4847  007A  0084               	movwf	4
  4848  007B  3000               	movlw	high __pbssBANK1
  4849  007C  0085               	movwf	5
  4850  007D  303F               	movlw	63
  4851  007E  318B  236E  3180   	fcall	clear_ram0
  4852                           
  4853                           ; Clear objects allocated to BANK2
  4854  0081  3020               	movlw	low __pbssBANK2
  4855  0082  0084               	movwf	4
  4856  0083  3001               	movlw	high __pbssBANK2
  4857  0084  0085               	movwf	5
  4858  0085  3048               	movlw	72
  4859  0086  318B  236E  3180   	fcall	clear_ram0
  4860  0089                     end_of_initialization:	
  4861                           ;End of C runtime variable initialization code
  4862                           
  4863  0089                     __end_of__initialization:
  4864  0089  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4865  008A  0020               	movlb	0
  4866  008B  3183  2BB5         	ljmp	_main	;jump to C main() function
  4867                           
  4868                           	psect	bssCOMMON
  4869  007B                     __pbssCOMMON:
  4870  007B                     _eusartRxTail:
  4871  007B                     	ds	1
  4872  007C                     _eusartRxHead:
  4873  007C                     	ds	1
  4874  007D                     _eusartTxHead:
  4875  007D                     	ds	1
  4876                           
  4877                           	psect	bssBANK1
  4878  00A0                     __pbssBANK1:
  4879  00A0                     _millis:
  4880  00A0                     	ds	4
  4881  00A4                     _micros:
  4882  00A4                     	ds	4
  4883  00A8                     _nout:
  4884  00A8                     	ds	2
  4885  00AA                     _width:
  4886  00AA                     	ds	2
  4887  00AC                     _prec:
  4888  00AC                     	ds	2
  4889  00AE                     _flags:
  4890  00AE                     	ds	2
  4891  00B0                     _EUSART_ErrorHandler:
  4892  00B0                     	ds	2
  4893  00B2                     _EUSART_OverrunErrorHandler:
  4894  00B2                     	ds	2
  4895  00B4                     _EUSART_FramingErrorHandler:
  4896  00B4                     	ds	2
  4897  00B6                     _EUSART_RxDefaultInterruptHandler:
  4898  00B6                     	ds	2
  4899  00B8                     _EUSART_TxDefaultInterruptHandler:
  4900  00B8                     	ds	2
  4901  00BA                     _TMR1_InterruptHandler:
  4902  00BA                     	ds	2
  4903  00BC                     _timer1ReloadVal:
  4904  00BC                     	ds	2
  4905  00BE                     _ticksDown@ccp3$F976:
  4906  00BE                     	ds	2
  4907  00C0                     _ticksUp@ccp3$F975:
  4908  00C0                     	ds	2
  4909  00C2                     _CCP3_CallBack:
  4910  00C2                     	ds	2
  4911  00C4                     _ticksDown@ccp2$F861:
  4912  00C4                     	ds	2
  4913  00C6                     _ticksUp@ccp2$F860:
  4914  00C6                     	ds	2
  4915  00C8                     _CCP2_CallBack:
  4916  00C8                     	ds	2
  4917  00CA                     _ticksDown:
  4918  00CA                     	ds	2
  4919  00CC                     _ticksUp:
  4920  00CC                     	ds	2
  4921  00CE                     _CCP1_CallBack:
  4922  00CE                     	ds	2
  4923  00D0                     TMR0_ISR@CountCallBack:
  4924  00D0                     	ds	2
  4925  00D2                     _TMR0_InterruptHandler:
  4926  00D2                     	ds	2
  4927  00D4                     _eusartRxLastError:
  4928  00D4                     	ds	1
  4929  00D5                     _eusartRxCount:
  4930  00D5                     	ds	1
  4931  00D6                     _eusartTxBufferRemaining:
  4932  00D6                     	ds	1
  4933  00D7                     _eusartTxTail:
  4934  00D7                     	ds	1
  4935  00D8                     _lastTrig:
  4936  00D8                     	ds	1
  4937  00D9                     _Sens1:
  4938  00D9                     	ds	6
  4939                           
  4940                           	psect	bssBANK2
  4941  0120                     __pbssBANK2:
  4942  0120                     _eusartRxStatusBuffer:
  4943  0120                     	ds	8
  4944  0128                     _eusartRxBuffer:
  4945  0128                     	ds	8
  4946  0130                     _eusartTxBuffer:
  4947  0130                     	ds	8
  4948  0138                     _Sens3:
  4949  0138                     	ds	6
  4950  013E                     _Sens2:
  4951  013E                     	ds	6
  4952  0144                     _micros@FRT$F1501:
  4953  0144                     	ds	4
  4954  0148                     _dbuf:
  4955  0148                     	ds	32
  4956                           
  4957                           	psect	clrtext
  4958  0B6E                     clear_ram0:	
  4959                           ;	Called with FSR0 containing the base address, and
  4960                           ;	WREG with the size to clear
  4961                           
  4962  0B6E  0064               	clrwdt	;clear the watchdog before getting into this loop
  4963  0B6F                     clrloop0:
  4964  0B6F  0180               	clrf	0	;clear RAM location pointed to by FSR
  4965  0B70  3101               	addfsr 0,1
  4966  0B71  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4967  0B72  2B6F               	goto	clrloop0	;have we reached the end yet?
  4968  0B73  3400               	retlw	0	;all done for this memory range, return
  4969                           
  4970                           	psect	cstackBANK1
  4971  00DF                     __pcstackBANK1:
  4972  00DF                     ??_printf:
  4973                           
  4974                           ; 1 bytes @ 0x0
  4975  00DF                     	ds	1
  4976  00E0                     printf@ap:
  4977                           
  4978                           ; 1 bytes @ 0x1
  4979  00E0                     	ds	1
  4980  00E1                     ??_main:
  4981                           
  4982                           ; 1 bytes @ 0x2
  4983  00E1                     	ds	4
  4984  00E5                     main@prevMilli:
  4985                           
  4986                           ; 4 bytes @ 0x6
  4987  00E5                     	ds	4
  4988  00E9                     main@currMilli:
  4989                           
  4990                           ; 4 bytes @ 0xA
  4991  00E9                     	ds	4
  4992                           
  4993                           	psect	cstackCOMMON
  4994  0070                     __pcstackCOMMON:
  4995  0070                     ?_PIC16_Init:
  4996  0070                     ?_JSN_GetLastTrig:	
  4997                           ; 1 bytes @ 0x0
  4998                           
  4999  0070                     ??_JSN_GetLastTrig:	
  5000                           ; 1 bytes @ 0x0
  5001                           
  5002  0070                     ?_SYSTEM_Initialize:	
  5003                           ; 1 bytes @ 0x0
  5004                           
  5005  0070                     ?_PMD_Initialize:	
  5006                           ; 1 bytes @ 0x0
  5007                           
  5008  0070                     ?_PIN_MANAGER_Initialize:	
  5009                           ; 1 bytes @ 0x0
  5010                           
  5011  0070                     ?_OSCILLATOR_Initialize:	
  5012                           ; 1 bytes @ 0x0
  5013                           
  5014  0070                     ?_WDT_Initialize:	
  5015                           ; 1 bytes @ 0x0
  5016                           
  5017  0070                     ?_CCP2_Initialize:	
  5018                           ; 1 bytes @ 0x0
  5019                           
  5020  0070                     ?_CCP3_Initialize:	
  5021                           ; 1 bytes @ 0x0
  5022                           
  5023  0070                     ?_CCP1_Initialize:	
  5024                           ; 1 bytes @ 0x0
  5025                           
  5026  0070                     ?_TMR1_Initialize:	
  5027                           ; 1 bytes @ 0x0
  5028                           
  5029  0070                     ?_TMR0_Initialize:	
  5030                           ; 1 bytes @ 0x0
  5031                           
  5032  0070                     ?_EUSART_Initialize:	
  5033                           ; 1 bytes @ 0x0
  5034                           
  5035  0070                     ?_TMR0_CallBack:	
  5036                           ; 1 bytes @ 0x0
  5037                           
  5038  0070                     ??_TMR0_CallBack:	
  5039                           ; 1 bytes @ 0x0
  5040                           
  5041  0070                     ?_FRT_IncMillis:	
  5042                           ; 1 bytes @ 0x0
  5043                           
  5044  0070                     ??_FRT_IncMillis:	
  5045                           ; 1 bytes @ 0x0
  5046                           
  5047  0070                     ?_FRT_IncMicros:	
  5048                           ; 1 bytes @ 0x0
  5049                           
  5050  0070                     ??_FRT_IncMicros:	
  5051                           ; 1 bytes @ 0x0
  5052                           
  5053  0070                     ?_EUSART_Receive_ISR:	
  5054                           ; 1 bytes @ 0x0
  5055                           
  5056  0070                     ?_EUSART_Transmit_ISR:	
  5057                           ; 1 bytes @ 0x0
  5058                           
  5059  0070                     ??_EUSART_Transmit_ISR:	
  5060                           ; 1 bytes @ 0x0
  5061                           
  5062  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  5063                           ; 1 bytes @ 0x0
  5064                           
  5065  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  5066                           ; 1 bytes @ 0x0
  5067                           
  5068  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  5069                           ; 1 bytes @ 0x0
  5070                           
  5071  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  5072                           ; 1 bytes @ 0x0
  5073                           
  5074  0070                     ?_EUSART_DefaultErrorHandler:	
  5075                           ; 1 bytes @ 0x0
  5076                           
  5077  0070                     ?_EUSART_RxDataHandler:	
  5078                           ; 1 bytes @ 0x0
  5079                           
  5080  0070                     ??_EUSART_RxDataHandler:	
  5081                           ; 1 bytes @ 0x0
  5082                           
  5083  0070                     ?_JSN_Sensor_Trig:	
  5084                           ; 1 bytes @ 0x0
  5085                           
  5086  0070                     ?_ReadPin:	
  5087                           ; 1 bytes @ 0x0
  5088                           
  5089  0070                     ??_ReadPin:	
  5090                           ; 1 bytes @ 0x0
  5091                           
  5092  0070                     ?_TMR0_ReadTimer:	
  5093                           ; 1 bytes @ 0x0
  5094                           
  5095  0070                     ?_TMR0_ISR:	
  5096                           ; 1 bytes @ 0x0
  5097                           
  5098  0070                     ??_TMR0_ISR:	
  5099                           ; 1 bytes @ 0x0
  5100                           
  5101  0070                     ?_CCP1_CaptureISR:	
  5102                           ; 1 bytes @ 0x0
  5103                           
  5104  0070                     ?_CCP2_CaptureISR:	
  5105                           ; 1 bytes @ 0x0
  5106                           
  5107  0070                     ?_CCP3_CaptureISR:	
  5108                           ; 1 bytes @ 0x0
  5109                           
  5110  0070                     ?_TMR1_WriteTimer:	
  5111                           ; 1 bytes @ 0x0
  5112                           
  5113  0070                     ?_TMR1_ISR:	
  5114                           ; 1 bytes @ 0x0
  5115                           
  5116  0070                     ?_EUSART_Write:	
  5117                           ; 1 bytes @ 0x0
  5118                           
  5119  0070                     ?_putch:	
  5120                           ; 1 bytes @ 0x0
  5121                           
  5122  0070                     ?_INTERRUPT_InterruptManager:	
  5123                           ; 1 bytes @ 0x0
  5124                           
  5125  0070                     ?_main:	
  5126                           ; 1 bytes @ 0x0
  5127                           
  5128  0070                     TMR1_WriteTimer@timerVal:	
  5129                           ; 2 bytes @ 0x0
  5130                           
  5131                           
  5132                           ; 2 bytes @ 0x0
  5133  0070                     	ds	1
  5134  0071                     ??_EUSART_Receive_ISR:
  5135  0071                     ??_EUSART_DefaultErrorHandler:	
  5136                           ; 1 bytes @ 0x1
  5137                           
  5138                           
  5139                           ; 1 bytes @ 0x1
  5140  0071                     	ds	1
  5141  0072                     ??_TMR1_WriteTimer:
  5142  0072                     ??_TMR1_ISR:	
  5143                           ; 1 bytes @ 0x2
  5144                           
  5145  0072                     ReadPin@pin:	
  5146                           ; 1 bytes @ 0x2
  5147                           
  5148                           
  5149                           ; 1 bytes @ 0x2
  5150  0072                     	ds	1
  5151  0073                     ?_CCP1_DefaultCallBack:
  5152  0073                     ?_CCP2_DefaultCallBack:	
  5153                           ; 1 bytes @ 0x3
  5154                           
  5155  0073                     ?_CCP3_DefaultCallBack:	
  5156                           ; 1 bytes @ 0x3
  5157                           
  5158  0073                     CCP1_DefaultCallBack@capturedValue:	
  5159                           ; 1 bytes @ 0x3
  5160                           
  5161  0073                     CCP2_DefaultCallBack@capturedValue:	
  5162                           ; 2 bytes @ 0x3
  5163                           
  5164  0073                     CCP3_DefaultCallBack@capturedValue:	
  5165                           ; 2 bytes @ 0x3
  5166                           
  5167                           
  5168                           ; 2 bytes @ 0x3
  5169  0073                     	ds	2
  5170  0075                     ??_CCP1_DefaultCallBack:
  5171  0075                     ??_CCP2_DefaultCallBack:	
  5172                           ; 1 bytes @ 0x5
  5173                           
  5174  0075                     ??_CCP3_DefaultCallBack:	
  5175                           ; 1 bytes @ 0x5
  5176                           
  5177                           
  5178                           ; 1 bytes @ 0x5
  5179  0075                     	ds	3
  5180  0078                     ??_CCP1_CaptureISR:
  5181  0078                     ??_CCP2_CaptureISR:	
  5182                           ; 1 bytes @ 0x8
  5183                           
  5184  0078                     ??_CCP3_CaptureISR:	
  5185                           ; 1 bytes @ 0x8
  5186                           
  5187                           
  5188                           ; 1 bytes @ 0x8
  5189  0078                     	ds	1
  5190  0079                     CCP1_CaptureISR@module:
  5191  0079                     CCP2_CaptureISR@module:	
  5192                           ; 2 bytes @ 0x9
  5193                           
  5194  0079                     CCP3_CaptureISR@module:	
  5195                           ; 2 bytes @ 0x9
  5196                           
  5197                           
  5198                           ; 2 bytes @ 0x9
  5199  0079                     	ds	2
  5200  007B                     ??_INTERRUPT_InterruptManager:
  5201                           
  5202                           	psect	cstackBANK0
  5203  0020                     __pcstackBANK0:	
  5204                           ; 1 bytes @ 0xB
  5205                           
  5206  0020                     ?_SetPin:
  5207  0020                     ?_WritePin:	
  5208                           ; 1 bytes @ 0x0
  5209                           
  5210  0020                     ??_PMD_Initialize:	
  5211                           ; 1 bytes @ 0x0
  5212                           
  5213  0020                     ??_PIN_MANAGER_Initialize:	
  5214                           ; 1 bytes @ 0x0
  5215                           
  5216  0020                     ??_OSCILLATOR_Initialize:	
  5217                           ; 1 bytes @ 0x0
  5218                           
  5219  0020                     ??_WDT_Initialize:	
  5220                           ; 1 bytes @ 0x0
  5221                           
  5222  0020                     ?_TMR0_SetInterruptHandler:	
  5223                           ; 1 bytes @ 0x0
  5224                           
  5225  0020                     ?_CCP1_SetCallBack:	
  5226                           ; 1 bytes @ 0x0
  5227                           
  5228  0020                     ?_CCP2_SetCallBack:	
  5229                           ; 1 bytes @ 0x0
  5230                           
  5231  0020                     ?_CCP3_SetCallBack:	
  5232                           ; 1 bytes @ 0x0
  5233                           
  5234  0020                     ?_TMR1_SetInterruptHandler:	
  5235                           ; 1 bytes @ 0x0
  5236                           
  5237  0020                     ?_EUSART_SetRxInterruptHandler:	
  5238                           ; 1 bytes @ 0x0
  5239                           
  5240  0020                     ?_EUSART_SetTxInterruptHandler:	
  5241                           ; 1 bytes @ 0x0
  5242                           
  5243  0020                     ?_EUSART_SetFramingErrorHandler:	
  5244                           ; 1 bytes @ 0x0
  5245                           
  5246  0020                     ?_EUSART_SetOverrunErrorHandler:	
  5247                           ; 1 bytes @ 0x0
  5248                           
  5249  0020                     ?_EUSART_SetErrorHandler:	
  5250                           ; 1 bytes @ 0x0
  5251                           
  5252  0020                     ??_TMR0_ReadTimer:	
  5253                           ; 1 bytes @ 0x0
  5254                           
  5255  0020                     ??_EUSART_Write:	
  5256                           ; 1 bytes @ 0x0
  5257                           
  5258  0020                     ?_strlen:	
  5259                           ; 1 bytes @ 0x0
  5260                           
  5261  0020                     ?_FRT_GetMillis:	
  5262                           ; 2 bytes @ 0x0
  5263                           
  5264  0020                     ?___lmul:	
  5265                           ; 4 bytes @ 0x0
  5266                           
  5267  0020                     ?___lodiv:	
  5268                           ; 4 bytes @ 0x0
  5269                           
  5270  0020                     ?___lomod:	
  5271                           ; 8 bytes @ 0x0
  5272                           
  5273  0020                     SetPin@io:	
  5274                           ; 8 bytes @ 0x0
  5275                           
  5276  0020                     WritePin@val:	
  5277                           ; 1 bytes @ 0x0
  5278                           
  5279  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  5280                           ; 1 bytes @ 0x0
  5281                           
  5282  0020                     CCP1_SetCallBack@customCallBack:	
  5283                           ; 2 bytes @ 0x0
  5284                           
  5285  0020                     CCP2_SetCallBack@customCallBack:	
  5286                           ; 2 bytes @ 0x0
  5287                           
  5288  0020                     CCP3_SetCallBack@customCallBack:	
  5289                           ; 2 bytes @ 0x0
  5290                           
  5291  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  5292                           ; 2 bytes @ 0x0
  5293                           
  5294  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  5295                           ; 2 bytes @ 0x0
  5296                           
  5297  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  5298                           ; 2 bytes @ 0x0
  5299                           
  5300  0020                     EUSART_SetErrorHandler@interruptHandler:	
  5301                           ; 2 bytes @ 0x0
  5302                           
  5303  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  5304                           ; 2 bytes @ 0x0
  5305                           
  5306  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  5307                           ; 2 bytes @ 0x0
  5308                           
  5309  0020                     ___lmul@multiplier:	
  5310                           ; 2 bytes @ 0x0
  5311                           
  5312  0020                     ___lodiv@divisor:	
  5313                           ; 4 bytes @ 0x0
  5314                           
  5315  0020                     ___lomod@divisor:	
  5316                           ; 8 bytes @ 0x0
  5317                           
  5318                           
  5319                           ; 8 bytes @ 0x0
  5320  0020                     	ds	1
  5321  0021                     ??_SetPin:
  5322  0021                     ??_WritePin:	
  5323                           ; 1 bytes @ 0x1
  5324                           
  5325  0021                     TMR0_ReadTimer@readVal:	
  5326                           ; 1 bytes @ 0x1
  5327                           
  5328  0021                     EUSART_Write@txData:	
  5329                           ; 1 bytes @ 0x1
  5330                           
  5331                           
  5332                           ; 1 bytes @ 0x1
  5333  0021                     	ds	1
  5334  0022                     ??_CCP2_Initialize:
  5335  0022                     ??_CCP3_Initialize:	
  5336                           ; 1 bytes @ 0x2
  5337                           
  5338  0022                     ??_CCP1_Initialize:	
  5339                           ; 1 bytes @ 0x2
  5340                           
  5341  0022                     ??_TMR1_Initialize:	
  5342                           ; 1 bytes @ 0x2
  5343                           
  5344  0022                     ??_TMR0_Initialize:	
  5345                           ; 1 bytes @ 0x2
  5346                           
  5347  0022                     ??_EUSART_Initialize:	
  5348                           ; 1 bytes @ 0x2
  5349                           
  5350  0022                     ??_TMR0_SetInterruptHandler:	
  5351                           ; 1 bytes @ 0x2
  5352                           
  5353  0022                     ??_CCP1_SetCallBack:	
  5354                           ; 1 bytes @ 0x2
  5355                           
  5356  0022                     ??_CCP2_SetCallBack:	
  5357                           ; 1 bytes @ 0x2
  5358                           
  5359  0022                     ??_CCP3_SetCallBack:	
  5360                           ; 1 bytes @ 0x2
  5361                           
  5362  0022                     ??_TMR1_SetInterruptHandler:	
  5363                           ; 1 bytes @ 0x2
  5364                           
  5365  0022                     ??_EUSART_SetRxInterruptHandler:	
  5366                           ; 1 bytes @ 0x2
  5367                           
  5368  0022                     ??_EUSART_SetTxInterruptHandler:	
  5369                           ; 1 bytes @ 0x2
  5370                           
  5371  0022                     ??_EUSART_SetFramingErrorHandler:	
  5372                           ; 1 bytes @ 0x2
  5373                           
  5374  0022                     ??_EUSART_SetOverrunErrorHandler:	
  5375                           ; 1 bytes @ 0x2
  5376                           
  5377  0022                     ??_EUSART_SetErrorHandler:	
  5378                           ; 1 bytes @ 0x2
  5379                           
  5380  0022                     ??_strlen:	
  5381                           ; 1 bytes @ 0x2
  5382                           
  5383  0022                     ??_putch:	
  5384                           ; 1 bytes @ 0x2
  5385                           
  5386  0022                     ?_FRT_GetMicros:	
  5387                           ; 1 bytes @ 0x2
  5388                           
  5389  0022                     putch@txData:	
  5390                           ; 4 bytes @ 0x2
  5391                           
  5392                           
  5393                           ; 1 bytes @ 0x2
  5394  0022                     	ds	1
  5395  0023                     ??_PIC16_Init:
  5396  0023                     ??_SYSTEM_Initialize:	
  5397                           ; 1 bytes @ 0x3
  5398                           
  5399  0023                     ?_fputc:	
  5400                           ; 1 bytes @ 0x3
  5401                           
  5402  0023                     SetPin@pin:	
  5403                           ; 2 bytes @ 0x3
  5404                           
  5405  0023                     WritePin@pin:	
  5406                           ; 1 bytes @ 0x3
  5407                           
  5408  0023                     strlen@a:	
  5409                           ; 1 bytes @ 0x3
  5410                           
  5411  0023                     fputc@c:	
  5412                           ; 1 bytes @ 0x3
  5413                           
  5414                           
  5415                           ; 2 bytes @ 0x3
  5416  0023                     	ds	1
  5417  0024                     ??_FRT_GetMillis:
  5418  0024                     ?_JSN_Sensor_Init:	
  5419                           ; 1 bytes @ 0x4
  5420                           
  5421  0024                     JSN_Sensor_Init@trigPin:	
  5422                           ; 1 bytes @ 0x4
  5423                           
  5424  0024                     strlen@s:	
  5425                           ; 1 bytes @ 0x4
  5426                           
  5427  0024                     ___lmul@multiplicand:	
  5428                           ; 1 bytes @ 0x4
  5429                           
  5430                           
  5431                           ; 4 bytes @ 0x4
  5432  0024                     	ds	1
  5433  0025                     JSN_Sensor_Init@echoPin:
  5434  0025                     fputc@fp:	
  5435                           ; 1 bytes @ 0x5
  5436                           
  5437                           
  5438                           ; 1 bytes @ 0x5
  5439  0025                     	ds	1
  5440  0026                     ??_FRT_GetMicros:
  5441  0026                     ??_fputc:	
  5442                           ; 1 bytes @ 0x6
  5443                           
  5444  0026                     ??_JSN_Sensor_Init:	
  5445                           ; 1 bytes @ 0x6
  5446                           
  5447  0026                     ??_JSN_Sensor_Trig:	
  5448                           ; 1 bytes @ 0x6
  5449                           
  5450                           
  5451                           ; 1 bytes @ 0x6
  5452  0026                     	ds	2
  5453  0028                     ??___lmul:
  5454  0028                     JSN_Sensor_Init@Sensor:	
  5455                           ; 1 bytes @ 0x8
  5456                           
  5457  0028                     ___lmul@product:	
  5458                           ; 1 bytes @ 0x8
  5459                           
  5460  0028                     ___lodiv@dividend:	
  5461                           ; 4 bytes @ 0x8
  5462                           
  5463  0028                     ___lomod@dividend:	
  5464                           ; 8 bytes @ 0x8
  5465                           
  5466                           
  5467                           ; 8 bytes @ 0x8
  5468  0028                     	ds	2
  5469  002A                     JSN_Sensor_Trig@Sensor:
  5470                           
  5471                           ; 1 bytes @ 0xA
  5472  002A                     	ds	1
  5473  002B                     ?_fputs:
  5474  002B                     fputs@fp:	
  5475                           ; 2 bytes @ 0xB
  5476                           
  5477                           
  5478                           ; 1 bytes @ 0xB
  5479  002B                     	ds	1
  5480  002C                     ??_fputs:
  5481  002C                     ?___lldiv:	
  5482                           ; 1 bytes @ 0xC
  5483                           
  5484  002C                     ___lldiv@divisor:	
  5485                           ; 4 bytes @ 0xC
  5486                           
  5487                           
  5488                           ; 4 bytes @ 0xC
  5489  002C                     	ds	3
  5490  002F                     fputs@c:
  5491                           
  5492                           ; 1 bytes @ 0xF
  5493  002F                     	ds	1
  5494  0030                     ??___lodiv:
  5495  0030                     ??___lomod:	
  5496                           ; 1 bytes @ 0x10
  5497                           
  5498  0030                     fputs@i:	
  5499                           ; 1 bytes @ 0x10
  5500                           
  5501  0030                     ___lldiv@dividend:	
  5502                           ; 2 bytes @ 0x10
  5503                           
  5504                           
  5505                           ; 4 bytes @ 0x10
  5506  0030                     	ds	1
  5507  0031                     ___lomod@counter:
  5508  0031                     ___lodiv@quotient:	
  5509                           ; 1 bytes @ 0x11
  5510                           
  5511                           
  5512                           ; 8 bytes @ 0x11
  5513  0031                     	ds	1
  5514  0032                     fputs@s:
  5515                           
  5516                           ; 1 bytes @ 0x12
  5517  0032                     	ds	1
  5518  0033                     ?_pad:
  5519  0033                     pad@buf:	
  5520                           ; 2 bytes @ 0x13
  5521                           
  5522                           
  5523                           ; 1 bytes @ 0x13
  5524  0033                     	ds	1
  5525  0034                     ??___lldiv:
  5526  0034                     pad@p:	
  5527                           ; 1 bytes @ 0x14
  5528                           
  5529                           
  5530                           ; 2 bytes @ 0x14
  5531  0034                     	ds	1
  5532  0035                     ___lldiv@quotient:
  5533                           
  5534                           ; 4 bytes @ 0x15
  5535  0035                     	ds	1
  5536  0036                     ??_pad:
  5537                           
  5538                           ; 1 bytes @ 0x16
  5539  0036                     	ds	1
  5540  0037                     pad@i:
  5541                           
  5542                           ; 2 bytes @ 0x17
  5543  0037                     	ds	2
  5544  0039                     ___lldiv@counter:
  5545  0039                     ___lodiv@counter:	
  5546                           ; 1 bytes @ 0x19
  5547                           
  5548  0039                     pad@w:	
  5549                           ; 1 bytes @ 0x19
  5550                           
  5551                           
  5552                           ; 2 bytes @ 0x19
  5553  0039                     	ds	1
  5554  003A                     ?_JSN_Sensor_GetDistance:
  5555                           
  5556                           ; 2 bytes @ 0x1A
  5557  003A                     	ds	1
  5558  003B                     pad@fp:
  5559                           
  5560                           ; 1 bytes @ 0x1B
  5561  003B                     	ds	1
  5562  003C                     ??_JSN_Sensor_GetDistance:
  5563  003C                     ?_utoa:	
  5564                           ; 1 bytes @ 0x1C
  5565                           
  5566  003C                     utoa@d:	
  5567                           ; 2 bytes @ 0x1C
  5568                           
  5569                           
  5570                           ; 8 bytes @ 0x1C
  5571  003C                     	ds	2
  5572  003E                     JSN_Sensor_GetDistance@Sensor:
  5573                           
  5574                           ; 1 bytes @ 0x1E
  5575  003E                     	ds	6
  5576  0044                     ??_utoa:
  5577                           
  5578                           ; 1 bytes @ 0x24
  5579  0044                     	ds	1
  5580  0045                     utoa@p:
  5581                           
  5582                           ; 2 bytes @ 0x25
  5583  0045                     	ds	2
  5584  0047                     utoa@fp:
  5585                           
  5586                           ; 1 bytes @ 0x27
  5587  0047                     	ds	1
  5588  0048                     utoa@w:
  5589                           
  5590                           ; 2 bytes @ 0x28
  5591  0048                     	ds	2
  5592  004A                     utoa@n:
  5593                           
  5594                           ; 8 bytes @ 0x2A
  5595  004A                     	ds	8
  5596  0052                     utoa@i:
  5597                           
  5598                           ; 2 bytes @ 0x32
  5599  0052                     	ds	2
  5600  0054                     ?_vfpfcnvrt:
  5601  0054                     vfpfcnvrt@fmt:	
  5602                           ; 2 bytes @ 0x34
  5603                           
  5604                           
  5605                           ; 1 bytes @ 0x34
  5606  0054                     	ds	1
  5607  0055                     vfpfcnvrt@ap:
  5608                           
  5609                           ; 1 bytes @ 0x35
  5610  0055                     	ds	1
  5611  0056                     ??_vfpfcnvrt:
  5612                           
  5613                           ; 1 bytes @ 0x36
  5614  0056                     	ds	5
  5615  005B                     vfpfcnvrt@llu:
  5616                           
  5617                           ; 8 bytes @ 0x3B
  5618  005B                     	ds	8
  5619  0063                     vfpfcnvrt@fp:
  5620                           
  5621                           ; 1 bytes @ 0x43
  5622  0063                     	ds	1
  5623  0064                     ?_vfprintf:
  5624  0064                     vfprintf@fmt:	
  5625                           ; 2 bytes @ 0x44
  5626                           
  5627                           
  5628                           ; 2 bytes @ 0x44
  5629  0064                     	ds	2
  5630  0066                     vfprintf@ap:
  5631                           
  5632                           ; 1 bytes @ 0x46
  5633  0066                     	ds	1
  5634  0067                     ??_vfprintf:
  5635                           
  5636                           ; 1 bytes @ 0x47
  5637  0067                     	ds	2
  5638  0069                     vfprintf@fp:
  5639                           
  5640                           ; 1 bytes @ 0x49
  5641  0069                     	ds	1
  5642  006A                     vfprintf@cfmt:
  5643                           
  5644                           ; 2 bytes @ 0x4A
  5645  006A                     	ds	2
  5646  006C                     ?_printf:
  5647  006C                     printf@fmt:	
  5648                           ; 2 bytes @ 0x4C
  5649                           
  5650                           
  5651                           ; 2 bytes @ 0x4C
  5652  006C                     	ds	4
  5653                           
  5654                           	psect	maintext
  5655  03B5                     __pmaintext:	
  5656 ;;
  5657 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5658 ;;
  5659 ;; *************** function _main *****************
  5660 ;; Defined at:
  5661 ;;		line 129 in file "JSN_Sensor.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;		None
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  currMilli       4   10[BANK1 ] unsigned long 
  5666 ;;  prevMilli       4    6[BANK1 ] unsigned long 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  2   64[None  ] int 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : B1F/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:       12 bytes
  5681 ;; Hardware stack levels required when called: 13
  5682 ;; This function calls:
  5683 ;;		_FRT_GetMillis
  5684 ;;		_JSN_Sensor_GetDistance
  5685 ;;		_JSN_Sensor_Init
  5686 ;;		_JSN_Sensor_Trig
  5687 ;;		_PIC16_Init
  5688 ;;		_SetPin
  5689 ;;		_WritePin
  5690 ;;		_printf
  5691 ;; This function is called by:
  5692 ;;		Startup code after reset
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696  03B5                     _main:	
  5697                           ;psect for function _main
  5698                           
  5699  03B5                     l3707:	
  5700                           ;incstack = 0
  5701                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5702                           
  5703                           
  5704                           ;JSN_Sensor.c: 131:     PIC16_Init();
  5705  03B5  318F  2749  3183   	fcall	_PIC16_Init
  5706  03B8                     l3709:
  5707                           
  5708                           ;JSN_Sensor.c: 132:     JSN_Sensor_Init(&Sens1, C6, C5);
  5709  03B8  3006               	movlw	6
  5710  03B9  0021               	movlb	1	; select bank1
  5711  03BA  00E1               	movwf	??_main^(0+128)
  5712  03BB  0861               	movf	??_main^(0+128),w
  5713  03BC  0020               	movlb	0	; select bank0
  5714  03BD  00A4               	movwf	JSN_Sensor_Init@trigPin
  5715  03BE  3003               	movlw	3
  5716  03BF  0021               	movlb	1	; select bank1
  5717  03C0  00E2               	movwf	(??_main+1)^(0+128)
  5718  03C1  0862               	movf	(??_main+1)^(0+128),w
  5719  03C2  0020               	movlb	0	; select bank0
  5720  03C3  00A5               	movwf	JSN_Sensor_Init@echoPin
  5721  03C4  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5722  03C5  3185  2570  3183   	fcall	_JSN_Sensor_Init
  5723  03C8                     l3711:
  5724  03C8                     l3713:
  5725                           
  5726                           ;JSN_Sensor.c: 136:     unsigned long prevMilli = 0;
  5727  03C8  3000               	movlw	0
  5728  03C9  0021               	movlb	1	; select bank1
  5729  03CA  00E8               	movwf	(main@prevMilli+3)^(0+128)
  5730  03CB  3000               	movlw	0
  5731  03CC  00E7               	movwf	(main@prevMilli+2)^(0+128)
  5732  03CD  3000               	movlw	0
  5733  03CE  00E6               	movwf	(main@prevMilli+1)^(0+128)
  5734  03CF  3000               	movlw	0
  5735  03D0  00E5               	movwf	main@prevMilli^(0+128)
  5736  03D1                     l3715:
  5737                           
  5738                           ;JSN_Sensor.c: 137:     SetPin(C0, 0);
  5739  03D1  0020               	movlb	0	; select bank0
  5740  03D2  01A0               	clrf	SetPin@io
  5741  03D3  300C               	movlw	12
  5742  03D4  3182  22FA  3183   	fcall	_SetPin
  5743  03D7                     l3717:
  5744                           
  5745                           ;JSN_Sensor.c: 138:     WritePin(C0, 0);
  5746  03D7  0020               	movlb	0	; select bank0
  5747  03D8  01A0               	clrf	WritePin@val
  5748  03D9  300C               	movlw	12
  5749  03DA  3182  223F  3183   	fcall	_WritePin
  5750  03DD                     l3719:
  5751                           
  5752                           ;JSN_Sensor.c: 140:     JSN_Sensor_Trig(&Sens1);
  5753  03DD  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5754  03DE  3187  2717  3183   	fcall	_JSN_Sensor_Trig
  5755  03E1                     l3721:
  5756                           
  5757                           ;JSN_Sensor.c: 143:         currMilli = FRT_GetMillis();
  5758  03E1  318C  2422  3183   	fcall	_FRT_GetMillis
  5759  03E4  0020               	movlb	0	; select bank0
  5760  03E5  0823               	movf	?_FRT_GetMillis+3,w
  5761  03E6  0021               	movlb	1	; select bank1
  5762  03E7  00EC               	movwf	(main@currMilli+3)^(0+128)
  5763  03E8  0020               	movlb	0	; select bank0
  5764  03E9  0822               	movf	?_FRT_GetMillis+2,w
  5765  03EA  0021               	movlb	1	; select bank1
  5766  03EB  00EB               	movwf	(main@currMilli+2)^(0+128)
  5767  03EC  0020               	movlb	0	; select bank0
  5768  03ED  0821               	movf	?_FRT_GetMillis+1,w
  5769  03EE  0021               	movlb	1	; select bank1
  5770  03EF  00EA               	movwf	(main@currMilli+1)^(0+128)
  5771  03F0  0020               	movlb	0	; select bank0
  5772  03F1  0820               	movf	?_FRT_GetMillis,w
  5773  03F2  0021               	movlb	1	; select bank1
  5774  03F3  00E9               	movwf	main@currMilli^(0+128)
  5775  03F4                     l3723:
  5776                           
  5777                           ;JSN_Sensor.c: 146:         if((currMilli - prevMilli) >= 50) {
  5778  03F4  0865               	movf	main@prevMilli^(0+128),w
  5779  03F5  0269               	subwf	main@currMilli^(0+128),w
  5780  03F6  00E1               	movwf	??_main^(0+128)
  5781  03F7  0866               	movf	(main@prevMilli+1)^(0+128),w
  5782  03F8  3B6A               	subwfb	(main@currMilli+1)^(0+128),w
  5783  03F9  00E2               	movwf	(??_main^(0+128)+1)
  5784  03FA  0867               	movf	(main@prevMilli+2)^(0+128),w
  5785  03FB  3B6B               	subwfb	(main@currMilli+2)^(0+128),w
  5786  03FC  00E3               	movwf	(??_main^(0+128)+2)
  5787  03FD  0868               	movf	(main@prevMilli+3)^(0+128),w
  5788  03FE  3B6C               	subwfb	(main@currMilli+3)^(0+128),w
  5789  03FF  00E4               	movwf	(??_main^(0+128)+3)
  5790  0400  0864               	movf	(??_main^(0+128)+3),w
  5791  0401  1D03               	btfss	3,2
  5792  0402  2C0F               	goto	u1320
  5793  0403  0863               	movf	(??_main^(0+128)+2),w
  5794  0404  1D03               	btfss	3,2
  5795  0405  2C0F               	goto	u1320
  5796  0406  0862               	movf	(??_main^(0+128)+1),w
  5797  0407  1D03               	btfss	3,2
  5798  0408  2C0F               	goto	u1320
  5799  0409  3032               	movlw	50
  5800  040A  0261               	subwf	??_main^(0+128),w
  5801  040B  1C03               	btfss	3,0
  5802  040C  2C0E               	goto	u1321
  5803  040D  2C0F               	goto	u1320
  5804  040E                     u1321:
  5805  040E  2BE1               	goto	l3721
  5806  040F                     u1320:
  5807  040F                     l3725:
  5808                           
  5809                           ;JSN_Sensor.c: 149:             if(JSN_Sensor_GetDistance(&Sens1) < 500) {
  5810  040F  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5811  0410  318F  27C0  3183   	fcall	_JSN_Sensor_GetDistance
  5812  0413  3001               	movlw	1
  5813  0414  0020               	movlb	0	; select bank0
  5814  0415  023B               	subwf	?_JSN_Sensor_GetDistance+1,w
  5815  0416  30F4               	movlw	244
  5816  0417  1903               	skipnz
  5817  0418  023A               	subwf	?_JSN_Sensor_GetDistance,w
  5818  0419  1803               	skipnc
  5819  041A  2C1C               	goto	u1331
  5820  041B  2C1D               	goto	u1330
  5821  041C                     u1331:
  5822  041C  2C24               	goto	l3729
  5823  041D                     u1330:
  5824  041D                     l3727:
  5825                           
  5826                           ;JSN_Sensor.c: 150:                 WritePin(C0, 1);
  5827  041D  01A0               	clrf	WritePin@val
  5828  041E  0AA0               	incf	WritePin@val,f
  5829  041F  300C               	movlw	12
  5830  0420  3182  223F  3183   	fcall	_WritePin
  5831                           
  5832                           ;JSN_Sensor.c: 151:             }
  5833  0423  2C34               	goto	l3733
  5834  0424                     l3729:
  5835  0424  3001               	movlw	1
  5836  0425  0021               	movlb	1	; select bank1
  5837  0426  025C               	subwf	((_Sens1+1)^(0+128)+2),w
  5838  0427  30F5               	movlw	245
  5839  0428  1903               	skipnz
  5840  0429  025B               	subwf	(_Sens1^(0+128)+2),w
  5841  042A  1C03               	skipc
  5842  042B  2C2D               	goto	u1341
  5843  042C  2C2E               	goto	u1340
  5844  042D                     u1341:
  5845  042D  2C34               	goto	l3733
  5846  042E                     u1340:
  5847  042E                     l3731:
  5848                           
  5849                           ;JSN_Sensor.c: 153:                 WritePin(C0, 0);
  5850  042E  0020               	movlb	0	; select bank0
  5851  042F  01A0               	clrf	WritePin@val
  5852  0430  300C               	movlw	12
  5853  0431  3182  223F  3183   	fcall	_WritePin
  5854  0434                     l3733:
  5855                           
  5856                           ;JSN_Sensor.c: 157:             printf("Distance = %u \n", JSN_Sensor_GetDistance(&Sens1
      +                          ));
  5857  0434  3000               	movlw	low (STR_1| (0+32768))
  5858  0435  0020               	movlb	0	; select bank0
  5859  0436  00EC               	movwf	printf@fmt
  5860  0437  3090               	movlw	high (STR_1| (0+32768))
  5861  0438  00ED               	movwf	printf@fmt+1
  5862  0439  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5863  043A  318F  27C0  3183   	fcall	_JSN_Sensor_GetDistance
  5864  043D  0020               	movlb	0	; select bank0
  5865  043E  083B               	movf	?_JSN_Sensor_GetDistance+1,w
  5866  043F  00EF               	movwf	?_printf+3
  5867  0440  083A               	movf	?_JSN_Sensor_GetDistance,w
  5868  0441  00EE               	movwf	?_printf+2
  5869  0442  318C  2448  3183   	fcall	_printf
  5870  0445                     l3735:
  5871                           
  5872                           ;JSN_Sensor.c: 160:             JSN_Sensor_Trig(&Sens1);
  5873  0445  30D9               	movlw	(low (_Sens1| 0))& (0+255)
  5874  0446  3187  2717  3183   	fcall	_JSN_Sensor_Trig
  5875  0449                     l3737:
  5876                           
  5877                           ;JSN_Sensor.c: 163:             prevMilli = currMilli;
  5878  0449  0021               	movlb	1	; select bank1
  5879  044A  086C               	movf	(main@currMilli+3)^(0+128),w
  5880  044B  00E8               	movwf	(main@prevMilli+3)^(0+128)
  5881  044C  086B               	movf	(main@currMilli+2)^(0+128),w
  5882  044D  00E7               	movwf	(main@prevMilli+2)^(0+128)
  5883  044E  086A               	movf	(main@currMilli+1)^(0+128),w
  5884  044F  00E6               	movwf	(main@prevMilli+1)^(0+128)
  5885  0450  0869               	movf	main@currMilli^(0+128),w
  5886  0451  00E5               	movwf	main@prevMilli^(0+128)
  5887  0452  2BE1               	goto	l3721
  5888  0453  3180  2874         	ljmp	start
  5889  0455                     __end_of_main:
  5890                           
  5891                           	psect	text1
  5892  0C48                     __ptext1:	
  5893 ;; *************** function _printf *****************
  5894 ;; Defined at:
  5895 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\printf.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  5898 ;;		 -> STR_1(16), 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  ret             2    0        int 
  5901 ;;  ap              1    1[BANK1 ] PTR void [1]
  5902 ;;		 -> ?_printf(2), 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  2   76[BANK0 ] int 
  5905 ;; Registers used:
  5906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Totals:         0       4       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;Total ram usage:        6 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 12
  5919 ;; This function calls:
  5920 ;;		_vfprintf
  5921 ;; This function is called by:
  5922 ;;		_main
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926  0C48                     _printf:	
  5927                           ;psect for function _printf
  5928                           
  5929  0C48                     l3617:	
  5930                           ;incstack = 0
  5931                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5932                           
  5933  0C48  306E               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5934  0C49  0021               	movlb	1	; select bank1
  5935  0C4A  00DF               	movwf	??_printf^(0+128)
  5936  0C4B  085F               	movf	??_printf^(0+128),w
  5937  0C4C  00E0               	movwf	printf@ap^(0+128)
  5938  0C4D                     l3619:
  5939  0C4D  0020               	movlb	0	; select bank0
  5940  0C4E  086D               	movf	printf@fmt+1,w
  5941  0C4F  00E5               	movwf	vfprintf@fmt+1
  5942  0C50  086C               	movf	printf@fmt,w
  5943  0C51  00E4               	movwf	vfprintf@fmt
  5944  0C52  30E0               	movlw	(low (printf@ap| 0))& (0+255)
  5945  0C53  0021               	movlb	1	; select bank1
  5946  0C54  00DF               	movwf	??_printf^(0+128)
  5947  0C55  085F               	movf	??_printf^(0+128),w
  5948  0C56  0020               	movlb	0	; select bank0
  5949  0C57  00E6               	movwf	vfprintf@ap
  5950  0C58  3000               	movlw	0
  5951  0C59  318E  2600  318C   	fcall	_vfprintf
  5952  0C5C                     l1428:
  5953  0C5C  0008               	return
  5954  0C5D                     __end_of_printf:
  5955                           
  5956                           	psect	text2
  5957  0E00                     __ptext2:	
  5958 ;; *************** function _vfprintf *****************
  5959 ;; Defined at:
  5960 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  fp              1    wreg     PTR struct _IO_FILE
  5963 ;;		 -> NULL(0), 
  5964 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
  5965 ;;		 -> STR_1(16), 
  5966 ;;  ap              1   70[BANK0 ] PTR PTR void 
  5967 ;;		 -> printf@ap(1), 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  5970 ;;		 -> NULL(0), 
  5971 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
  5972 ;;		 -> STR_1(16), 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  2   68[BANK0 ] int 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5982 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5983 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5984 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;Total ram usage:        8 bytes
  5987 ;; Hardware stack levels used: 1
  5988 ;; Hardware stack levels required when called: 11
  5989 ;; This function calls:
  5990 ;;		_vfpfcnvrt
  5991 ;; This function is called by:
  5992 ;;		_printf
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996  0E00                     _vfprintf:	
  5997                           ;psect for function _vfprintf
  5998                           
  5999                           
  6000                           ;incstack = 0
  6001                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6002                           ;vfprintf@fp stored from wreg
  6003  0E00  0020               	movlb	0	; select bank0
  6004  0E01  00E9               	movwf	vfprintf@fp
  6005  0E02                     l3513:
  6006                           
  6007                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6008  0E02  0865               	movf	vfprintf@fmt+1,w
  6009  0E03  00EB               	movwf	vfprintf@cfmt+1
  6010  0E04  0864               	movf	vfprintf@fmt,w
  6011  0E05  00EA               	movwf	vfprintf@cfmt
  6012  0E06                     l3515:
  6013                           
  6014                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6015  0E06  0021               	movlb	1	; select bank1
  6016  0E07  01A8               	clrf	_nout^(0+128)
  6017  0E08  01A9               	clrf	(_nout+1)^(0+128)
  6018                           
  6019                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6020  0E09  2E1E               	goto	l3519
  6021  0E0A                     l3517:
  6022                           
  6023                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6024  0E0A  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6025  0E0B  00E7               	movwf	??_vfprintf
  6026  0E0C  0867               	movf	??_vfprintf,w
  6027  0E0D  00D4               	movwf	vfpfcnvrt@fmt
  6028  0E0E  0866               	movf	vfprintf@ap,w
  6029  0E0F  00E8               	movwf	??_vfprintf+1
  6030  0E10  0868               	movf	??_vfprintf+1,w
  6031  0E11  00D5               	movwf	vfpfcnvrt@ap
  6032  0E12  0869               	movf	vfprintf@fp,w
  6033  0E13  3181  217C  318E   	fcall	_vfpfcnvrt
  6034  0E16  0020               	movlb	0	; select bank0
  6035  0E17  0854               	movf	?_vfpfcnvrt,w
  6036  0E18  0021               	movlb	1	; select bank1
  6037  0E19  07A8               	addwf	_nout^(0+128),f
  6038  0E1A  0020               	movlb	0	; select bank0
  6039  0E1B  0855               	movf	?_vfpfcnvrt+1,w
  6040  0E1C  0021               	movlb	1	; select bank1
  6041  0E1D  3DA9               	addwfc	(_nout+1)^(0+128),f
  6042  0E1E                     l3519:
  6043                           
  6044                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6045  0E1E  0020               	movlb	0	; select bank0
  6046  0E1F  086A               	movf	vfprintf@cfmt,w
  6047  0E20  0084               	movwf	4
  6048  0E21  086B               	movf	vfprintf@cfmt+1,w
  6049  0E22  0085               	movwf	5
  6050  0E23  0012               	moviw fsr0++
  6051  0E24  1D03               	btfss	3,2
  6052  0E25  2E27               	goto	u1221
  6053  0E26  2E28               	goto	u1220
  6054  0E27                     u1221:
  6055  0E27  2E0A               	goto	l3517
  6056  0E28                     u1220:
  6057  0E28                     l3521:
  6058                           
  6059                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6060  0E28  0021               	movlb	1	; select bank1
  6061  0E29  0829               	movf	(_nout+1)^(0+128),w
  6062  0E2A  0020               	movlb	0	; select bank0
  6063  0E2B  00E5               	movwf	?_vfprintf+1
  6064  0E2C  0021               	movlb	1	; select bank1
  6065  0E2D  0828               	movf	_nout^(0+128),w
  6066  0E2E  0020               	movlb	0	; select bank0
  6067  0E2F  00E4               	movwf	?_vfprintf
  6068  0E30                     l1485:
  6069  0E30  0008               	return
  6070  0E31                     __end_of_vfprintf:
  6071                           
  6072                           	psect	text3
  6073  017C                     __ptext3:	
  6074 ;; *************** function _vfpfcnvrt *****************
  6075 ;; Defined at:
  6076 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  fp              1    wreg     PTR struct _IO_FILE
  6079 ;;		 -> NULL(0), 
  6080 ;;  fmt             1   52[BANK0 ] PTR PTR unsigned char 
  6081 ;;		 -> vfprintf@cfmt(2), 
  6082 ;;  ap              1   53[BANK0 ] PTR PTR void 
  6083 ;;		 -> printf@ap(1), 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  6086 ;;		 -> NULL(0), 
  6087 ;;  llu             8   59[BANK0 ] unsigned long long 
  6088 ;;  ll              8    0        long long 
  6089 ;;  f               4    0        long long 
  6090 ;;  ct              3    0        unsigned char [3]
  6091 ;;  vp              2    0        PTR void 
  6092 ;;  i               2    0        int 
  6093 ;;  done            2    0        int 
  6094 ;;  cp              2    0        PTR unsigned char 
  6095 ;;  c               1    0        unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  2   52[BANK0 ] int 
  6098 ;; Registers used:
  6099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;Total ram usage:       16 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; Hardware stack levels required when called: 10
  6112 ;; This function calls:
  6113 ;;		_fputc
  6114 ;;		_utoa
  6115 ;; This function is called by:
  6116 ;;		_vfprintf
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120  017C                     _vfpfcnvrt:	
  6121                           ;psect for function _vfpfcnvrt
  6122                           
  6123                           
  6124                           ;incstack = 0
  6125                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6126                           ;vfpfcnvrt@fp stored from wreg
  6127  017C  0020               	movlb	0	; select bank0
  6128  017D  00E3               	movwf	vfpfcnvrt@fp
  6129  017E                     l3199:
  6130                           
  6131                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6132  017E  0854               	movf	vfpfcnvrt@fmt,w
  6133  017F  0086               	movwf	6
  6134  0180  0187               	clrf	7
  6135  0181  3F40               	moviw [0]fsr1
  6136  0182  00D6               	movwf	??_vfpfcnvrt
  6137  0183  3F41               	moviw [1]fsr1
  6138  0184  00D7               	movwf	??_vfpfcnvrt+1
  6139  0185  0856               	movf	??_vfpfcnvrt,w
  6140  0186  0084               	movwf	4
  6141  0187  0857               	movf	??_vfpfcnvrt+1,w
  6142  0188  0085               	movwf	5
  6143  0189  0012               	moviw fsr0++
  6144  018A  3A25               	xorlw	37
  6145  018B  1D03               	btfss	3,2
  6146  018C  298E               	goto	u1071
  6147  018D  298F               	goto	u1070
  6148  018E                     u1071:
  6149  018E  2A1B               	goto	l3233
  6150  018F                     u1070:
  6151  018F                     l3201:
  6152                           
  6153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6154  018F  0854               	movf	vfpfcnvrt@fmt,w
  6155  0190  0086               	movwf	6
  6156  0191  0187               	clrf	7
  6157  0192  3001               	movlw	1
  6158  0193  0781               	addwf	1,f
  6159  0194  3141               	addfsr 1,1
  6160  0195  1803               	skipnc
  6161  0196  0A81               	incf	1,f
  6162  0197                     l3203:
  6163                           
  6164                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6165  0197  0021               	movlb	1	; select bank1
  6166  0198  01AA               	clrf	_width^(0+128)
  6167  0199  01AB               	clrf	(_width+1)^(0+128)
  6168  019A  01AE               	clrf	_flags^(0+128)
  6169  019B  01AF               	clrf	(_flags+1)^(0+128)
  6170  019C                     l3205:
  6171                           
  6172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6173  019C  30FF               	movlw	255
  6174  019D  00AC               	movwf	_prec^(0+128)
  6175  019E  30FF               	movlw	255
  6176  019F  00AD               	movwf	(_prec^(0+128)+1)
  6177  01A0                     l3207:
  6178                           
  6179                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  6180  01A0  0020               	movlb	0	; select bank0
  6181  01A1  0854               	movf	vfpfcnvrt@fmt,w
  6182  01A2  0086               	movwf	6
  6183  01A3  0187               	clrf	7
  6184  01A4  3F40               	moviw [0]fsr1
  6185  01A5  00D6               	movwf	??_vfpfcnvrt
  6186  01A6  3F41               	moviw [1]fsr1
  6187  01A7  00D7               	movwf	??_vfpfcnvrt+1
  6188  01A8  0856               	movf	??_vfpfcnvrt,w
  6189  01A9  0084               	movwf	4
  6190  01AA  0857               	movf	??_vfpfcnvrt+1,w
  6191  01AB  0085               	movwf	5
  6192  01AC  0012               	moviw fsr0++
  6193  01AD  3A75               	xorlw	117
  6194  01AE  1D03               	btfss	3,2
  6195  01AF  29B1               	goto	u1081
  6196  01B0  29B2               	goto	u1080
  6197  01B1                     u1081:
  6198  01B1  29E6               	goto	l3217
  6199  01B2                     u1080:
  6200  01B2                     l3209:
  6201                           
  6202                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  6203  01B2  0854               	movf	vfpfcnvrt@fmt,w
  6204  01B3  0086               	movwf	6
  6205  01B4  0187               	clrf	7
  6206  01B5  3001               	movlw	1
  6207  01B6  0781               	addwf	1,f
  6208  01B7  3141               	addfsr 1,1
  6209  01B8  1803               	skipnc
  6210  01B9  0A81               	incf	1,f
  6211  01BA                     l3211:
  6212                           
  6213                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6214  01BA  0855               	movf	vfpfcnvrt@ap,w
  6215  01BB  0086               	movwf	6
  6216  01BC  0187               	clrf	7
  6217  01BD  0801               	movf	1,w
  6218  01BE  0084               	movwf	4
  6219  01BF  0185               	clrf	5
  6220  01C0  3002               	movlw	2
  6221  01C1  0781               	addwf	1,f
  6222  01C2  3F00               	moviw [0]fsr0
  6223  01C3  00DB               	movwf	vfpfcnvrt@llu
  6224  01C4  3F01               	moviw [1]fsr0
  6225  01C5  00DC               	movwf	vfpfcnvrt@llu+1
  6226  01C6  01DD               	clrf	vfpfcnvrt@llu+2
  6227  01C7  01DE               	clrf	vfpfcnvrt@llu+3
  6228  01C8  01DF               	clrf	vfpfcnvrt@llu+4
  6229  01C9  01E0               	clrf	vfpfcnvrt@llu+5
  6230  01CA  01E1               	clrf	vfpfcnvrt@llu+6
  6231  01CB  01E2               	clrf	vfpfcnvrt@llu+7
  6232  01CC                     l3213:
  6233                           
  6234                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  6235  01CC  085B               	movf	vfpfcnvrt@llu,w
  6236  01CD  00BC               	movwf	utoa@d
  6237  01CE  085C               	movf	vfpfcnvrt@llu+1,w
  6238  01CF  00BD               	movwf	utoa@d+1
  6239  01D0  085D               	movf	vfpfcnvrt@llu+2,w
  6240  01D1  00BE               	movwf	utoa@d+2
  6241  01D2  085E               	movf	vfpfcnvrt@llu+3,w
  6242  01D3  00BF               	movwf	utoa@d+3
  6243  01D4  085F               	movf	vfpfcnvrt@llu+4,w
  6244  01D5  00C0               	movwf	utoa@d+4
  6245  01D6  0860               	movf	vfpfcnvrt@llu+5,w
  6246  01D7  00C1               	movwf	utoa@d+5
  6247  01D8  0861               	movf	vfpfcnvrt@llu+6,w
  6248  01D9  00C2               	movwf	utoa@d+6
  6249  01DA  0862               	movf	vfpfcnvrt@llu+7,w
  6250  01DB  00C3               	movwf	utoa@d+7
  6251  01DC  0863               	movf	vfpfcnvrt@fp,w
  6252  01DD  3180  208D  3181   	fcall	_utoa
  6253  01E0  0020               	movlb	0	; select bank0
  6254  01E1  083D               	movf	?_utoa+1,w
  6255  01E2  00D5               	movwf	?_vfpfcnvrt+1
  6256  01E3  083C               	movf	?_utoa,w
  6257  01E4  00D4               	movwf	?_vfpfcnvrt
  6258  01E5  2A3E               	goto	l1478
  6259  01E6                     l3217:
  6260                           
  6261                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6262  01E6  0854               	movf	vfpfcnvrt@fmt,w
  6263  01E7  0086               	movwf	6
  6264  01E8  0187               	clrf	7
  6265  01E9  3F40               	moviw [0]fsr1
  6266  01EA  00D6               	movwf	??_vfpfcnvrt
  6267  01EB  3F41               	moviw [1]fsr1
  6268  01EC  00D7               	movwf	??_vfpfcnvrt+1
  6269  01ED  0856               	movf	??_vfpfcnvrt,w
  6270  01EE  0084               	movwf	4
  6271  01EF  0857               	movf	??_vfpfcnvrt+1,w
  6272  01F0  0085               	movwf	5
  6273  01F1  0012               	moviw fsr0++
  6274  01F2  3A25               	xorlw	37
  6275  01F3  1D03               	btfss	3,2
  6276  01F4  29F6               	goto	u1091
  6277  01F5  29F7               	goto	u1090
  6278  01F6                     u1091:
  6279  01F6  2A10               	goto	l3227
  6280  01F7                     u1090:
  6281  01F7                     l3219:
  6282                           
  6283                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6284  01F7  0854               	movf	vfpfcnvrt@fmt,w
  6285  01F8  0086               	movwf	6
  6286  01F9  0187               	clrf	7
  6287  01FA  3001               	movlw	1
  6288  01FB  0781               	addwf	1,f
  6289  01FC  3141               	addfsr 1,1
  6290  01FD  1803               	skipnc
  6291  01FE  0A81               	incf	1,f
  6292  01FF                     l3221:
  6293                           
  6294                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6295  01FF  3025               	movlw	37
  6296  0200  00A3               	movwf	fputc@c
  6297  0201  3000               	movlw	0
  6298  0202  00A4               	movwf	fputc@c+1
  6299  0203  0863               	movf	vfpfcnvrt@fp,w
  6300  0204  00D6               	movwf	??_vfpfcnvrt
  6301  0205  0856               	movf	??_vfpfcnvrt,w
  6302  0206  00A5               	movwf	fputc@fp
  6303  0207  3187  27B4  3181   	fcall	_fputc
  6304  020A                     l3223:
  6305                           
  6306                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6307  020A  3001               	movlw	1
  6308  020B  0020               	movlb	0	; select bank0
  6309  020C  00D4               	movwf	?_vfpfcnvrt
  6310  020D  3000               	movlw	0
  6311  020E  00D5               	movwf	?_vfpfcnvrt+1
  6312  020F  2A3E               	goto	l1478
  6313  0210                     l3227:
  6314                           
  6315                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6316  0210  0854               	movf	vfpfcnvrt@fmt,w
  6317  0211  0086               	movwf	6
  6318  0212  0187               	clrf	7
  6319  0213  3001               	movlw	1
  6320  0214  0781               	addwf	1,f
  6321  0215  3141               	addfsr 1,1
  6322  0216  1803               	skipnc
  6323  0217  0A81               	incf	1,f
  6324  0218                     l3229:
  6325                           
  6326                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6327  0218  01D4               	clrf	?_vfpfcnvrt
  6328  0219  01D5               	clrf	?_vfpfcnvrt+1
  6329  021A  2A3E               	goto	l1478
  6330  021B                     l3233:
  6331                           
  6332                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6333  021B  0854               	movf	vfpfcnvrt@fmt,w
  6334  021C  0086               	movwf	6
  6335  021D  0187               	clrf	7
  6336  021E  3F40               	moviw [0]fsr1
  6337  021F  00D6               	movwf	??_vfpfcnvrt
  6338  0220  3F41               	moviw [1]fsr1
  6339  0221  00D7               	movwf	??_vfpfcnvrt+1
  6340  0222  0856               	movf	??_vfpfcnvrt,w
  6341  0223  0084               	movwf	4
  6342  0224  0857               	movf	??_vfpfcnvrt+1,w
  6343  0225  0085               	movwf	5
  6344  0226  0800               	movf	0,w	;code access
  6345  0227  00D8               	movwf	??_vfpfcnvrt+2
  6346  0228  01D9               	clrf	??_vfpfcnvrt+3
  6347  0229  0858               	movf	??_vfpfcnvrt+2,w
  6348  022A  00A3               	movwf	fputc@c
  6349  022B  0859               	movf	??_vfpfcnvrt+3,w
  6350  022C  00A4               	movwf	fputc@c+1
  6351  022D  0863               	movf	vfpfcnvrt@fp,w
  6352  022E  00DA               	movwf	??_vfpfcnvrt+4
  6353  022F  085A               	movf	??_vfpfcnvrt+4,w
  6354  0230  00A5               	movwf	fputc@fp
  6355  0231  3187  27B4  3181   	fcall	_fputc
  6356  0234                     l3235:
  6357                           
  6358                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6359  0234  0020               	movlb	0	; select bank0
  6360  0235  0854               	movf	vfpfcnvrt@fmt,w
  6361  0236  0086               	movwf	6
  6362  0237  0187               	clrf	7
  6363  0238  3001               	movlw	1
  6364  0239  0781               	addwf	1,f
  6365  023A  3141               	addfsr 1,1
  6366  023B  1803               	skipnc
  6367  023C  0A81               	incf	1,f
  6368  023D  2A0A               	goto	l3223
  6369  023E                     l1478:
  6370  023E  0008               	return
  6371  023F                     __end_of_vfpfcnvrt:
  6372                           
  6373                           	psect	text4
  6374  008D                     __ptext4:	
  6375 ;; *************** function _utoa *****************
  6376 ;; Defined at:
  6377 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  fp              1    wreg     PTR struct _IO_FILE
  6380 ;;		 -> NULL(0), 
  6381 ;;  d               8   28[BANK0 ] unsigned long long 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  fp              1   39[BANK0 ] PTR struct _IO_FILE
  6384 ;;		 -> NULL(0), 
  6385 ;;  n               8   42[BANK0 ] unsigned long long 
  6386 ;;  i               2   50[BANK0 ] int 
  6387 ;;  w               2   40[BANK0 ] int 
  6388 ;;  p               2   37[BANK0 ] int 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2   28[BANK0 ] int 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6398 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;Total ram usage:       24 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 9
  6405 ;; This function calls:
  6406 ;;		___lodiv
  6407 ;;		___lomod
  6408 ;;		_pad
  6409 ;; This function is called by:
  6410 ;;		_vfpfcnvrt
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414  008D                     _utoa:	
  6415                           ;psect for function _utoa
  6416                           
  6417                           
  6418                           ;incstack = 0
  6419                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6420                           ;utoa@fp stored from wreg
  6421  008D  0020               	movlb	0	; select bank0
  6422  008E  00C7               	movwf	utoa@fp
  6423  008F                     l2893:
  6424                           
  6425                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  6426  008F  0021               	movlb	1	; select bank1
  6427  0090  1BAD               	btfsc	(_prec+1)^(0+128),7
  6428  0091  2893               	goto	u981
  6429  0092  2894               	goto	u980
  6430  0093                     u981:
  6431  0093  2898               	goto	l1461
  6432  0094                     u980:
  6433  0094                     l2895:
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  6436  0094  30FD               	movlw	253
  6437  0095  05AE               	andwf	_flags^(0+128),f
  6438  0096  30FF               	movlw	255
  6439  0097  05AF               	andwf	(_flags+1)^(0+128),f
  6440  0098                     l1461:	
  6441                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 623:     }
  6442                           
  6443                           
  6444                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  6445  0098  082D               	movf	(_prec+1)^(0+128),w
  6446  0099  3A80               	xorlw	128
  6447  009A  0020               	movlb	0	; select bank0
  6448  009B  00C4               	movwf	??_utoa
  6449  009C  3080               	movlw	128
  6450  009D  0244               	subwf	??_utoa,w
  6451  009E  1D03               	skipz
  6452  009F  28A3               	goto	u995
  6453  00A0  3001               	movlw	1
  6454  00A1  0021               	movlb	1	; select bank1
  6455  00A2  022C               	subwf	_prec^(0+128),w
  6456  00A3                     u995:
  6457  00A3  1803               	skipnc
  6458  00A4  28A6               	goto	u991
  6459  00A5  28A7               	goto	u990
  6460  00A6                     u991:
  6461  00A6  28AD               	goto	l2899
  6462  00A7                     u990:
  6463  00A7                     l2897:
  6464  00A7  3001               	movlw	1
  6465  00A8  0020               	movlb	0	; select bank0
  6466  00A9  00C5               	movwf	utoa@p
  6467  00AA  3000               	movlw	0
  6468  00AB  00C6               	movwf	utoa@p+1
  6469  00AC  28B5               	goto	l1465
  6470  00AD                     l2899:
  6471  00AD  0021               	movlb	1	; select bank1
  6472  00AE  082D               	movf	(_prec+1)^(0+128),w
  6473  00AF  0020               	movlb	0	; select bank0
  6474  00B0  00C6               	movwf	utoa@p+1
  6475  00B1  0021               	movlb	1	; select bank1
  6476  00B2  082C               	movf	_prec^(0+128),w
  6477  00B3  0020               	movlb	0	; select bank0
  6478  00B4  00C5               	movwf	utoa@p
  6479  00B5                     l1465:
  6480                           
  6481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  6482  00B5  0021               	movlb	1	; select bank1
  6483  00B6  082B               	movf	(_width+1)^(0+128),w
  6484  00B7  0020               	movlb	0	; select bank0
  6485  00B8  00C9               	movwf	utoa@w+1
  6486  00B9  0021               	movlb	1	; select bank1
  6487  00BA  082A               	movf	_width^(0+128),w
  6488  00BB  0020               	movlb	0	; select bank0
  6489  00BC  00C8               	movwf	utoa@w
  6490  00BD                     l2901:
  6491                           
  6492                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 628:     n = d;
  6493  00BD  083C               	movf	utoa@d,w
  6494  00BE  00CA               	movwf	utoa@n
  6495  00BF  083D               	movf	utoa@d+1,w
  6496  00C0  00CB               	movwf	utoa@n+1
  6497  00C1  083E               	movf	utoa@d+2,w
  6498  00C2  00CC               	movwf	utoa@n+2
  6499  00C3  083F               	movf	utoa@d+3,w
  6500  00C4  00CD               	movwf	utoa@n+3
  6501  00C5  0840               	movf	utoa@d+4,w
  6502  00C6  00CE               	movwf	utoa@n+4
  6503  00C7  0841               	movf	utoa@d+5,w
  6504  00C8  00CF               	movwf	utoa@n+5
  6505  00C9  0842               	movf	utoa@d+6,w
  6506  00CA  00D0               	movwf	utoa@n+6
  6507  00CB  0843               	movf	utoa@d+7,w
  6508  00CC  00D1               	movwf	utoa@n+7
  6509                           
  6510                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  6511  00CD  301F               	movlw	31
  6512  00CE  00D2               	movwf	utoa@i
  6513  00CF  3000               	movlw	0
  6514  00D0  00D3               	movwf	utoa@i+1
  6515  00D1                     l2903:
  6516                           
  6517                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  6518  00D1  0022               	movlb	2	; select bank2
  6519  00D2  01E7               	clrf	(_dbuf^(0+256)+31)
  6520                           
  6521                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6522  00D3  2935               	goto	l2915
  6523  00D4                     l2905:
  6524                           
  6525                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 632:         --i;
  6526  00D4  30FF               	movlw	255
  6527  00D5  0020               	movlb	0	; select bank0
  6528  00D6  07D2               	addwf	utoa@i,f
  6529  00D7  30FF               	movlw	255
  6530  00D8  3DD3               	addwfc	utoa@i+1,f
  6531  00D9                     l2907:
  6532                           
  6533                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  6534  00D9  300A               	movlw	10
  6535  00DA  00A0               	movwf	___lomod@divisor
  6536  00DB  01A1               	clrf	___lomod@divisor+1
  6537  00DC  01A2               	clrf	___lomod@divisor+2
  6538  00DD  01A3               	clrf	___lomod@divisor+3
  6539  00DE  01A4               	clrf	___lomod@divisor+4
  6540  00DF  01A5               	clrf	___lomod@divisor+5
  6541  00E0  01A6               	clrf	___lomod@divisor+6
  6542  00E1  01A7               	clrf	___lomod@divisor+7
  6543  00E2  084A               	movf	utoa@n,w
  6544  00E3  00A8               	movwf	___lomod@dividend
  6545  00E4  084B               	movf	utoa@n+1,w
  6546  00E5  00A9               	movwf	___lomod@dividend+1
  6547  00E6  084C               	movf	utoa@n+2,w
  6548  00E7  00AA               	movwf	___lomod@dividend+2
  6549  00E8  084D               	movf	utoa@n+3,w
  6550  00E9  00AB               	movwf	___lomod@dividend+3
  6551  00EA  084E               	movf	utoa@n+4,w
  6552  00EB  00AC               	movwf	___lomod@dividend+4
  6553  00EC  084F               	movf	utoa@n+5,w
  6554  00ED  00AD               	movwf	___lomod@dividend+5
  6555  00EE  0850               	movf	utoa@n+6,w
  6556  00EF  00AE               	movwf	___lomod@dividend+6
  6557  00F0  0851               	movf	utoa@n+7,w
  6558  00F1  00AF               	movwf	___lomod@dividend+7
  6559  00F2  3185  25F2  3180   	fcall	___lomod
  6560  00F5  0020               	movlb	0	; select bank0
  6561  00F6  0820               	movf	?___lomod,w
  6562  00F7  3E30               	addlw	48
  6563  00F8  00C4               	movwf	??_utoa
  6564  00F9  0852               	movf	utoa@i,w
  6565  00FA  3E48               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6566  00FB  0086               	movwf	6
  6567  00FC  3001               	movlw	1	; select bank2/3
  6568  00FD  0087               	movwf	7
  6569  00FE  0844               	movf	??_utoa,w
  6570  00FF  0081               	movwf	1
  6571  0100                     l2909:
  6572                           
  6573                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 634:         --p;
  6574  0100  30FF               	movlw	255
  6575  0101  07C5               	addwf	utoa@p,f
  6576  0102  30FF               	movlw	255
  6577  0103  3DC6               	addwfc	utoa@p+1,f
  6578  0104                     l2911:
  6579                           
  6580                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 635:         --w;
  6581  0104  30FF               	movlw	255
  6582  0105  07C8               	addwf	utoa@w,f
  6583  0106  30FF               	movlw	255
  6584  0107  3DC9               	addwfc	utoa@w+1,f
  6585  0108                     l2913:
  6586                           
  6587                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  6588  0108  300A               	movlw	10
  6589  0109  00A0               	movwf	___lodiv@divisor
  6590  010A  01A1               	clrf	___lodiv@divisor+1
  6591  010B  01A2               	clrf	___lodiv@divisor+2
  6592  010C  01A3               	clrf	___lodiv@divisor+3
  6593  010D  01A4               	clrf	___lodiv@divisor+4
  6594  010E  01A5               	clrf	___lodiv@divisor+5
  6595  010F  01A6               	clrf	___lodiv@divisor+6
  6596  0110  01A7               	clrf	___lodiv@divisor+7
  6597  0111  084A               	movf	utoa@n,w
  6598  0112  00A8               	movwf	___lodiv@dividend
  6599  0113  084B               	movf	utoa@n+1,w
  6600  0114  00A9               	movwf	___lodiv@dividend+1
  6601  0115  084C               	movf	utoa@n+2,w
  6602  0116  00AA               	movwf	___lodiv@dividend+2
  6603  0117  084D               	movf	utoa@n+3,w
  6604  0118  00AB               	movwf	___lodiv@dividend+3
  6605  0119  084E               	movf	utoa@n+4,w
  6606  011A  00AC               	movwf	___lodiv@dividend+4
  6607  011B  084F               	movf	utoa@n+5,w
  6608  011C  00AD               	movwf	___lodiv@dividend+5
  6609  011D  0850               	movf	utoa@n+6,w
  6610  011E  00AE               	movwf	___lodiv@dividend+6
  6611  011F  0851               	movf	utoa@n+7,w
  6612  0120  00AF               	movwf	___lodiv@dividend+7
  6613  0121  3184  24EC  3180   	fcall	___lodiv
  6614  0124  0020               	movlb	0	; select bank0
  6615  0125  0820               	movf	?___lodiv,w
  6616  0126  00CA               	movwf	utoa@n
  6617  0127  0821               	movf	?___lodiv+1,w
  6618  0128  00CB               	movwf	utoa@n+1
  6619  0129  0822               	movf	?___lodiv+2,w
  6620  012A  00CC               	movwf	utoa@n+2
  6621  012B  0823               	movf	?___lodiv+3,w
  6622  012C  00CD               	movwf	utoa@n+3
  6623  012D  0824               	movf	?___lodiv+4,w
  6624  012E  00CE               	movwf	utoa@n+4
  6625  012F  0825               	movf	?___lodiv+5,w
  6626  0130  00CF               	movwf	utoa@n+5
  6627  0131  0826               	movf	?___lodiv+6,w
  6628  0132  00D0               	movwf	utoa@n+6
  6629  0133  0827               	movf	?___lodiv+7,w
  6630  0134  00D1               	movwf	utoa@n+7
  6631  0135                     l2915:
  6632                           
  6633                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6634  0135  0020               	movlb	0	; select bank0
  6635  0136  0852               	movf	utoa@i,w
  6636  0137  0453               	iorwf	utoa@i+1,w
  6637  0138  1903               	btfsc	3,2
  6638  0139  293B               	goto	u1001
  6639  013A  293C               	goto	u1000
  6640  013B                     u1001:
  6641  013B  2968               	goto	l2925
  6642  013C                     u1000:
  6643  013C                     l2917:
  6644  013C  084A               	movf	utoa@n,w
  6645  013D  044B               	iorwf	utoa@n+1,w
  6646  013E  044C               	iorwf	utoa@n+2,w
  6647  013F  044D               	iorwf	utoa@n+3,w
  6648  0140  044E               	iorwf	utoa@n+4,w
  6649  0141  044F               	iorwf	utoa@n+5,w
  6650  0142  0450               	iorwf	utoa@n+6,w
  6651  0143  0451               	iorwf	utoa@n+7,w
  6652  0144  1D03               	skipz
  6653  0145  2947               	goto	u1011
  6654  0146  2948               	goto	u1010
  6655  0147                     u1011:
  6656  0147  28D4               	goto	l2905
  6657  0148                     u1010:
  6658  0148                     l2919:
  6659  0148  0846               	movf	utoa@p+1,w
  6660  0149  3A80               	xorlw	128
  6661  014A  00C4               	movwf	??_utoa
  6662  014B  3080               	movlw	128
  6663  014C  0244               	subwf	??_utoa,w
  6664  014D  1D03               	skipz
  6665  014E  2951               	goto	u1025
  6666  014F  3001               	movlw	1
  6667  0150  0245               	subwf	utoa@p,w
  6668  0151                     u1025:
  6669  0151  1803               	skipnc
  6670  0152  2954               	goto	u1021
  6671  0153  2955               	goto	u1020
  6672  0154                     u1021:
  6673  0154  28D4               	goto	l2905
  6674  0155                     u1020:
  6675  0155                     l2921:
  6676  0155  0020               	movlb	0	; select bank0
  6677  0156  0849               	movf	utoa@w+1,w
  6678  0157  3A80               	xorlw	128
  6679  0158  00C4               	movwf	??_utoa
  6680  0159  3080               	movlw	128
  6681  015A  0244               	subwf	??_utoa,w
  6682  015B  1D03               	skipz
  6683  015C  295F               	goto	u1035
  6684  015D  3001               	movlw	1
  6685  015E  0248               	subwf	utoa@w,w
  6686  015F                     u1035:
  6687  015F  1C03               	skipc
  6688  0160  2962               	goto	u1031
  6689  0161  2963               	goto	u1030
  6690  0162                     u1031:
  6691  0162  2968               	goto	l2925
  6692  0163                     u1030:
  6693  0163                     l2923:
  6694  0163  0021               	movlb	1	; select bank1
  6695  0164  18AE               	btfsc	_flags^(0+128),1
  6696  0165  2967               	goto	u1041
  6697  0166  2968               	goto	u1040
  6698  0167                     u1041:
  6699  0167  28D4               	goto	l2905
  6700  0168                     u1040:
  6701  0168                     l2925:
  6702                           
  6703                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  6704  0168  0020               	movlb	0	; select bank0
  6705  0169  0852               	movf	utoa@i,w
  6706  016A  3E48               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6707  016B  00C4               	movwf	??_utoa
  6708  016C  0844               	movf	??_utoa,w
  6709  016D  00B3               	movwf	pad@buf
  6710  016E  0849               	movf	utoa@w+1,w
  6711  016F  00B5               	movwf	pad@p+1
  6712  0170  0848               	movf	utoa@w,w
  6713  0171  00B4               	movwf	pad@p
  6714  0172  0847               	movf	utoa@fp,w
  6715  0173  3186  26BE  3180   	fcall	_pad
  6716  0176  0020               	movlb	0	; select bank0
  6717  0177  0834               	movf	?_pad+1,w
  6718  0178  00BD               	movwf	?_utoa+1
  6719  0179  0833               	movf	?_pad,w
  6720  017A  00BC               	movwf	?_utoa
  6721  017B                     l1473:
  6722  017B  0008               	return
  6723  017C                     __end_of_utoa:
  6724                           
  6725                           	psect	text5
  6726  06BE                     __ptext5:	
  6727 ;; *************** function _pad *****************
  6728 ;; Defined at:
  6729 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  fp              1    wreg     PTR struct _IO_FILE
  6732 ;;		 -> NULL(0), 
  6733 ;;  buf             1   19[BANK0 ] PTR unsigned char 
  6734 ;;		 -> dbuf(32), 
  6735 ;;  p               2   20[BANK0 ] int 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  6738 ;;		 -> NULL(0), 
  6739 ;;  w               2   25[BANK0 ] int 
  6740 ;;  i               2   23[BANK0 ] int 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  2   19[BANK0 ] int 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : 0/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6750 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;Total ram usage:        9 bytes
  6755 ;; Hardware stack levels used: 1
  6756 ;; Hardware stack levels required when called: 8
  6757 ;; This function calls:
  6758 ;;		_fputc
  6759 ;;		_fputs
  6760 ;;		_strlen
  6761 ;; This function is called by:
  6762 ;;		_utoa
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766  06BE                     _pad:	
  6767                           ;psect for function _pad
  6768                           
  6769                           
  6770                           ;incstack = 0
  6771                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6772                           ;pad@fp stored from wreg
  6773  06BE  0020               	movlb	0	; select bank0
  6774  06BF  00BB               	movwf	pad@fp
  6775  06C0                     l2853:
  6776                           
  6777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6778  06C0  0021               	movlb	1	; select bank1
  6779  06C1  1C2E               	btfss	_flags^(0+128),0
  6780  06C2  2EC4               	goto	u941
  6781  06C3  2EC5               	goto	u940
  6782  06C4                     u941:
  6783  06C4  2ECE               	goto	l2857
  6784  06C5                     u940:
  6785  06C5                     l2855:
  6786                           
  6787                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6788  06C5  0020               	movlb	0	; select bank0
  6789  06C6  083B               	movf	pad@fp,w
  6790  06C7  00B6               	movwf	??_pad
  6791  06C8  0836               	movf	??_pad,w
  6792  06C9  00AB               	movwf	fputs@fp
  6793  06CA  0833               	movf	pad@buf,w
  6794  06CB  318D  25AA  3186   	fcall	_fputs
  6795  06CE                     l2857:
  6796                           
  6797                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6798  06CE  0020               	movlb	0	; select bank0
  6799  06CF  1BB5               	btfsc	pad@p+1,7
  6800  06D0  2ED2               	goto	u951
  6801  06D1  2ED3               	goto	u950
  6802  06D2                     u951:
  6803  06D2  2ED8               	goto	l2861
  6804  06D3                     u950:
  6805  06D3                     l2859:
  6806  06D3  0835               	movf	pad@p+1,w
  6807  06D4  00BA               	movwf	pad@w+1
  6808  06D5  0834               	movf	pad@p,w
  6809  06D6  00B9               	movwf	pad@w
  6810  06D7  2EDA               	goto	l1453
  6811  06D8                     l2861:
  6812  06D8  01B9               	clrf	pad@w
  6813  06D9  01BA               	clrf	pad@w+1
  6814  06DA                     l1453:
  6815                           
  6816                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6817  06DA  01B7               	clrf	pad@i
  6818  06DB  01B8               	clrf	pad@i+1
  6819                           
  6820                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6821  06DC  2EEE               	goto	l2867
  6822  06DD                     l2863:
  6823                           
  6824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6825  06DD  3020               	movlw	32
  6826  06DE  0020               	movlb	0	; select bank0
  6827  06DF  00A3               	movwf	fputc@c
  6828  06E0  3000               	movlw	0
  6829  06E1  00A4               	movwf	fputc@c+1
  6830  06E2  083B               	movf	pad@fp,w
  6831  06E3  00B6               	movwf	??_pad
  6832  06E4  0836               	movf	??_pad,w
  6833  06E5  00A5               	movwf	fputc@fp
  6834  06E6  3187  27B4  3186   	fcall	_fputc
  6835  06E9                     l2865:
  6836                           
  6837                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6838  06E9  3001               	movlw	1
  6839  06EA  0020               	movlb	0	; select bank0
  6840  06EB  07B7               	addwf	pad@i,f
  6841  06EC  3000               	movlw	0
  6842  06ED  3DB8               	addwfc	pad@i+1,f
  6843  06EE                     l2867:
  6844                           
  6845                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6846  06EE  0838               	movf	pad@i+1,w
  6847  06EF  3A80               	xorlw	128
  6848  06F0  00B6               	movwf	??_pad
  6849  06F1  083A               	movf	pad@w+1,w
  6850  06F2  3A80               	xorlw	128
  6851  06F3  0236               	subwf	??_pad,w
  6852  06F4  1D03               	skipz
  6853  06F5  2EF8               	goto	u965
  6854  06F6  0839               	movf	pad@w,w
  6855  06F7  0237               	subwf	pad@i,w
  6856  06F8                     u965:
  6857  06F8  1C03               	skipc
  6858  06F9  2EFB               	goto	u961
  6859  06FA  2EFC               	goto	u960
  6860  06FB                     u961:
  6861  06FB  2EDD               	goto	l2863
  6862  06FC                     u960:
  6863  06FC                     l1456:
  6864                           
  6865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6866  06FC  0021               	movlb	1	; select bank1
  6867  06FD  182E               	btfsc	_flags^(0+128),0
  6868  06FE  2F00               	goto	u971
  6869  06FF  2F01               	goto	u970
  6870  0700                     u971:
  6871  0700  2F0A               	goto	l1457
  6872  0701                     u970:
  6873  0701                     l2869:
  6874                           
  6875                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6876  0701  0020               	movlb	0	; select bank0
  6877  0702  083B               	movf	pad@fp,w
  6878  0703  00B6               	movwf	??_pad
  6879  0704  0836               	movf	??_pad,w
  6880  0705  00AB               	movwf	fputs@fp
  6881  0706  0833               	movf	pad@buf,w
  6882  0707  318D  25AA  3186   	fcall	_fputs
  6883  070A                     l1457:	
  6884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 92:     }
  6885                           
  6886                           
  6887                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6888  070A  0020               	movlb	0	; select bank0
  6889  070B  0833               	movf	pad@buf,w
  6890  070C  318D  2532  3186   	fcall	_strlen
  6891  070F  0020               	movlb	0	; select bank0
  6892  0710  0839               	movf	pad@w,w
  6893  0711  0720               	addwf	?_strlen,w
  6894  0712  00B3               	movwf	?_pad
  6895  0713  083A               	movf	pad@w+1,w
  6896  0714  3D21               	addwfc	?_strlen+1,w
  6897  0715  00B4               	movwf	?_pad+1
  6898  0716                     l1458:
  6899  0716  0008               	return
  6900  0717                     __end_of_pad:
  6901                           
  6902                           	psect	text6
  6903  0D32                     __ptext6:	
  6904 ;; *************** function _strlen *****************
  6905 ;; Defined at:
  6906 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  s               1    wreg     PTR const unsigned char 
  6909 ;;		 -> dbuf(32), 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  6912 ;;		 -> dbuf(32), 
  6913 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  6914 ;;		 -> dbuf(32), 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  2    0[BANK0 ] unsigned int 
  6917 ;; Registers used:
  6918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;Total ram usage:        5 bytes
  6929 ;; Hardware stack levels used: 1
  6930 ;; Hardware stack levels required when called: 4
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_pad
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938  0D32                     _strlen:	
  6939                           ;psect for function _strlen
  6940                           
  6941                           
  6942                           ;incstack = 0
  6943                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6944                           ;strlen@s stored from wreg
  6945  0D32  0020               	movlb	0	; select bank0
  6946  0D33  00A4               	movwf	strlen@s
  6947  0D34                     l2805:
  6948  0D34  0824               	movf	strlen@s,w
  6949  0D35  00A2               	movwf	??_strlen
  6950  0D36  0822               	movf	??_strlen,w
  6951  0D37  00A3               	movwf	strlen@a
  6952  0D38  2D3D               	goto	l2809
  6953  0D39                     l2807:
  6954  0D39  3001               	movlw	1
  6955  0D3A  00A2               	movwf	??_strlen
  6956  0D3B  0822               	movf	??_strlen,w
  6957  0D3C  07A4               	addwf	strlen@s,f
  6958  0D3D                     l2809:
  6959  0D3D  0824               	movf	strlen@s,w
  6960  0D3E  0086               	movwf	6
  6961  0D3F  3001               	movlw	1	; select bank2/3
  6962  0D40  0087               	movwf	7
  6963  0D41  0801               	movf	1,w
  6964  0D42  1D03               	btfss	3,2
  6965  0D43  2D45               	goto	u841
  6966  0D44  2D46               	goto	u840
  6967  0D45                     u841:
  6968  0D45  2D39               	goto	l2807
  6969  0D46                     u840:
  6970  0D46                     l2811:
  6971  0D46  0823               	movf	strlen@a,w
  6972  0D47  0224               	subwf	strlen@s,w
  6973  0D48  00A0               	movwf	?_strlen
  6974  0D49  01A1               	clrf	?_strlen+1
  6975  0D4A  1BA0               	btfsc	?_strlen,7
  6976  0D4B  03A1               	decf	?_strlen+1,f
  6977  0D4C                     l1511:
  6978  0D4C  0008               	return
  6979  0D4D                     __end_of_strlen:
  6980                           
  6981                           	psect	text7
  6982  0DAA                     __ptext7:	
  6983 ;; *************** function _fputs *****************
  6984 ;; Defined at:
  6985 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  s               1    wreg     PTR const unsigned char 
  6988 ;;		 -> dbuf(32), 
  6989 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6990 ;;		 -> NULL(0), 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  s               1   18[BANK0 ] PTR const unsigned char 
  6993 ;;		 -> dbuf(32), 
  6994 ;;  i               2   16[BANK0 ] int 
  6995 ;;  c               1   15[BANK0 ] unsigned char 
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  2   11[BANK0 ] int 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7005 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;Total ram usage:        8 bytes
  7010 ;; Hardware stack levels used: 1
  7011 ;; Hardware stack levels required when called: 7
  7012 ;; This function calls:
  7013 ;;		_fputc
  7014 ;; This function is called by:
  7015 ;;		_pad
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019  0DAA                     _fputs:	
  7020                           ;psect for function _fputs
  7021                           
  7022                           
  7023                           ;incstack = 0
  7024                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7025                           ;fputs@s stored from wreg
  7026  0DAA  0020               	movlb	0	; select bank0
  7027  0DAB  00B2               	movwf	fputs@s
  7028  0DAC                     l2797:
  7029  0DAC  01B0               	clrf	fputs@i
  7030  0DAD  01B1               	clrf	fputs@i+1
  7031  0DAE  2DC2               	goto	l2803
  7032  0DAF                     l2799:
  7033  0DAF  082F               	movf	fputs@c,w
  7034  0DB0  00AC               	movwf	??_fputs
  7035  0DB1  01AD               	clrf	??_fputs+1
  7036  0DB2  082C               	movf	??_fputs,w
  7037  0DB3  00A3               	movwf	fputc@c
  7038  0DB4  082D               	movf	??_fputs+1,w
  7039  0DB5  00A4               	movwf	fputc@c+1
  7040  0DB6  082B               	movf	fputs@fp,w
  7041  0DB7  00AE               	movwf	??_fputs+2
  7042  0DB8  082E               	movf	??_fputs+2,w
  7043  0DB9  00A5               	movwf	fputc@fp
  7044  0DBA  3187  27B4  318D   	fcall	_fputc
  7045  0DBD                     l2801:
  7046  0DBD  3001               	movlw	1
  7047  0DBE  0020               	movlb	0	; select bank0
  7048  0DBF  07B0               	addwf	fputs@i,f
  7049  0DC0  3000               	movlw	0
  7050  0DC1  3DB1               	addwfc	fputs@i+1,f
  7051  0DC2                     l2803:
  7052  0DC2  0830               	movf	fputs@i,w
  7053  0DC3  0732               	addwf	fputs@s,w
  7054  0DC4  00AC               	movwf	??_fputs
  7055  0DC5  082C               	movf	??_fputs,w
  7056  0DC6  0086               	movwf	6
  7057  0DC7  3001               	movlw	1	; select bank2/3
  7058  0DC8  0087               	movwf	7
  7059  0DC9  0801               	movf	1,w
  7060  0DCA  00AD               	movwf	??_fputs+1
  7061  0DCB  082D               	movf	??_fputs+1,w
  7062  0DCC  00AF               	movwf	fputs@c
  7063  0DCD  082F               	movf	fputs@c,w
  7064  0DCE  1D03               	btfss	3,2
  7065  0DCF  2DD1               	goto	u831
  7066  0DD0  2DD2               	goto	u830
  7067  0DD1                     u831:
  7068  0DD1  2DAF               	goto	l2799
  7069  0DD2                     u830:
  7070  0DD2                     l1505:
  7071  0DD2  0008               	return
  7072  0DD3                     __end_of_fputs:
  7073                           
  7074                           	psect	text8
  7075  07B4                     __ptext8:	
  7076 ;; *************** function _fputc *****************
  7077 ;; Defined at:
  7078 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  c               2    3[BANK0 ] int 
  7081 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  7082 ;;		 -> NULL(0), 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  2    3[BANK0 ] int 
  7087 ;; Registers used:
  7088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7094 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7096 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7097 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;Total ram usage:        8 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 6
  7101 ;; This function calls:
  7102 ;;		_putch
  7103 ;; This function is called by:
  7104 ;;		_pad
  7105 ;;		_vfpfcnvrt
  7106 ;;		_fputs
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110  07B4                     _fputc:	
  7111                           ;psect for function _fputc
  7112                           
  7113  07B4                     l2783:	
  7114                           ;incstack = 0
  7115                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7116                           
  7117  07B4  0020               	movlb	0	; select bank0
  7118  07B5  0825               	movf	fputc@fp,w
  7119  07B6  1903               	btfsc	3,2
  7120  07B7  2FB9               	goto	u791
  7121  07B8  2FBA               	goto	u790
  7122  07B9                     u791:
  7123  07B9  2FBF               	goto	l2787
  7124  07BA                     u790:
  7125  07BA                     l2785:
  7126  07BA  0825               	movf	fputc@fp,w
  7127  07BB  1D03               	btfss	3,2
  7128  07BC  2FBE               	goto	u801
  7129  07BD  2FBF               	goto	u800
  7130  07BE                     u801:
  7131  07BE  2FC4               	goto	l2789
  7132  07BF                     u800:
  7133  07BF                     l2787:
  7134  07BF  0823               	movf	fputc@c,w
  7135  07C0  318B  2382  3187   	fcall	_putch
  7136  07C3  2FF6               	goto	l1497
  7137  07C4                     l2789:
  7138  07C4  0825               	movf	fputc@fp,w
  7139  07C5  3E08               	addlw	8
  7140  07C6  0086               	movwf	6
  7141  07C7  0187               	clrf	7
  7142  07C8  0016               	moviw fsr1++
  7143  07C9  0401               	iorwf	1,w
  7144  07CA  1903               	btfsc	3,2
  7145  07CB  2FCD               	goto	u811
  7146  07CC  2FCE               	goto	u810
  7147  07CD                     u811:
  7148  07CD  2FEC               	goto	l2793
  7149  07CE                     u810:
  7150  07CE                     l2791:
  7151  07CE  0825               	movf	fputc@fp,w
  7152  07CF  3E08               	addlw	8
  7153  07D0  0086               	movwf	6
  7154  07D1  0187               	clrf	7
  7155  07D2  3F40               	moviw [0]fsr1
  7156  07D3  00A6               	movwf	??_fputc
  7157  07D4  3F41               	moviw [1]fsr1
  7158  07D5  00A7               	movwf	??_fputc+1
  7159  07D6  0825               	movf	fputc@fp,w
  7160  07D7  3E02               	addlw	2
  7161  07D8  0086               	movwf	6
  7162  07D9  0187               	clrf	7
  7163  07DA  3F40               	moviw [0]fsr1
  7164  07DB  00A8               	movwf	??_fputc+2
  7165  07DC  3F41               	moviw [1]fsr1
  7166  07DD  00A9               	movwf	??_fputc+3
  7167  07DE  0829               	movf	??_fputc+3,w
  7168  07DF  3A80               	xorlw	128
  7169  07E0  00AA               	movwf	??_fputc+4
  7170  07E1  0827               	movf	??_fputc+1,w
  7171  07E2  3A80               	xorlw	128
  7172  07E3  022A               	subwf	??_fputc+4,w
  7173  07E4  1D03               	skipz
  7174  07E5  2FE8               	goto	u825
  7175  07E6  0826               	movf	??_fputc,w
  7176  07E7  0228               	subwf	??_fputc+2,w
  7177  07E8                     u825:
  7178  07E8  1803               	skipnc
  7179  07E9  2FEB               	goto	u821
  7180  07EA  2FEC               	goto	u820
  7181  07EB                     u821:
  7182  07EB  2FF6               	goto	l1497
  7183  07EC                     u820:
  7184  07EC                     l2793:
  7185  07EC  0020               	movlb	0	; select bank0
  7186  07ED  0825               	movf	fputc@fp,w
  7187  07EE  3E02               	addlw	2
  7188  07EF  0086               	movwf	6
  7189  07F0  0187               	clrf	7
  7190  07F1  3001               	movlw	1
  7191  07F2  0781               	addwf	1,f
  7192  07F3  3141               	addfsr 1,1
  7193  07F4  1803               	skipnc
  7194  07F5  0A81               	incf	1,f
  7195  07F6                     l1497:
  7196  07F6  0008               	return
  7197  07F7                     __end_of_fputc:
  7198                           
  7199                           	psect	text9
  7200  0B82                     __ptext9:	
  7201 ;; *************** function _putch *****************
  7202 ;; Defined at:
  7203 ;;		line 174 in file "eusart.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  txData          1    wreg     unsigned char 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  txData          1    2[BANK0 ] unsigned char 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7221 ;;Total ram usage:        1 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; Hardware stack levels required when called: 5
  7224 ;; This function calls:
  7225 ;;		_EUSART_Write
  7226 ;; This function is called by:
  7227 ;;		_fputc
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231  0B82                     _putch:	
  7232                           ;psect for function _putch
  7233                           
  7234                           
  7235                           ;incstack = 0
  7236                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7237                           ;putch@txData stored from wreg
  7238  0B82  0020               	movlb	0	; select bank0
  7239  0B83  00A2               	movwf	putch@txData
  7240  0B84                     l2781:
  7241                           
  7242                           ;eusart.c: 174: void putch(char txData);eusart.c: 175: {;eusart.c: 176:     EUSART_Write
      +                          (txData);
  7243  0B84  0822               	movf	putch@txData,w
  7244  0B85  318D  25D3  318B   	fcall	_EUSART_Write
  7245  0B88                     l649:
  7246  0B88  0008               	return
  7247  0B89                     __end_of_putch:
  7248                           
  7249                           	psect	text10
  7250  0DD3                     __ptext10:	
  7251 ;; *************** function _EUSART_Write *****************
  7252 ;; Defined at:
  7253 ;;		line 142 in file "eusart.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  txData          1    wreg     unsigned char 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  txData          1    1[BANK0 ] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;Total ram usage:        2 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 4
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_putch
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281  0DD3                     _EUSART_Write:	
  7282                           ;psect for function _EUSART_Write
  7283                           
  7284                           
  7285                           ;incstack = 0
  7286                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7287                           ;EUSART_Write@txData stored from wreg
  7288  0DD3  0020               	movlb	0	; select bank0
  7289  0DD4  00A1               	movwf	EUSART_Write@txData
  7290  0DD5                     l2763:
  7291  0DD5                     l2765:	
  7292                           ;eusart.c: 142: void EUSART_Write(uint8_t txData);eusart.c: 143: {;eusart.c: 144:     wh
      +                          ile(0 == eusartTxBufferRemaining)
  7293                           
  7294                           
  7295                           ;eusart.c: 144:     while(0 == eusartTxBufferRemaining)
  7296  0DD5  0021               	movlb	1	; select bank1
  7297  0DD6  0856               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  7298  0DD7  1903               	btfsc	3,2
  7299  0DD8  2DDA               	goto	u761
  7300  0DD9  2DDB               	goto	u760
  7301  0DDA                     u761:
  7302  0DDA  2DD5               	goto	l2765
  7303  0DDB                     u760:
  7304  0DDB                     l639:
  7305                           
  7306                           ;eusart.c: 148:     if(0 == PIE1bits.TXIE)
  7307  0DDB  1A11               	btfsc	17,4	;volatile
  7308  0DDC  2DDE               	goto	u771
  7309  0DDD  2DDF               	goto	u770
  7310  0DDE                     u771:
  7311  0DDE  2DE4               	goto	l640
  7312  0DDF                     u770:
  7313  0DDF                     l2767:
  7314                           
  7315                           ;eusart.c: 149:     {;eusart.c: 150:         TX1REG = txData;
  7316  0DDF  0020               	movlb	0	; select bank0
  7317  0DE0  0821               	movf	EUSART_Write@txData,w
  7318  0DE1  0023               	movlb	3	; select bank3
  7319  0DE2  009A               	movwf	26	;volatile
  7320                           
  7321                           ;eusart.c: 151:     }
  7322  0DE3  2DFD               	goto	l2779
  7323  0DE4                     l640:	
  7324                           ;eusart.c: 152:     else
  7325                           
  7326                           
  7327                           ;eusart.c: 153:     {;eusart.c: 154:         PIE1bits.TXIE = 0;
  7328  0DE4  1211               	bcf	17,4	;volatile
  7329  0DE5                     l2769:
  7330                           
  7331                           ;eusart.c: 155:         eusartTxBuffer[eusartTxHead++] = txData;
  7332  0DE5  0020               	movlb	0	; select bank0
  7333  0DE6  0821               	movf	EUSART_Write@txData,w
  7334  0DE7  00A0               	movwf	??_EUSART_Write
  7335  0DE8  087D               	movf	_eusartTxHead,w
  7336  0DE9  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  7337  0DEA  0086               	movwf	6
  7338  0DEB  3001               	movlw	1	; select bank2/3
  7339  0DEC  0087               	movwf	7
  7340  0DED  0820               	movf	??_EUSART_Write,w
  7341  0DEE  0081               	movwf	1
  7342  0DEF                     l2771:
  7343  0DEF  3001               	movlw	1
  7344  0DF0  00A0               	movwf	??_EUSART_Write
  7345  0DF1  0820               	movf	??_EUSART_Write,w
  7346  0DF2  07FD               	addwf	_eusartTxHead,f	;volatile
  7347  0DF3                     l2773:
  7348                           
  7349                           ;eusart.c: 156:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7350  0DF3  3008               	movlw	8
  7351  0DF4  027D               	subwf	_eusartTxHead,w	;volatile
  7352  0DF5  1C03               	skipc
  7353  0DF6  2DF8               	goto	u781
  7354  0DF7  2DF9               	goto	u780
  7355  0DF8                     u781:
  7356  0DF8  2DFA               	goto	l2777
  7357  0DF9                     u780:
  7358  0DF9                     l2775:
  7359                           
  7360                           ;eusart.c: 157:         {;eusart.c: 158:             eusartTxHead = 0;
  7361  0DF9  01FD               	clrf	_eusartTxHead	;volatile
  7362  0DFA                     l2777:
  7363                           
  7364                           ;eusart.c: 160:         eusartTxBufferRemaining--;
  7365  0DFA  3001               	movlw	1
  7366  0DFB  0021               	movlb	1	; select bank1
  7367  0DFC  02D6               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  7368  0DFD                     l2779:
  7369                           
  7370                           ;eusart.c: 162:     PIE1bits.TXIE = 1;
  7371  0DFD  0021               	movlb	1	; select bank1
  7372  0DFE  1611               	bsf	17,4	;volatile
  7373  0DFF                     l643:
  7374  0DFF  0008               	return
  7375  0E00                     __end_of_EUSART_Write:
  7376                           
  7377                           	psect	text11
  7378  05F2                     __ptext11:	
  7379 ;; *************** function ___lomod *****************
  7380 ;; Defined at:
  7381 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lomod.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7384 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  counter         1   17[BANK0 ] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  8    0[BANK0 ] unsigned long long 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7396 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;Total ram usage:       18 bytes
  7401 ;; Hardware stack levels used: 1
  7402 ;; Hardware stack levels required when called: 4
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_utoa
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410  05F2                     ___lomod:	
  7411                           ;psect for function ___lomod
  7412                           
  7413  05F2                     l2837:	
  7414                           ;incstack = 0
  7415                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7416                           
  7417  05F2  0020               	movlb	0	; select bank0
  7418  05F3  0820               	movf	___lomod@divisor,w
  7419  05F4  0421               	iorwf	___lomod@divisor+1,w
  7420  05F5  0422               	iorwf	___lomod@divisor+2,w
  7421  05F6  0423               	iorwf	___lomod@divisor+3,w
  7422  05F7  0424               	iorwf	___lomod@divisor+4,w
  7423  05F8  0425               	iorwf	___lomod@divisor+5,w
  7424  05F9  0426               	iorwf	___lomod@divisor+6,w
  7425  05FA  0427               	iorwf	___lomod@divisor+7,w
  7426  05FB  1903               	skipnz
  7427  05FC  2DFE               	goto	u901
  7428  05FD  2DFF               	goto	u900
  7429  05FE                     u901:
  7430  05FE  2E52               	goto	l1208
  7431  05FF                     u900:
  7432  05FF                     l2839:
  7433  05FF  01B1               	clrf	___lomod@counter
  7434  0600  0AB1               	incf	___lomod@counter,f
  7435  0601  2E0E               	goto	l2845
  7436  0602                     l2841:
  7437  0602  35A0               	lslf	___lomod@divisor,f
  7438  0603  0DA1               	rlf	___lomod@divisor+1,f
  7439  0604  0DA2               	rlf	___lomod@divisor+2,f
  7440  0605  0DA3               	rlf	___lomod@divisor+3,f
  7441  0606  0DA4               	rlf	___lomod@divisor+4,f
  7442  0607  0DA5               	rlf	___lomod@divisor+5,f
  7443  0608  0DA6               	rlf	___lomod@divisor+6,f
  7444  0609  0DA7               	rlf	___lomod@divisor+7,f
  7445  060A                     l2843:
  7446  060A  3001               	movlw	1
  7447  060B  00B0               	movwf	??___lomod
  7448  060C  0830               	movf	??___lomod,w
  7449  060D  07B1               	addwf	___lomod@counter,f
  7450  060E                     l2845:
  7451  060E  1FA7               	btfss	___lomod@divisor+7,7
  7452  060F  2E11               	goto	u911
  7453  0610  2E12               	goto	u910
  7454  0611                     u911:
  7455  0611  2E02               	goto	l2841
  7456  0612                     u910:
  7457  0612                     l2847:
  7458  0612  0827               	movf	___lomod@divisor+7,w
  7459  0613  022F               	subwf	___lomod@dividend+7,w
  7460  0614  1D03               	skipz
  7461  0615  2E30               	goto	u925
  7462  0616  0826               	movf	___lomod@divisor+6,w
  7463  0617  022E               	subwf	___lomod@dividend+6,w
  7464  0618  1D03               	skipz
  7465  0619  2E30               	goto	u925
  7466  061A  0825               	movf	___lomod@divisor+5,w
  7467  061B  022D               	subwf	___lomod@dividend+5,w
  7468  061C  1D03               	skipz
  7469  061D  2E30               	goto	u925
  7470  061E  0824               	movf	___lomod@divisor+4,w
  7471  061F  022C               	subwf	___lomod@dividend+4,w
  7472  0620  1D03               	skipz
  7473  0621  2E30               	goto	u925
  7474  0622  0823               	movf	___lomod@divisor+3,w
  7475  0623  022B               	subwf	___lomod@dividend+3,w
  7476  0624  1D03               	skipz
  7477  0625  2E30               	goto	u925
  7478  0626  0822               	movf	___lomod@divisor+2,w
  7479  0627  022A               	subwf	___lomod@dividend+2,w
  7480  0628  1D03               	skipz
  7481  0629  2E30               	goto	u925
  7482  062A  0821               	movf	___lomod@divisor+1,w
  7483  062B  0229               	subwf	___lomod@dividend+1,w
  7484  062C  1D03               	skipz
  7485  062D  2E30               	goto	u925
  7486  062E  0820               	movf	___lomod@divisor,w
  7487  062F  0228               	subwf	___lomod@dividend,w
  7488  0630                     u925:
  7489  0630  1C03               	skipc
  7490  0631  2E33               	goto	u921
  7491  0632  2E34               	goto	u920
  7492  0633                     u921:
  7493  0633  2E44               	goto	l2851
  7494  0634                     u920:
  7495  0634                     l2849:
  7496  0634  0820               	movf	___lomod@divisor,w
  7497  0635  02A8               	subwf	___lomod@dividend,f
  7498  0636  0821               	movf	___lomod@divisor+1,w
  7499  0637  3BA9               	subwfb	___lomod@dividend+1,f
  7500  0638  0822               	movf	___lomod@divisor+2,w
  7501  0639  3BAA               	subwfb	___lomod@dividend+2,f
  7502  063A  0823               	movf	___lomod@divisor+3,w
  7503  063B  3BAB               	subwfb	___lomod@dividend+3,f
  7504  063C  0824               	movf	___lomod@divisor+4,w
  7505  063D  3BAC               	subwfb	___lomod@dividend+4,f
  7506  063E  0825               	movf	___lomod@divisor+5,w
  7507  063F  3BAD               	subwfb	___lomod@dividend+5,f
  7508  0640  0826               	movf	___lomod@divisor+6,w
  7509  0641  3BAE               	subwfb	___lomod@dividend+6,f
  7510  0642  0827               	movf	___lomod@divisor+7,w
  7511  0643  3BAF               	subwfb	___lomod@dividend+7,f
  7512  0644                     l2851:
  7513  0644  36A7               	lsrf	___lomod@divisor+7,f
  7514  0645  0CA6               	rrf	___lomod@divisor+6,f
  7515  0646  0CA5               	rrf	___lomod@divisor+5,f
  7516  0647  0CA4               	rrf	___lomod@divisor+4,f
  7517  0648  0CA3               	rrf	___lomod@divisor+3,f
  7518  0649  0CA2               	rrf	___lomod@divisor+2,f
  7519  064A  0CA1               	rrf	___lomod@divisor+1,f
  7520  064B  0CA0               	rrf	___lomod@divisor,f
  7521  064C  3001               	movlw	1
  7522  064D  02B1               	subwf	___lomod@counter,f
  7523  064E  1D03               	btfss	3,2
  7524  064F  2E51               	goto	u931
  7525  0650  2E52               	goto	u930
  7526  0651                     u931:
  7527  0651  2E12               	goto	l2847
  7528  0652                     u930:
  7529  0652                     l1208:
  7530  0652  0828               	movf	___lomod@dividend,w
  7531  0653  00A0               	movwf	?___lomod
  7532  0654  0829               	movf	___lomod@dividend+1,w
  7533  0655  00A1               	movwf	?___lomod+1
  7534  0656  082A               	movf	___lomod@dividend+2,w
  7535  0657  00A2               	movwf	?___lomod+2
  7536  0658  082B               	movf	___lomod@dividend+3,w
  7537  0659  00A3               	movwf	?___lomod+3
  7538  065A  082C               	movf	___lomod@dividend+4,w
  7539  065B  00A4               	movwf	?___lomod+4
  7540  065C  082D               	movf	___lomod@dividend+5,w
  7541  065D  00A5               	movwf	?___lomod+5
  7542  065E  082E               	movf	___lomod@dividend+6,w
  7543  065F  00A6               	movwf	?___lomod+6
  7544  0660  082F               	movf	___lomod@dividend+7,w
  7545  0661  00A7               	movwf	?___lomod+7
  7546  0662                     l1215:
  7547  0662  0008               	return
  7548  0663                     __end_of___lomod:
  7549                           
  7550                           	psect	text12
  7551  04EC                     __ptext12:	
  7552 ;; *************** function ___lodiv *****************
  7553 ;; Defined at:
  7554 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lodiv.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7557 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  quotient        8   17[BANK0 ] unsigned long long 
  7560 ;;  counter         1   25[BANK0 ] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  8    0[BANK0 ] unsigned long long 
  7563 ;; Registers used:
  7564 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7570 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;Total ram usage:       26 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 4
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_utoa
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584  04EC                     ___lodiv:	
  7585                           ;psect for function ___lodiv
  7586                           
  7587  04EC                     l2815:	
  7588                           ;incstack = 0
  7589                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7590                           
  7591  04EC  3031               	movlw	low ___lodiv@quotient
  7592  04ED  0086               	movwf	6
  7593  04EE  3000               	movlw	high ___lodiv@quotient
  7594  04EF  0087               	movwf	7
  7595  04F0  3008               	movlw	8
  7596  04F1  0020               	movlb	0	; select bank0
  7597  04F2  00B0               	movwf	??___lodiv
  7598  04F3  3000               	movlw	0
  7599  04F4                     u850:
  7600  04F4  001E               	movwi fsr1++
  7601  04F5  0BB0               	decfsz	??___lodiv,f
  7602  04F6  2CF4               	goto	u850
  7603  04F7                     l2817:
  7604  04F7  0820               	movf	___lodiv@divisor,w
  7605  04F8  0421               	iorwf	___lodiv@divisor+1,w
  7606  04F9  0422               	iorwf	___lodiv@divisor+2,w
  7607  04FA  0423               	iorwf	___lodiv@divisor+3,w
  7608  04FB  0424               	iorwf	___lodiv@divisor+4,w
  7609  04FC  0425               	iorwf	___lodiv@divisor+5,w
  7610  04FD  0426               	iorwf	___lodiv@divisor+6,w
  7611  04FE  0427               	iorwf	___lodiv@divisor+7,w
  7612  04FF  1903               	skipnz
  7613  0500  2D02               	goto	u861
  7614  0501  2D03               	goto	u860
  7615  0502                     u861:
  7616  0502  2D5F               	goto	l1198
  7617  0503                     u860:
  7618  0503                     l2819:
  7619  0503  01B9               	clrf	___lodiv@counter
  7620  0504  0AB9               	incf	___lodiv@counter,f
  7621  0505  2D12               	goto	l2825
  7622  0506                     l2821:
  7623  0506  35A0               	lslf	___lodiv@divisor,f
  7624  0507  0DA1               	rlf	___lodiv@divisor+1,f
  7625  0508  0DA2               	rlf	___lodiv@divisor+2,f
  7626  0509  0DA3               	rlf	___lodiv@divisor+3,f
  7627  050A  0DA4               	rlf	___lodiv@divisor+4,f
  7628  050B  0DA5               	rlf	___lodiv@divisor+5,f
  7629  050C  0DA6               	rlf	___lodiv@divisor+6,f
  7630  050D  0DA7               	rlf	___lodiv@divisor+7,f
  7631  050E                     l2823:
  7632  050E  3001               	movlw	1
  7633  050F  00B0               	movwf	??___lodiv
  7634  0510  0830               	movf	??___lodiv,w
  7635  0511  07B9               	addwf	___lodiv@counter,f
  7636  0512                     l2825:
  7637  0512  1FA7               	btfss	___lodiv@divisor+7,7
  7638  0513  2D15               	goto	u871
  7639  0514  2D16               	goto	u870
  7640  0515                     u871:
  7641  0515  2D06               	goto	l2821
  7642  0516                     u870:
  7643  0516                     l2827:
  7644  0516  35B1               	lslf	___lodiv@quotient,f
  7645  0517  0DB2               	rlf	___lodiv@quotient+1,f
  7646  0518  0DB3               	rlf	___lodiv@quotient+2,f
  7647  0519  0DB4               	rlf	___lodiv@quotient+3,f
  7648  051A  0DB5               	rlf	___lodiv@quotient+4,f
  7649  051B  0DB6               	rlf	___lodiv@quotient+5,f
  7650  051C  0DB7               	rlf	___lodiv@quotient+6,f
  7651  051D  0DB8               	rlf	___lodiv@quotient+7,f
  7652  051E                     l2829:
  7653  051E  0827               	movf	___lodiv@divisor+7,w
  7654  051F  022F               	subwf	___lodiv@dividend+7,w
  7655  0520  1D03               	skipz
  7656  0521  2D3C               	goto	u885
  7657  0522  0826               	movf	___lodiv@divisor+6,w
  7658  0523  022E               	subwf	___lodiv@dividend+6,w
  7659  0524  1D03               	skipz
  7660  0525  2D3C               	goto	u885
  7661  0526  0825               	movf	___lodiv@divisor+5,w
  7662  0527  022D               	subwf	___lodiv@dividend+5,w
  7663  0528  1D03               	skipz
  7664  0529  2D3C               	goto	u885
  7665  052A  0824               	movf	___lodiv@divisor+4,w
  7666  052B  022C               	subwf	___lodiv@dividend+4,w
  7667  052C  1D03               	skipz
  7668  052D  2D3C               	goto	u885
  7669  052E  0823               	movf	___lodiv@divisor+3,w
  7670  052F  022B               	subwf	___lodiv@dividend+3,w
  7671  0530  1D03               	skipz
  7672  0531  2D3C               	goto	u885
  7673  0532  0822               	movf	___lodiv@divisor+2,w
  7674  0533  022A               	subwf	___lodiv@dividend+2,w
  7675  0534  1D03               	skipz
  7676  0535  2D3C               	goto	u885
  7677  0536  0821               	movf	___lodiv@divisor+1,w
  7678  0537  0229               	subwf	___lodiv@dividend+1,w
  7679  0538  1D03               	skipz
  7680  0539  2D3C               	goto	u885
  7681  053A  0820               	movf	___lodiv@divisor,w
  7682  053B  0228               	subwf	___lodiv@dividend,w
  7683  053C                     u885:
  7684  053C  1C03               	skipc
  7685  053D  2D3F               	goto	u881
  7686  053E  2D40               	goto	u880
  7687  053F                     u881:
  7688  053F  2D51               	goto	l2835
  7689  0540                     u880:
  7690  0540                     l2831:
  7691  0540  0820               	movf	___lodiv@divisor,w
  7692  0541  02A8               	subwf	___lodiv@dividend,f
  7693  0542  0821               	movf	___lodiv@divisor+1,w
  7694  0543  3BA9               	subwfb	___lodiv@dividend+1,f
  7695  0544  0822               	movf	___lodiv@divisor+2,w
  7696  0545  3BAA               	subwfb	___lodiv@dividend+2,f
  7697  0546  0823               	movf	___lodiv@divisor+3,w
  7698  0547  3BAB               	subwfb	___lodiv@dividend+3,f
  7699  0548  0824               	movf	___lodiv@divisor+4,w
  7700  0549  3BAC               	subwfb	___lodiv@dividend+4,f
  7701  054A  0825               	movf	___lodiv@divisor+5,w
  7702  054B  3BAD               	subwfb	___lodiv@dividend+5,f
  7703  054C  0826               	movf	___lodiv@divisor+6,w
  7704  054D  3BAE               	subwfb	___lodiv@dividend+6,f
  7705  054E  0827               	movf	___lodiv@divisor+7,w
  7706  054F  3BAF               	subwfb	___lodiv@dividend+7,f
  7707  0550                     l2833:
  7708  0550  1431               	bsf	___lodiv@quotient,0
  7709  0551                     l2835:
  7710  0551  36A7               	lsrf	___lodiv@divisor+7,f
  7711  0552  0CA6               	rrf	___lodiv@divisor+6,f
  7712  0553  0CA5               	rrf	___lodiv@divisor+5,f
  7713  0554  0CA4               	rrf	___lodiv@divisor+4,f
  7714  0555  0CA3               	rrf	___lodiv@divisor+3,f
  7715  0556  0CA2               	rrf	___lodiv@divisor+2,f
  7716  0557  0CA1               	rrf	___lodiv@divisor+1,f
  7717  0558  0CA0               	rrf	___lodiv@divisor,f
  7718  0559  3001               	movlw	1
  7719  055A  02B9               	subwf	___lodiv@counter,f
  7720  055B  1D03               	btfss	3,2
  7721  055C  2D5E               	goto	u891
  7722  055D  2D5F               	goto	u890
  7723  055E                     u891:
  7724  055E  2D16               	goto	l2827
  7725  055F                     u890:
  7726  055F                     l1198:
  7727  055F  0831               	movf	___lodiv@quotient,w
  7728  0560  00A0               	movwf	?___lodiv
  7729  0561  0832               	movf	___lodiv@quotient+1,w
  7730  0562  00A1               	movwf	?___lodiv+1
  7731  0563  0833               	movf	___lodiv@quotient+2,w
  7732  0564  00A2               	movwf	?___lodiv+2
  7733  0565  0834               	movf	___lodiv@quotient+3,w
  7734  0566  00A3               	movwf	?___lodiv+3
  7735  0567  0835               	movf	___lodiv@quotient+4,w
  7736  0568  00A4               	movwf	?___lodiv+4
  7737  0569  0836               	movf	___lodiv@quotient+5,w
  7738  056A  00A5               	movwf	?___lodiv+5
  7739  056B  0837               	movf	___lodiv@quotient+6,w
  7740  056C  00A6               	movwf	?___lodiv+6
  7741  056D  0838               	movf	___lodiv@quotient+7,w
  7742  056E  00A7               	movwf	?___lodiv+7
  7743  056F                     l1205:
  7744  056F  0008               	return
  7745  0570                     __end_of___lodiv:
  7746                           
  7747                           	psect	text13
  7748  0F49                     __ptext13:	
  7749 ;; *************** function _PIC16_Init *****************
  7750 ;; Defined at:
  7751 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;		None
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0, pclath, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;Total ram usage:        0 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; Hardware stack levels required when called: 7
  7772 ;; This function calls:
  7773 ;;		_SYSTEM_Initialize
  7774 ;; This function is called by:
  7775 ;;		_main
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779  0F49                     _PIC16_Init:	
  7780                           ;psect for function _PIC16_Init
  7781                           
  7782  0F49                     l3581:	
  7783                           ;incstack = 0
  7784                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  7785                           
  7786                           
  7787                           ;PIC16Xpress_DevBoard.c: 18:     PIE0 = 0x00;
  7788  0F49  0021               	movlb	1	; select bank1
  7789  0F4A  0190               	clrf	16	;volatile
  7790                           
  7791                           ;PIC16Xpress_DevBoard.c: 19:     PIE1 = 0x00;
  7792  0F4B  0191               	clrf	17	;volatile
  7793                           
  7794                           ;PIC16Xpress_DevBoard.c: 20:     PIE2 = 0x00;
  7795  0F4C  0192               	clrf	18	;volatile
  7796                           
  7797                           ;PIC16Xpress_DevBoard.c: 21:     PIE3 = 0x00;
  7798  0F4D  0193               	clrf	19	;volatile
  7799                           
  7800                           ;PIC16Xpress_DevBoard.c: 22:     PIE4 = 0x00;
  7801  0F4E  0194               	clrf	20	;volatile
  7802                           
  7803                           ;PIC16Xpress_DevBoard.c: 25:     LATA = 0x00;
  7804  0F4F  0022               	movlb	2	; select bank2
  7805  0F50  018C               	clrf	12	;volatile
  7806                           
  7807                           ;PIC16Xpress_DevBoard.c: 26:     LATB = 0x00;
  7808  0F51  018D               	clrf	13	;volatile
  7809                           
  7810                           ;PIC16Xpress_DevBoard.c: 27:     LATC = 0x00;
  7811  0F52  018E               	clrf	14	;volatile
  7812  0F53                     l3583:
  7813                           
  7814                           ;PIC16Xpress_DevBoard.c: 29:     TRISA = 0x37;
  7815  0F53  3037               	movlw	55
  7816  0F54  0021               	movlb	1	; select bank1
  7817  0F55  008C               	movwf	12	;volatile
  7818  0F56                     l3585:
  7819                           
  7820                           ;PIC16Xpress_DevBoard.c: 30:     TRISB = 0xF0;
  7821  0F56  30F0               	movlw	240
  7822  0F57  008D               	movwf	13	;volatile
  7823  0F58                     l3587:
  7824                           
  7825                           ;PIC16Xpress_DevBoard.c: 31:     TRISC = 0xFF;
  7826  0F58  30FF               	movlw	255
  7827  0F59  008E               	movwf	14	;volatile
  7828  0F5A                     l3589:
  7829                           
  7830                           ;PIC16Xpress_DevBoard.c: 33:     ANSELC = 0xFF;
  7831  0F5A  30FF               	movlw	255
  7832  0F5B  0023               	movlb	3	; select bank3
  7833  0F5C  008E               	movwf	14	;volatile
  7834  0F5D                     l3591:
  7835                           
  7836                           ;PIC16Xpress_DevBoard.c: 34:     ANSELB = 0xF0;
  7837  0F5D  30F0               	movlw	240
  7838  0F5E  008D               	movwf	13	;volatile
  7839  0F5F                     l3593:
  7840                           
  7841                           ;PIC16Xpress_DevBoard.c: 35:     ANSELA = 0x37;
  7842  0F5F  3037               	movlw	55
  7843  0F60  008C               	movwf	12	;volatile
  7844                           
  7845                           ;PIC16Xpress_DevBoard.c: 37:     WPUB = 0x00;
  7846  0F61  0024               	movlb	4	; select bank4
  7847  0F62  018D               	clrf	13	;volatile
  7848                           
  7849                           ;PIC16Xpress_DevBoard.c: 38:     WPUA = 0x00;
  7850  0F63  018C               	clrf	12	;volatile
  7851                           
  7852                           ;PIC16Xpress_DevBoard.c: 39:     WPUC = 0x00;
  7853  0F64  018E               	clrf	14	;volatile
  7854                           
  7855                           ;PIC16Xpress_DevBoard.c: 41:     ODCONA = 0x00;
  7856  0F65  0025               	movlb	5	; select bank5
  7857  0F66  018C               	clrf	12	;volatile
  7858                           
  7859                           ;PIC16Xpress_DevBoard.c: 42:     ODCONB = 0x00;
  7860  0F67  018D               	clrf	13	;volatile
  7861                           
  7862                           ;PIC16Xpress_DevBoard.c: 43:     ODCONC = 0x00;
  7863  0F68  018E               	clrf	14	;volatile
  7864  0F69                     l3595:
  7865                           
  7866                           ;PIC16Xpress_DevBoard.c: 45:     SLRCONA = 0x37;
  7867  0F69  3037               	movlw	55
  7868  0F6A  0026               	movlb	6	; select bank6
  7869  0F6B  008C               	movwf	12	;volatile
  7870  0F6C                     l3597:
  7871                           
  7872                           ;PIC16Xpress_DevBoard.c: 46:     SLRCONB = 0xF0;
  7873  0F6C  30F0               	movlw	240
  7874  0F6D  008D               	movwf	13	;volatile
  7875  0F6E                     l3599:
  7876                           
  7877                           ;PIC16Xpress_DevBoard.c: 47:     SLRCONC = 0xFF;
  7878  0F6E  30FF               	movlw	255
  7879  0F6F  008E               	movwf	14	;volatile
  7880  0F70                     l3601:
  7881                           
  7882                           ;PIC16Xpress_DevBoard.c: 49:     INLVLA = 0x3F;
  7883  0F70  303F               	movlw	63
  7884  0F71  0027               	movlb	7	; select bank7
  7885  0F72  008C               	movwf	12	;volatile
  7886  0F73                     l3603:
  7887                           
  7888                           ;PIC16Xpress_DevBoard.c: 50:     INLVLB = 0xF0;
  7889  0F73  30F0               	movlw	240
  7890  0F74  008D               	movwf	13	;volatile
  7891  0F75                     l3605:
  7892                           
  7893                           ;PIC16Xpress_DevBoard.c: 51:     INLVLC = 0xFF;
  7894  0F75  30FF               	movlw	255
  7895  0F76  008E               	movwf	14	;volatile
  7896                           
  7897                           ;PIC16Xpress_DevBoard.c: 54:     PIR0 = 0x00;
  7898  0F77  0020               	movlb	0	; select bank0
  7899  0F78  0190               	clrf	16	;volatile
  7900                           
  7901                           ;PIC16Xpress_DevBoard.c: 55:     PIR1 = 0x00;
  7902  0F79  0191               	clrf	17	;volatile
  7903                           
  7904                           ;PIC16Xpress_DevBoard.c: 56:     PIR2 = 0x00;
  7905  0F7A  0192               	clrf	18	;volatile
  7906                           
  7907                           ;PIC16Xpress_DevBoard.c: 57:     PIR3 = 0x00;
  7908  0F7B  0193               	clrf	19	;volatile
  7909                           
  7910                           ;PIC16Xpress_DevBoard.c: 58:     PIR4 = 0x00;
  7911  0F7C  0194               	clrf	20	;volatile
  7912  0F7D                     l3607:
  7913                           
  7914                           ;PIC16Xpress_DevBoard.c: 61:     SYSTEM_Initialize();
  7915  0F7D  318D  2569  318F   	fcall	_SYSTEM_Initialize
  7916  0F80                     l3609:
  7917                           
  7918                           ;PIC16Xpress_DevBoard.c: 64:     (INTCONbits.PEIE = 1);
  7919  0F80  170B               	bsf	11,6	;volatile
  7920  0F81                     l3611:
  7921                           
  7922                           ;PIC16Xpress_DevBoard.c: 65:     (INTCONbits.GIE = 1);
  7923  0F81  178B               	bsf	11,7	;volatile
  7924  0F82                     l159:
  7925  0F82  0008               	return
  7926  0F83                     __end_of_PIC16_Init:
  7927                           
  7928                           	psect	text14
  7929  0D69                     __ptext14:	
  7930 ;; *************** function _SYSTEM_Initialize *****************
  7931 ;; Defined at:
  7932 ;;		line 15 in file "mcc.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0, pclath, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;Total ram usage:        0 bytes
  7951 ;; Hardware stack levels used: 1
  7952 ;; Hardware stack levels required when called: 6
  7953 ;; This function calls:
  7954 ;;		_CCP1_Initialize
  7955 ;;		_CCP2_Initialize
  7956 ;;		_CCP3_Initialize
  7957 ;;		_EUSART_Initialize
  7958 ;;		_OSCILLATOR_Initialize
  7959 ;;		_PIN_MANAGER_Initialize
  7960 ;;		_PMD_Initialize
  7961 ;;		_TMR0_Initialize
  7962 ;;		_TMR1_Initialize
  7963 ;;		_WDT_Initialize
  7964 ;; This function is called by:
  7965 ;;		_PIC16_Init
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969  0D69                     _SYSTEM_Initialize:	
  7970                           ;psect for function _SYSTEM_Initialize
  7971                           
  7972  0D69                     l3405:	
  7973                           ;incstack = 0
  7974                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7975                           
  7976                           
  7977                           ;mcc.c: 17:     PMD_Initialize();
  7978  0D69  318C  2405  318D   	fcall	_PMD_Initialize
  7979                           
  7980                           ;mcc.c: 18:     PIN_MANAGER_Initialize();
  7981  0D6C  318E  2665  318D   	fcall	_PIN_MANAGER_Initialize
  7982                           
  7983                           ;mcc.c: 19:     OSCILLATOR_Initialize();
  7984  0D6F  318B  23F9  318D   	fcall	_OSCILLATOR_Initialize
  7985                           
  7986                           ;mcc.c: 20:     WDT_Initialize();
  7987  0D72  318B  236A  318D   	fcall	_WDT_Initialize
  7988                           
  7989                           ;mcc.c: 21:     CCP2_Initialize();
  7990  0D75  318C  24CE  318D   	fcall	_CCP2_Initialize
  7991                           
  7992                           ;mcc.c: 22:     CCP3_Initialize();
  7993  0D78  318C  24E6  318D   	fcall	_CCP3_Initialize
  7994                           
  7995                           ;mcc.c: 23:     CCP1_Initialize();
  7996  0D7B  318C  24B6  318D   	fcall	_CCP1_Initialize
  7997                           
  7998                           ;mcc.c: 24:     TMR1_Initialize();
  7999  0D7E  318C  24FE  318D   	fcall	_TMR1_Initialize
  8000                           
  8001                           ;mcc.c: 25:     TMR0_Initialize();
  8002  0D81  318C  2433  318D   	fcall	_TMR0_Initialize
  8003                           
  8004                           ;mcc.c: 26:     EUSART_Initialize();
  8005  0D84  3187  276E  318D   	fcall	_EUSART_Initialize
  8006  0D87                     l280:
  8007  0D87  0008               	return
  8008  0D88                     __end_of_SYSTEM_Initialize:
  8009                           
  8010                           	psect	text15
  8011  0B6A                     __ptext15:	
  8012 ;; *************** function _WDT_Initialize *****************
  8013 ;; Defined at:
  8014 ;;		line 51 in file "mcc.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 4
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_SYSTEM_Initialize
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042  0B6A                     _WDT_Initialize:	
  8043                           ;psect for function _WDT_Initialize
  8044                           
  8045  0B6A                     l3071:	
  8046                           ;incstack = 0
  8047                           ; Regs used in _WDT_Initialize: [wreg]
  8048                           
  8049                           
  8050                           ;mcc.c: 54:     WDTCON = 0x16;
  8051  0B6A  3016               	movlw	22
  8052  0B6B  0021               	movlb	1	; select bank1
  8053  0B6C  0097               	movwf	23	;volatile
  8054  0B6D                     l289:
  8055  0B6D  0008               	return
  8056  0B6E                     __end_of_WDT_Initialize:
  8057                           
  8058                           	psect	text16
  8059  0CFE                     __ptext16:	
  8060 ;; *************** function _TMR1_Initialize *****************
  8061 ;; Defined at:
  8062 ;;		line 20 in file "tmr1.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0, pclath, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;Total ram usage:        0 bytes
  8081 ;; Hardware stack levels used: 1
  8082 ;; Hardware stack levels required when called: 5
  8083 ;; This function calls:
  8084 ;;		_TMR1_SetInterruptHandler
  8085 ;; This function is called by:
  8086 ;;		_SYSTEM_Initialize
  8087 ;; This function uses a non-reentrant model
  8088 ;;
  8089                           
  8090  0CFE                     _TMR1_Initialize:	
  8091                           ;psect for function _TMR1_Initialize
  8092                           
  8093  0CFE                     l3121:	
  8094                           ;incstack = 0
  8095                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8096                           
  8097                           
  8098                           ;tmr1.c: 25:     T1GCON = 0x00;
  8099  0CFE  0020               	movlb	0	; select bank0
  8100  0CFF  019C               	clrf	28	;volatile
  8101                           
  8102                           ;tmr1.c: 28:     TMR1H = 0x00;
  8103  0D00  019A               	clrf	26	;volatile
  8104                           
  8105                           ;tmr1.c: 31:     TMR1L = 0x00;
  8106  0D01  0199               	clrf	25	;volatile
  8107  0D02                     l3123:
  8108                           
  8109                           ;tmr1.c: 34:     PIR1bits.TMR1IF = 0;
  8110  0D02  1011               	bcf	17,0	;volatile
  8111  0D03                     l3125:
  8112                           
  8113                           ;tmr1.c: 37:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8114  0D03  081A               	movf	26,w	;volatile
  8115  0D04  0021               	movlb	1	; select bank1
  8116  0D05  00BD               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8117  0D06  0020               	movlb	0	; select bank0
  8118  0D07  0819               	movf	25,w	;volatile
  8119  0D08  0021               	movlb	1	; select bank1
  8120  0D09  00BC               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8121  0D0A                     l3127:
  8122                           
  8123                           ;tmr1.c: 40:     PIE1bits.TMR1IE = 1;
  8124  0D0A  1411               	bsf	17,0	;volatile
  8125  0D0B                     l3129:
  8126                           
  8127                           ;tmr1.c: 43:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  8128  0D0B  3000               	movlw	0
  8129  0D0C  0020               	movlb	0	; select bank0
  8130  0D0D  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8131  0D0E  3000               	movlw	0
  8132  0D0F  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8133  0D10  3187  27F7  318C   	fcall	_TMR1_SetInterruptHandler
  8134  0D13                     l3131:
  8135                           
  8136                           ;tmr1.c: 46:     T1CON = 0x11;
  8137  0D13  3011               	movlw	17
  8138  0D14  0020               	movlb	0	; select bank0
  8139  0D15  009B               	movwf	27	;volatile
  8140  0D16                     l504:
  8141  0D16  0008               	return
  8142  0D17                     __end_of_TMR1_Initialize:
  8143                           
  8144                           	psect	text17
  8145  07F7                     __ptext17:	
  8146 ;; *************** function _TMR1_SetInterruptHandler *****************
  8147 ;; Defined at:
  8148 ;;		line 154 in file "tmr1.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8151 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		wreg
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;Total ram usage:        2 bytes
  8168 ;; Hardware stack levels used: 1
  8169 ;; Hardware stack levels required when called: 4
  8170 ;; This function calls:
  8171 ;;		Nothing
  8172 ;; This function is called by:
  8173 ;;		_TMR1_Initialize
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177  07F7                     _TMR1_SetInterruptHandler:	
  8178                           ;psect for function _TMR1_SetInterruptHandler
  8179                           
  8180  07F7                     l2881:	
  8181                           ;incstack = 0
  8182                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  8183                           
  8184                           
  8185                           ;tmr1.c: 155:     TMR1_InterruptHandler = InterruptHandler;
  8186  07F7  0020               	movlb	0	; select bank0
  8187  07F8  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  8188  07F9  0021               	movlb	1	; select bank1
  8189  07FA  00BB               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  8190  07FB  0020               	movlb	0	; select bank0
  8191  07FC  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  8192  07FD  0021               	movlb	1	; select bank1
  8193  07FE  00BA               	movwf	_TMR1_InterruptHandler^(0+128)
  8194  07FF                     l537:
  8195  07FF  0008               	return
  8196  0800                     __end_of_TMR1_SetInterruptHandler:
  8197                           
  8198                           	psect	text18
  8199  0C33                     __ptext18:	
  8200 ;; *************** function _TMR0_Initialize *****************
  8201 ;; Defined at:
  8202 ;;		line 18 in file "tmr0.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;		None
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      void 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0, pclath, cstack
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;Total ram usage:        0 bytes
  8221 ;; Hardware stack levels used: 1
  8222 ;; Hardware stack levels required when called: 5
  8223 ;; This function calls:
  8224 ;;		_TMR0_SetInterruptHandler
  8225 ;; This function is called by:
  8226 ;;		_SYSTEM_Initialize
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230  0C33                     _TMR0_Initialize:	
  8231                           ;psect for function _TMR0_Initialize
  8232                           
  8233  0C33                     l3133:	
  8234                           ;incstack = 0
  8235                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8236                           
  8237                           
  8238                           ;tmr0.c: 23:     T0CON1 = 0x42;
  8239  0C33  3042               	movlw	66
  8240  0C34  0020               	movlb	0	; select bank0
  8241  0C35  0098               	movwf	24	;volatile
  8242                           
  8243                           ;tmr0.c: 26:     TMR0H = 0xF9;
  8244  0C36  30F9               	movlw	249
  8245  0C37  0096               	movwf	22	;volatile
  8246  0C38                     l3135:
  8247                           
  8248                           ;tmr0.c: 29:     TMR0L = 0x00;
  8249  0C38  0195               	clrf	21	;volatile
  8250  0C39                     l3137:
  8251                           
  8252                           ;tmr0.c: 32:     PIR0bits.TMR0IF = 0;
  8253  0C39  1290               	bcf	16,5	;volatile
  8254  0C3A                     l3139:
  8255                           
  8256                           ;tmr0.c: 35:     PIE0bits.TMR0IE = 1;
  8257  0C3A  0021               	movlb	1	; select bank1
  8258  0C3B  1690               	bsf	16,5	;volatile
  8259  0C3C                     l3141:
  8260                           
  8261                           ;tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  8262  0C3C  3000               	movlw	0
  8263  0C3D  0020               	movlb	0	; select bank0
  8264  0C3E  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8265  0C3F  3000               	movlw	0
  8266  0C40  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8267  0C41  318B  23D1  318C   	fcall	_TMR0_SetInterruptHandler
  8268  0C44                     l3143:
  8269                           
  8270                           ;tmr0.c: 41:     T0CON0 = 0x80;
  8271  0C44  3080               	movlw	128
  8272  0C45  0020               	movlb	0	; select bank0
  8273  0C46  0097               	movwf	23	;volatile
  8274  0C47                     l321:
  8275  0C47  0008               	return
  8276  0C48                     __end_of_TMR0_Initialize:
  8277                           
  8278                           	psect	text19
  8279  0BD1                     __ptext19:	
  8280 ;; *************** function _TMR0_SetInterruptHandler *****************
  8281 ;; Defined at:
  8282 ;;		line 119 in file "tmr0.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  8285 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8297 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;Total ram usage:        2 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 4
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_TMR0_Initialize
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311  0BD1                     _TMR0_SetInterruptHandler:	
  8312                           ;psect for function _TMR0_SetInterruptHandler
  8313                           
  8314  0BD1                     l2873:	
  8315                           ;incstack = 0
  8316                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  8317                           
  8318                           
  8319                           ;tmr0.c: 120:     TMR0_InterruptHandler = InterruptHandler;
  8320  0BD1  0020               	movlb	0	; select bank0
  8321  0BD2  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  8322  0BD3  0021               	movlb	1	; select bank1
  8323  0BD4  00D3               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  8324  0BD5  0020               	movlb	0	; select bank0
  8325  0BD6  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  8326  0BD7  0021               	movlb	1	; select bank1
  8327  0BD8  00D2               	movwf	_TMR0_InterruptHandler^(0+128)
  8328  0BD9                     l348:
  8329  0BD9  0008               	return
  8330  0BDA                     __end_of_TMR0_SetInterruptHandler:
  8331                           
  8332                           	psect	text20
  8333  0C05                     __ptext20:	
  8334 ;; *************** function _PMD_Initialize *****************
  8335 ;; Defined at:
  8336 ;;		line 59 in file "mcc.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;		None
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      void 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8354 ;;Total ram usage:        0 bytes
  8355 ;; Hardware stack levels used: 1
  8356 ;; Hardware stack levels required when called: 4
  8357 ;; This function calls:
  8358 ;;		Nothing
  8359 ;; This function is called by:
  8360 ;;		_SYSTEM_Initialize
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364  0C05                     _PMD_Initialize:	
  8365                           ;psect for function _PMD_Initialize
  8366                           
  8367  0C05                     l3019:	
  8368                           ;incstack = 0
  8369                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  8370                           
  8371                           
  8372                           ;mcc.c: 62:     PMD0 = 0x00;
  8373  0C05  0032               	movlb	18	; select bank18
  8374  0C06  0191               	clrf	17	;volatile
  8375  0C07                     l3021:
  8376                           
  8377                           ;mcc.c: 64:     PMD1 = 0x7C;
  8378  0C07  307C               	movlw	124
  8379  0C08  0092               	movwf	18	;volatile
  8380  0C09                     l3023:
  8381                           
  8382                           ;mcc.c: 66:     PMD2 = 0x66;
  8383  0C09  3066               	movlw	102
  8384  0C0A  0093               	movwf	19	;volatile
  8385  0C0B                     l3025:
  8386                           
  8387                           ;mcc.c: 68:     PMD3 = 0xC8;
  8388  0C0B  30C8               	movlw	200
  8389  0C0C  0094               	movwf	20	;volatile
  8390  0C0D                     l3027:
  8391                           
  8392                           ;mcc.c: 70:     PMD4 = 0x00;
  8393  0C0D  0195               	clrf	21	;volatile
  8394                           
  8395                           ;mcc.c: 72:     PMD5 = 0x1F;
  8396  0C0E  301F               	movlw	31
  8397  0C0F  0096               	movwf	22	;volatile
  8398  0C10                     l292:
  8399  0C10  0008               	return
  8400  0C11                     __end_of_PMD_Initialize:
  8401                           
  8402                           	psect	text21
  8403  0E65                     __ptext21:	
  8404 ;; *************** function _PIN_MANAGER_Initialize *****************
  8405 ;; Defined at:
  8406 ;;		line 14 in file "pin_manager.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;		None
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;		None
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8424 ;;Total ram usage:        0 bytes
  8425 ;; Hardware stack levels used: 1
  8426 ;; Hardware stack levels required when called: 4
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_SYSTEM_Initialize
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434  0E65                     _PIN_MANAGER_Initialize:	
  8435                           ;psect for function _PIN_MANAGER_Initialize
  8436                           
  8437  0E65                     l3029:	
  8438                           ;incstack = 0
  8439                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8440                           
  8441                           
  8442                           ;pin_manager.c: 19:     LATA = 0x00;
  8443  0E65  0022               	movlb	2	; select bank2
  8444  0E66  018C               	clrf	12	;volatile
  8445                           
  8446                           ;pin_manager.c: 20:     LATB = 0x00;
  8447  0E67  018D               	clrf	13	;volatile
  8448                           
  8449                           ;pin_manager.c: 21:     LATC = 0x00;
  8450  0E68  018E               	clrf	14	;volatile
  8451  0E69                     l3031:
  8452                           
  8453                           ;pin_manager.c: 26:     TRISA = 0x37;
  8454  0E69  3037               	movlw	55
  8455  0E6A  0021               	movlb	1	; select bank1
  8456  0E6B  008C               	movwf	12	;volatile
  8457  0E6C                     l3033:
  8458                           
  8459                           ;pin_manager.c: 27:     TRISB = 0xF0;
  8460  0E6C  30F0               	movlw	240
  8461  0E6D  008D               	movwf	13	;volatile
  8462  0E6E                     l3035:
  8463                           
  8464                           ;pin_manager.c: 28:     TRISC = 0xFF;
  8465  0E6E  30FF               	movlw	255
  8466  0E6F  008E               	movwf	14	;volatile
  8467  0E70                     l3037:
  8468                           
  8469                           ;pin_manager.c: 33:     ANSELC = 0xD7;
  8470  0E70  30D7               	movlw	215
  8471  0E71  0023               	movlb	3	; select bank3
  8472  0E72  008E               	movwf	14	;volatile
  8473  0E73                     l3039:
  8474                           
  8475                           ;pin_manager.c: 34:     ANSELB = 0xF0;
  8476  0E73  30F0               	movlw	240
  8477  0E74  008D               	movwf	13	;volatile
  8478  0E75                     l3041:
  8479                           
  8480                           ;pin_manager.c: 35:     ANSELA = 0x33;
  8481  0E75  3033               	movlw	51
  8482  0E76  008C               	movwf	12	;volatile
  8483                           
  8484                           ;pin_manager.c: 40:     WPUB = 0x00;
  8485  0E77  0024               	movlb	4	; select bank4
  8486  0E78  018D               	clrf	13	;volatile
  8487                           
  8488                           ;pin_manager.c: 41:     WPUA = 0x00;
  8489  0E79  018C               	clrf	12	;volatile
  8490                           
  8491                           ;pin_manager.c: 42:     WPUC = 0x00;
  8492  0E7A  018E               	clrf	14	;volatile
  8493                           
  8494                           ;pin_manager.c: 47:     ODCONA = 0x00;
  8495  0E7B  0025               	movlb	5	; select bank5
  8496  0E7C  018C               	clrf	12	;volatile
  8497                           
  8498                           ;pin_manager.c: 48:     ODCONB = 0x00;
  8499  0E7D  018D               	clrf	13	;volatile
  8500                           
  8501                           ;pin_manager.c: 49:     ODCONC = 0x00;
  8502  0E7E  018E               	clrf	14	;volatile
  8503  0E7F                     l3043:
  8504                           
  8505                           ;pin_manager.c: 54:     SLRCONA = 0x37;
  8506  0E7F  3037               	movlw	55
  8507  0E80  0026               	movlb	6	; select bank6
  8508  0E81  008C               	movwf	12	;volatile
  8509  0E82                     l3045:
  8510                           
  8511                           ;pin_manager.c: 55:     SLRCONB = 0xF0;
  8512  0E82  30F0               	movlw	240
  8513  0E83  008D               	movwf	13	;volatile
  8514  0E84                     l3047:
  8515                           
  8516                           ;pin_manager.c: 56:     SLRCONC = 0xFF;
  8517  0E84  30FF               	movlw	255
  8518  0E85  008E               	movwf	14	;volatile
  8519  0E86                     l3049:
  8520                           
  8521                           ;pin_manager.c: 61:     INLVLA = 0x3F;
  8522  0E86  303F               	movlw	63
  8523  0E87  0027               	movlb	7	; select bank7
  8524  0E88  008C               	movwf	12	;volatile
  8525  0E89                     l3051:
  8526                           
  8527                           ;pin_manager.c: 62:     INLVLB = 0xF0;
  8528  0E89  30F0               	movlw	240
  8529  0E8A  008D               	movwf	13	;volatile
  8530  0E8B                     l3053:
  8531                           
  8532                           ;pin_manager.c: 63:     INLVLC = 0xFF;
  8533  0E8B  30FF               	movlw	255
  8534  0E8C  008E               	movwf	14	;volatile
  8535  0E8D                     l3055:
  8536                           
  8537                           ;pin_manager.c: 65:     RXPPS = 0x0D;
  8538  0E8D  300D               	movlw	13
  8539  0E8E  003C               	movlb	28	; select bank28
  8540  0E8F  00A4               	movwf	36	;volatile
  8541  0E90                     l3057:
  8542                           
  8543                           ;pin_manager.c: 66:     CCP2PPS = 0x13;
  8544  0E90  3013               	movlw	19
  8545  0E91  0095               	movwf	21	;volatile
  8546  0E92                     l3059:
  8547                           
  8548                           ;pin_manager.c: 67:     CCP3PPS = 0x02;
  8549  0E92  3002               	movlw	2
  8550  0E93  0096               	movwf	22	;volatile
  8551  0E94                     l3061:
  8552                           
  8553                           ;pin_manager.c: 68:     RC4PPS = 0x14;
  8554  0E94  3014               	movlw	20
  8555  0E95  003D               	movlb	29	; select bank29
  8556  0E96  00A4               	movwf	36	;volatile
  8557  0E97                     l3063:
  8558                           
  8559                           ;pin_manager.c: 69:     CCP1PPS = 0x15;
  8560  0E97  3015               	movlw	21
  8561  0E98  003C               	movlb	28	; select bank28
  8562  0E99  0094               	movwf	20	;volatile
  8563  0E9A                     l792:
  8564  0E9A  0008               	return
  8565  0E9B                     __end_of_PIN_MANAGER_Initialize:
  8566                           
  8567                           	psect	text22
  8568  0BF9                     __ptext22:	
  8569 ;; *************** function _OSCILLATOR_Initialize *****************
  8570 ;; Defined at:
  8571 ;;		line 31 in file "mcc.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;Total ram usage:        0 bytes
  8590 ;; Hardware stack levels used: 1
  8591 ;; Hardware stack levels required when called: 4
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_SYSTEM_Initialize
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           
  8599  0BF9                     _OSCILLATOR_Initialize:	
  8600                           ;psect for function _OSCILLATOR_Initialize
  8601                           
  8602  0BF9                     l3065:	
  8603                           ;incstack = 0
  8604                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8605                           
  8606                           
  8607                           ;mcc.c: 34:     OSCCON1 = 0x00;
  8608  0BF9  0032               	movlb	18	; select bank18
  8609  0BFA  0199               	clrf	25	;volatile
  8610                           
  8611                           ;mcc.c: 36:     OSCCON3 = 0x00;
  8612  0BFB  019B               	clrf	27	;volatile
  8613                           
  8614                           ;mcc.c: 38:     OSCEN = 0x00;
  8615  0BFC  019D               	clrf	29	;volatile
  8616  0BFD                     l3067:
  8617                           
  8618                           ;mcc.c: 40:     OSCFRQ = 0x04;
  8619  0BFD  3004               	movlw	4
  8620  0BFE  009F               	movwf	31	;volatile
  8621  0BFF                     l3069:
  8622                           
  8623                           ;mcc.c: 42:     OSCTUNE = 0x00;
  8624  0BFF  019E               	clrf	30	;volatile
  8625  0C00                     l283:	
  8626                           ;mcc.c: 45:     {;mcc.c: 46:     }
  8627                           
  8628                           
  8629                           ;mcc.c: 44:     while(PLLR == 0)
  8630  0C00  1C1C               	btfss	28,0	;volatile
  8631  0C01  2C03               	goto	u1051
  8632  0C02  2C04               	goto	u1050
  8633  0C03                     u1051:
  8634  0C03  2C00               	goto	l283
  8635  0C04                     u1050:
  8636  0C04                     l286:
  8637  0C04  0008               	return
  8638  0C05                     __end_of_OSCILLATOR_Initialize:
  8639                           
  8640                           	psect	text23
  8641  076E                     __ptext23:	
  8642 ;; *************** function _EUSART_Initialize *****************
  8643 ;; Defined at:
  8644 ;;		line 45 in file "eusart.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0, pclath, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8662 ;;Total ram usage:        1 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; Hardware stack levels required when called: 5
  8665 ;; This function calls:
  8666 ;;		_EUSART_SetErrorHandler
  8667 ;;		_EUSART_SetFramingErrorHandler
  8668 ;;		_EUSART_SetOverrunErrorHandler
  8669 ;;		_EUSART_SetRxInterruptHandler
  8670 ;;		_EUSART_SetTxInterruptHandler
  8671 ;; This function is called by:
  8672 ;;		_SYSTEM_Initialize
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676  076E                     _EUSART_Initialize:	
  8677                           ;psect for function _EUSART_Initialize
  8678                           
  8679  076E                     l3145:	
  8680                           ;incstack = 0
  8681                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8682                           
  8683                           
  8684                           ;eusart.c: 48:     PIE1bits.RCIE = 0;
  8685  076E  0021               	movlb	1	; select bank1
  8686  076F  1291               	bcf	17,5	;volatile
  8687  0770                     l3147:
  8688                           
  8689                           ;eusart.c: 49:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  8690  0770  3083               	movlw	low _EUSART_Receive_ISR
  8691  0771  0020               	movlb	0	; select bank0
  8692  0772  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  8693  0773  300F               	movlw	high _EUSART_Receive_ISR
  8694  0774  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  8695  0775  318B  23BF  3187   	fcall	_EUSART_SetRxInterruptHandler
  8696  0778                     l3149:
  8697                           
  8698                           ;eusart.c: 50:     PIE1bits.TXIE = 0;
  8699  0778  0021               	movlb	1	; select bank1
  8700  0779  1211               	bcf	17,4	;volatile
  8701                           
  8702                           ;eusart.c: 51:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
  8703  077A  3088               	movlw	low _EUSART_Transmit_ISR
  8704  077B  0020               	movlb	0	; select bank0
  8705  077C  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  8706  077D  300D               	movlw	high _EUSART_Transmit_ISR
  8707  077E  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  8708  077F  318B  23C8  3187   	fcall	_EUSART_SetTxInterruptHandler
  8709  0782                     l3151:
  8710                           
  8711                           ;eusart.c: 55:     BAUD1CON = 0x08;
  8712  0782  3008               	movlw	8
  8713  0783  0023               	movlb	3	; select bank3
  8714  0784  009F               	movwf	31	;volatile
  8715  0785                     l3153:
  8716                           
  8717                           ;eusart.c: 58:     RC1STA = 0x90;
  8718  0785  3090               	movlw	144
  8719  0786  009D               	movwf	29	;volatile
  8720  0787                     l3155:
  8721                           
  8722                           ;eusart.c: 61:     TX1STA = 0x24;
  8723  0787  3024               	movlw	36
  8724  0788  009E               	movwf	30	;volatile
  8725  0789                     l3157:
  8726                           
  8727                           ;eusart.c: 64:     SP1BRGL = 0xA0;
  8728  0789  30A0               	movlw	160
  8729  078A  009B               	movwf	27	;volatile
  8730  078B                     l3159:
  8731                           
  8732                           ;eusart.c: 67:     SP1BRGH = 0x01;
  8733  078B  3001               	movlw	1
  8734  078C  009C               	movwf	28	;volatile
  8735  078D                     l3161:
  8736                           
  8737                           ;eusart.c: 70:     EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  8738  078D  3003               	movlw	low _EUSART_DefaultFramingErrorHandler
  8739  078E  0020               	movlb	0	; select bank0
  8740  078F  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8741  0790  3000               	movlw	high _EUSART_DefaultFramingErrorHandler
  8742  0791  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8743  0792  318B  23AD  3187   	fcall	_EUSART_SetFramingErrorHandler
  8744  0795                     l3163:
  8745                           
  8746                           ;eusart.c: 71:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  8747  0795  3066               	movlw	low _EUSART_DefaultOverrunErrorHandler
  8748  0796  0020               	movlb	0	; select bank0
  8749  0797  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8750  0798  300B               	movlw	high _EUSART_DefaultOverrunErrorHandler
  8751  0799  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8752  079A  318B  23B6  3187   	fcall	_EUSART_SetOverrunErrorHandler
  8753  079D                     l3165:
  8754                           
  8755                           ;eusart.c: 72:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  8756  079D  3062               	movlw	low _EUSART_DefaultErrorHandler
  8757  079E  0020               	movlb	0	; select bank0
  8758  079F  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8759  07A0  300B               	movlw	high _EUSART_DefaultErrorHandler
  8760  07A1  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8761  07A2  318B  23A4  3187   	fcall	_EUSART_SetErrorHandler
  8762  07A5                     l3167:
  8763                           
  8764                           ;eusart.c: 74:     eusartRxLastError.status = 0;
  8765  07A5  0021               	movlb	1	; select bank1
  8766  07A6  01D4               	clrf	_eusartRxLastError^(0+128)	;volatile
  8767  07A7                     l3169:
  8768                           
  8769                           ;eusart.c: 77:     eusartTxHead = 0;
  8770  07A7  01FD               	clrf	_eusartTxHead	;volatile
  8771  07A8                     l3171:
  8772                           
  8773                           ;eusart.c: 78:     eusartTxTail = 0;
  8774  07A8  01D7               	clrf	_eusartTxTail^(0+128)	;volatile
  8775  07A9                     l3173:
  8776                           
  8777                           ;eusart.c: 79:     eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  8778  07A9  3008               	movlw	8
  8779  07AA  0020               	movlb	0	; select bank0
  8780  07AB  00A2               	movwf	??_EUSART_Initialize
  8781  07AC  0822               	movf	??_EUSART_Initialize,w
  8782  07AD  0021               	movlb	1	; select bank1
  8783  07AE  00D6               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  8784                           
  8785                           ;eusart.c: 81:     eusartRxHead = 0;
  8786  07AF  01FC               	clrf	_eusartRxHead	;volatile
  8787                           
  8788                           ;eusart.c: 82:     eusartRxTail = 0;
  8789  07B0  01FB               	clrf	_eusartRxTail	;volatile
  8790                           
  8791                           ;eusart.c: 83:     eusartRxCount = 0;
  8792  07B1  01D5               	clrf	_eusartRxCount^(0+128)	;volatile
  8793  07B2                     l3175:
  8794                           
  8795                           ;eusart.c: 86:     PIE1bits.RCIE = 1;
  8796  07B2  1691               	bsf	17,5	;volatile
  8797  07B3                     l615:
  8798  07B3  0008               	return
  8799  07B4                     __end_of_EUSART_Initialize:
  8800                           
  8801                           	psect	text24
  8802  0BC8                     __ptext24:	
  8803 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  8804 ;; Defined at:
  8805 ;;		line 278 in file "eusart.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8808 ;;		 -> EUSART_Transmit_ISR(1), 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;Total ram usage:        2 bytes
  8825 ;; Hardware stack levels used: 1
  8826 ;; Hardware stack levels required when called: 4
  8827 ;; This function calls:
  8828 ;;		Nothing
  8829 ;; This function is called by:
  8830 ;;		_EUSART_Initialize
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834  0BC8                     _EUSART_SetTxInterruptHandler:	
  8835                           ;psect for function _EUSART_SetTxInterruptHandler
  8836                           
  8837  0BC8                     l2885:	
  8838                           ;incstack = 0
  8839                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  8840                           
  8841                           
  8842                           ;eusart.c: 279:     EUSART_TxDefaultInterruptHandler = interruptHandler;
  8843  0BC8  0020               	movlb	0	; select bank0
  8844  0BC9  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  8845  0BCA  0021               	movlb	1	; select bank1
  8846  0BCB  00B9               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  8847  0BCC  0020               	movlb	0	; select bank0
  8848  0BCD  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  8849  0BCE  0021               	movlb	1	; select bank1
  8850  0BCF  00B8               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  8851  0BD0                     l687:
  8852  0BD0  0008               	return
  8853  0BD1                     __end_of_EUSART_SetTxInterruptHandler:
  8854                           
  8855                           	psect	text25
  8856  0BBF                     __ptext25:	
  8857 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8858 ;; Defined at:
  8859 ;;		line 284 in file "eusart.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8862 ;;		 -> EUSART_Receive_ISR(1), 
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;		None
  8865 ;; Return value:  Size  Location     Type
  8866 ;;                  1    wreg      void 
  8867 ;; Registers used:
  8868 ;;		wreg
  8869 ;; Tracked objects:
  8870 ;;		On entry : 0/0
  8871 ;;		On exit  : 0/0
  8872 ;;		Unchanged: 0/0
  8873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8878 ;;Total ram usage:        2 bytes
  8879 ;; Hardware stack levels used: 1
  8880 ;; Hardware stack levels required when called: 4
  8881 ;; This function calls:
  8882 ;;		Nothing
  8883 ;; This function is called by:
  8884 ;;		_EUSART_Initialize
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888  0BBF                     _EUSART_SetRxInterruptHandler:	
  8889                           ;psect for function _EUSART_SetRxInterruptHandler
  8890                           
  8891  0BBF                     l2883:	
  8892                           ;incstack = 0
  8893                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  8894                           
  8895                           
  8896                           ;eusart.c: 285:     EUSART_RxDefaultInterruptHandler = interruptHandler;
  8897  0BBF  0020               	movlb	0	; select bank0
  8898  0BC0  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  8899  0BC1  0021               	movlb	1	; select bank1
  8900  0BC2  00B7               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  8901  0BC3  0020               	movlb	0	; select bank0
  8902  0BC4  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  8903  0BC5  0021               	movlb	1	; select bank1
  8904  0BC6  00B6               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  8905  0BC7                     l690:
  8906  0BC7  0008               	return
  8907  0BC8                     __end_of_EUSART_SetRxInterruptHandler:
  8908                           
  8909                           	psect	text26
  8910  0BB6                     __ptext26:	
  8911 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8912 ;; Defined at:
  8913 ;;		line 266 in file "eusart.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8916 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;		None
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		wreg
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8932 ;;Total ram usage:        2 bytes
  8933 ;; Hardware stack levels used: 1
  8934 ;; Hardware stack levels required when called: 4
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_EUSART_Initialize
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942  0BB6                     _EUSART_SetOverrunErrorHandler:	
  8943                           ;psect for function _EUSART_SetOverrunErrorHandler
  8944                           
  8945  0BB6                     l2889:	
  8946                           ;incstack = 0
  8947                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8948                           
  8949                           
  8950                           ;eusart.c: 267:     EUSART_OverrunErrorHandler = interruptHandler;
  8951  0BB6  0020               	movlb	0	; select bank0
  8952  0BB7  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8953  0BB8  0021               	movlb	1	; select bank1
  8954  0BB9  00B3               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8955  0BBA  0020               	movlb	0	; select bank0
  8956  0BBB  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8957  0BBC  0021               	movlb	1	; select bank1
  8958  0BBD  00B2               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8959  0BBE                     l681:
  8960  0BBE  0008               	return
  8961  0BBF                     __end_of_EUSART_SetOverrunErrorHandler:
  8962                           
  8963                           	psect	text27
  8964  0BAD                     __ptext27:	
  8965 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8966 ;; Defined at:
  8967 ;;		line 260 in file "eusart.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  8970 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;Total ram usage:        2 bytes
  8987 ;; Hardware stack levels used: 1
  8988 ;; Hardware stack levels required when called: 4
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_EUSART_Initialize
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996  0BAD                     _EUSART_SetFramingErrorHandler:	
  8997                           ;psect for function _EUSART_SetFramingErrorHandler
  8998                           
  8999  0BAD                     l2887:	
  9000                           ;incstack = 0
  9001                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9002                           
  9003                           
  9004                           ;eusart.c: 261:     EUSART_FramingErrorHandler = interruptHandler;
  9005  0BAD  0020               	movlb	0	; select bank0
  9006  0BAE  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9007  0BAF  0021               	movlb	1	; select bank1
  9008  0BB0  00B5               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  9009  0BB1  0020               	movlb	0	; select bank0
  9010  0BB2  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9011  0BB3  0021               	movlb	1	; select bank1
  9012  0BB4  00B4               	movwf	_EUSART_FramingErrorHandler^(0+128)
  9013  0BB5                     l678:
  9014  0BB5  0008               	return
  9015  0BB6                     __end_of_EUSART_SetFramingErrorHandler:
  9016                           
  9017                           	psect	text28
  9018  0BA4                     __ptext28:	
  9019 ;; *************** function _EUSART_SetErrorHandler *****************
  9020 ;; Defined at:
  9021 ;;		line 272 in file "eusart.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  9024 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;		None
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      void 
  9029 ;; Registers used:
  9030 ;;		wreg
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9036 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;Total ram usage:        2 bytes
  9041 ;; Hardware stack levels used: 1
  9042 ;; Hardware stack levels required when called: 4
  9043 ;; This function calls:
  9044 ;;		Nothing
  9045 ;; This function is called by:
  9046 ;;		_EUSART_Initialize
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050  0BA4                     _EUSART_SetErrorHandler:	
  9051                           ;psect for function _EUSART_SetErrorHandler
  9052                           
  9053  0BA4                     l2891:	
  9054                           ;incstack = 0
  9055                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9056                           
  9057                           
  9058                           ;eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  9059  0BA4  0020               	movlb	0	; select bank0
  9060  0BA5  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9061  0BA6  0021               	movlb	1	; select bank1
  9062  0BA7  00B1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  9063  0BA8  0020               	movlb	0	; select bank0
  9064  0BA9  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9065  0BAA  0021               	movlb	1	; select bank1
  9066  0BAB  00B0               	movwf	_EUSART_ErrorHandler^(0+128)
  9067  0BAC                     l684:
  9068  0BAC  0008               	return
  9069  0BAD                     __end_of_EUSART_SetErrorHandler:
  9070                           
  9071                           	psect	text29
  9072  0CE6                     __ptext29:	
  9073 ;; *************** function _CCP3_Initialize *****************
  9074 ;; Defined at:
  9075 ;;		line 45 in file "ccp3.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0, pclath, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;Total ram usage:        0 bytes
  9094 ;; Hardware stack levels used: 1
  9095 ;; Hardware stack levels required when called: 5
  9096 ;; This function calls:
  9097 ;;		_CCP3_SetCallBack
  9098 ;; This function is called by:
  9099 ;;		_SYSTEM_Initialize
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103  0CE6                     _CCP3_Initialize:	
  9104                           ;psect for function _CCP3_Initialize
  9105                           
  9106  0CE6                     l3089:	
  9107                           ;incstack = 0
  9108                           ; Regs used in _CCP3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9109                           
  9110                           
  9111                           ;ccp3.c: 50:  CCP3CON = 0x83;
  9112  0CE6  3083               	movlw	131
  9113  0CE7  0026               	movlb	6	; select bank6
  9114  0CE8  0093               	movwf	19	;volatile
  9115  0CE9                     l3091:
  9116                           
  9117                           ;ccp3.c: 53:  CCP3CAP = 0x00;
  9118  0CE9  0194               	clrf	20	;volatile
  9119  0CEA                     l3093:
  9120                           
  9121                           ;ccp3.c: 56:  CCPR3H = 0x00;
  9122  0CEA  0192               	clrf	18	;volatile
  9123  0CEB                     l3095:
  9124                           
  9125                           ;ccp3.c: 59:  CCPR3L = 0x00;
  9126  0CEB  0191               	clrf	17	;volatile
  9127  0CEC                     l3097:
  9128                           
  9129                           ;ccp3.c: 62:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  9130  0CEC  300F               	movlw	low _CCP3_DefaultCallBack
  9131  0CED  0020               	movlb	0	; select bank0
  9132  0CEE  00A0               	movwf	CCP3_SetCallBack@customCallBack
  9133  0CEF  300F               	movlw	high _CCP3_DefaultCallBack
  9134  0CF0  00A1               	movwf	CCP3_SetCallBack@customCallBack+1
  9135  0CF1  318B  239B  318C   	fcall	_CCP3_SetCallBack
  9136  0CF4                     l3099:
  9137                           
  9138                           ;ccp3.c: 65:  CCPTMRSbits.C3TSEL = 0x1;
  9139  0CF4  0025               	movlb	5	; select bank5
  9140  0CF5  081F               	movf	31,w	;volatile
  9141  0CF6  39CF               	andlw	-49
  9142  0CF7  3810               	iorlw	16
  9143  0CF8  009F               	movwf	31	;volatile
  9144  0CF9                     l3101:
  9145                           
  9146                           ;ccp3.c: 68:     PIR4bits.CCP3IF = 0;
  9147  0CF9  0020               	movlb	0	; select bank0
  9148  0CFA  1114               	bcf	20,2	;volatile
  9149  0CFB                     l3103:
  9150                           
  9151                           ;ccp3.c: 71:     PIE4bits.CCP3IE = 1;
  9152  0CFB  0021               	movlb	1	; select bank1
  9153  0CFC  1514               	bsf	20,2	;volatile
  9154  0CFD                     l471:
  9155  0CFD  0008               	return
  9156  0CFE                     __end_of_CCP3_Initialize:
  9157                           
  9158                           	psect	text30
  9159  0B9B                     __ptext30:	
  9160 ;; *************** function _CCP3_SetCallBack *****************
  9161 ;; Defined at:
  9162 ;;		line 93 in file "ccp3.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9165 ;;		 -> CCP3_DefaultCallBack(1), 
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;Total ram usage:        2 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; Hardware stack levels required when called: 4
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		_CCP3_Initialize
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191  0B9B                     _CCP3_SetCallBack:	
  9192                           ;psect for function _CCP3_SetCallBack
  9193                           
  9194  0B9B                     l2879:	
  9195                           ;incstack = 0
  9196                           ; Regs used in _CCP3_SetCallBack: [wreg]
  9197                           
  9198                           
  9199                           ;ccp3.c: 94:     CCP3_CallBack = customCallBack;
  9200  0B9B  0020               	movlb	0	; select bank0
  9201  0B9C  0821               	movf	CCP3_SetCallBack@customCallBack+1,w
  9202  0B9D  0021               	movlb	1	; select bank1
  9203  0B9E  00C3               	movwf	(_CCP3_CallBack+1)^(0+128)
  9204  0B9F  0020               	movlb	0	; select bank0
  9205  0BA0  0820               	movf	CCP3_SetCallBack@customCallBack,w
  9206  0BA1  0021               	movlb	1	; select bank1
  9207  0BA2  00C2               	movwf	_CCP3_CallBack^(0+128)
  9208  0BA3                     l477:
  9209  0BA3  0008               	return
  9210  0BA4                     __end_of_CCP3_SetCallBack:
  9211                           
  9212                           	psect	text31
  9213  0CCE                     __ptext31:	
  9214 ;; *************** function _CCP2_Initialize *****************
  9215 ;; Defined at:
  9216 ;;		line 45 in file "ccp2.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, pclath, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 5
  9237 ;; This function calls:
  9238 ;;		_CCP2_SetCallBack
  9239 ;; This function is called by:
  9240 ;;		_SYSTEM_Initialize
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244  0CCE                     _CCP2_Initialize:	
  9245                           ;psect for function _CCP2_Initialize
  9246                           
  9247  0CCE                     l3073:	
  9248                           ;incstack = 0
  9249                           ; Regs used in _CCP2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9250                           
  9251                           
  9252                           ;ccp2.c: 50:  CCP2CON = 0x83;
  9253  0CCE  3083               	movlw	131
  9254  0CCF  0025               	movlb	5	; select bank5
  9255  0CD0  0097               	movwf	23	;volatile
  9256  0CD1                     l3075:
  9257                           
  9258                           ;ccp2.c: 53:  CCP2CAP = 0x00;
  9259  0CD1  0198               	clrf	24	;volatile
  9260  0CD2                     l3077:
  9261                           
  9262                           ;ccp2.c: 56:  CCPR2H = 0x00;
  9263  0CD2  0196               	clrf	22	;volatile
  9264  0CD3                     l3079:
  9265                           
  9266                           ;ccp2.c: 59:  CCPR2L = 0x00;
  9267  0CD3  0195               	clrf	21	;volatile
  9268  0CD4                     l3081:
  9269                           
  9270                           ;ccp2.c: 62:     CCP2_SetCallBack(CCP2_DefaultCallBack);
  9271  0CD4  30D5               	movlw	low _CCP2_DefaultCallBack
  9272  0CD5  0020               	movlb	0	; select bank0
  9273  0CD6  00A0               	movwf	CCP2_SetCallBack@customCallBack
  9274  0CD7  300E               	movlw	high _CCP2_DefaultCallBack
  9275  0CD8  00A1               	movwf	CCP2_SetCallBack@customCallBack+1
  9276  0CD9  318B  2392  318C   	fcall	_CCP2_SetCallBack
  9277  0CDC                     l3083:
  9278                           
  9279                           ;ccp2.c: 65:  CCPTMRSbits.C2TSEL = 0x1;
  9280  0CDC  0025               	movlb	5	; select bank5
  9281  0CDD  081F               	movf	31,w	;volatile
  9282  0CDE  39F3               	andlw	-13
  9283  0CDF  3804               	iorlw	4
  9284  0CE0  009F               	movwf	31	;volatile
  9285  0CE1                     l3085:
  9286                           
  9287                           ;ccp2.c: 68:     PIR4bits.CCP2IF = 0;
  9288  0CE1  0020               	movlb	0	; select bank0
  9289  0CE2  1094               	bcf	20,1	;volatile
  9290  0CE3                     l3087:
  9291                           
  9292                           ;ccp2.c: 71:     PIE4bits.CCP2IE = 1;
  9293  0CE3  0021               	movlb	1	; select bank1
  9294  0CE4  1494               	bsf	20,1	;volatile
  9295  0CE5                     l429:
  9296  0CE5  0008               	return
  9297  0CE6                     __end_of_CCP2_Initialize:
  9298                           
  9299                           	psect	text32
  9300  0B92                     __ptext32:	
  9301 ;; *************** function _CCP2_SetCallBack *****************
  9302 ;; Defined at:
  9303 ;;		line 93 in file "ccp2.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9306 ;;		 -> CCP2_DefaultCallBack(1), 
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;		None
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  1    wreg      void 
  9311 ;; Registers used:
  9312 ;;		wreg
  9313 ;; Tracked objects:
  9314 ;;		On entry : 0/0
  9315 ;;		On exit  : 0/0
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;Total ram usage:        2 bytes
  9323 ;; Hardware stack levels used: 1
  9324 ;; Hardware stack levels required when called: 4
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_CCP2_Initialize
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332  0B92                     _CCP2_SetCallBack:	
  9333                           ;psect for function _CCP2_SetCallBack
  9334                           
  9335  0B92                     l2877:	
  9336                           ;incstack = 0
  9337                           ; Regs used in _CCP2_SetCallBack: [wreg]
  9338                           
  9339                           
  9340                           ;ccp2.c: 94:     CCP2_CallBack = customCallBack;
  9341  0B92  0020               	movlb	0	; select bank0
  9342  0B93  0821               	movf	CCP2_SetCallBack@customCallBack+1,w
  9343  0B94  0021               	movlb	1	; select bank1
  9344  0B95  00C9               	movwf	(_CCP2_CallBack+1)^(0+128)
  9345  0B96  0020               	movlb	0	; select bank0
  9346  0B97  0820               	movf	CCP2_SetCallBack@customCallBack,w
  9347  0B98  0021               	movlb	1	; select bank1
  9348  0B99  00C8               	movwf	_CCP2_CallBack^(0+128)
  9349  0B9A                     l435:
  9350  0B9A  0008               	return
  9351  0B9B                     __end_of_CCP2_SetCallBack:
  9352                           
  9353                           	psect	text33
  9354  0CB6                     __ptext33:	
  9355 ;; *************** function _CCP1_Initialize *****************
  9356 ;; Defined at:
  9357 ;;		line 45 in file "ccp1.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0, pclath, cstack
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used: 1
  9377 ;; Hardware stack levels required when called: 5
  9378 ;; This function calls:
  9379 ;;		_CCP1_SetCallBack
  9380 ;; This function is called by:
  9381 ;;		_SYSTEM_Initialize
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385  0CB6                     _CCP1_Initialize:	
  9386                           ;psect for function _CCP1_Initialize
  9387                           
  9388  0CB6                     l3105:	
  9389                           ;incstack = 0
  9390                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9391                           
  9392                           
  9393                           ;ccp1.c: 50:  CCP1CON = 0x83;
  9394  0CB6  3083               	movlw	131
  9395  0CB7  0025               	movlb	5	; select bank5
  9396  0CB8  0093               	movwf	19	;volatile
  9397  0CB9                     l3107:
  9398                           
  9399                           ;ccp1.c: 53:  CCP1CAP = 0x00;
  9400  0CB9  0194               	clrf	20	;volatile
  9401  0CBA                     l3109:
  9402                           
  9403                           ;ccp1.c: 56:  CCPR1H = 0x00;
  9404  0CBA  0192               	clrf	18	;volatile
  9405  0CBB                     l3111:
  9406                           
  9407                           ;ccp1.c: 59:  CCPR1L = 0x00;
  9408  0CBB  0191               	clrf	17	;volatile
  9409  0CBC                     l3113:
  9410                           
  9411                           ;ccp1.c: 62:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  9412  0CBC  309B               	movlw	low _CCP1_DefaultCallBack
  9413  0CBD  0020               	movlb	0	; select bank0
  9414  0CBE  00A0               	movwf	CCP1_SetCallBack@customCallBack
  9415  0CBF  300E               	movlw	high _CCP1_DefaultCallBack
  9416  0CC0  00A1               	movwf	CCP1_SetCallBack@customCallBack+1
  9417  0CC1  318B  2389  318C   	fcall	_CCP1_SetCallBack
  9418  0CC4                     l3115:
  9419                           
  9420                           ;ccp1.c: 65:  CCPTMRSbits.C1TSEL = 0x1;
  9421  0CC4  0025               	movlb	5	; select bank5
  9422  0CC5  081F               	movf	31,w	;volatile
  9423  0CC6  39FC               	andlw	-4
  9424  0CC7  3801               	iorlw	1
  9425  0CC8  009F               	movwf	31	;volatile
  9426  0CC9                     l3117:
  9427                           
  9428                           ;ccp1.c: 68:     PIR4bits.CCP1IF = 0;
  9429  0CC9  0020               	movlb	0	; select bank0
  9430  0CCA  1014               	bcf	20,0	;volatile
  9431  0CCB                     l3119:
  9432                           
  9433                           ;ccp1.c: 71:     PIE4bits.CCP1IE = 1;
  9434  0CCB  0021               	movlb	1	; select bank1
  9435  0CCC  1414               	bsf	20,0	;volatile
  9436  0CCD                     l387:
  9437  0CCD  0008               	return
  9438  0CCE                     __end_of_CCP1_Initialize:
  9439                           
  9440                           	psect	text34
  9441  0B89                     __ptext34:	
  9442 ;; *************** function _CCP1_SetCallBack *****************
  9443 ;; Defined at:
  9444 ;;		line 93 in file "ccp1.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  9447 ;;		 -> CCP1_DefaultCallBack(1), 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1    wreg      void 
  9452 ;; Registers used:
  9453 ;;		wreg
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9459 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9463 ;;Total ram usage:        2 bytes
  9464 ;; Hardware stack levels used: 1
  9465 ;; Hardware stack levels required when called: 4
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_CCP1_Initialize
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473  0B89                     _CCP1_SetCallBack:	
  9474                           ;psect for function _CCP1_SetCallBack
  9475                           
  9476  0B89                     l2875:	
  9477                           ;incstack = 0
  9478                           ; Regs used in _CCP1_SetCallBack: [wreg]
  9479                           
  9480                           
  9481                           ;ccp1.c: 94:     CCP1_CallBack = customCallBack;
  9482  0B89  0020               	movlb	0	; select bank0
  9483  0B8A  0821               	movf	CCP1_SetCallBack@customCallBack+1,w
  9484  0B8B  0021               	movlb	1	; select bank1
  9485  0B8C  00CF               	movwf	(_CCP1_CallBack+1)^(0+128)
  9486  0B8D  0020               	movlb	0	; select bank0
  9487  0B8E  0820               	movf	CCP1_SetCallBack@customCallBack,w
  9488  0B8F  0021               	movlb	1	; select bank1
  9489  0B90  00CE               	movwf	_CCP1_CallBack^(0+128)
  9490  0B91                     l393:
  9491  0B91  0008               	return
  9492  0B92                     __end_of_CCP1_SetCallBack:
  9493                           
  9494                           	psect	text35
  9495  0717                     __ptext35:	
  9496 ;; *************** function _JSN_Sensor_Trig *****************
  9497 ;; Defined at:
  9498 ;;		line 84 in file "JSN_Sensor.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  Sensor          1    wreg     PTR struct .
  9501 ;;		 -> Sens1(6), 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  Sensor          1   10[BANK0 ] PTR struct .
  9504 ;;		 -> Sens1(6), 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;Total ram usage:        5 bytes
  9519 ;; Hardware stack levels used: 1
  9520 ;; Hardware stack levels required when called: 6
  9521 ;; This function calls:
  9522 ;;		_FRT_GetMicros
  9523 ;;		_WritePin
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529  0717                     _JSN_Sensor_Trig:	
  9530                           ;psect for function _JSN_Sensor_Trig
  9531                           
  9532                           
  9533                           ;incstack = 0
  9534                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9535                           ;JSN_Sensor_Trig@Sensor stored from wreg
  9536  0717  0020               	movlb	0	; select bank0
  9537  0718  00AA               	movwf	JSN_Sensor_Trig@Sensor
  9538  0719                     l3563:
  9539                           
  9540                           ;JSN_Sensor.c: 85:     micros = FRT_GetMicros();
  9541  0719  318D  254D  3187   	fcall	_FRT_GetMicros
  9542  071C  0020               	movlb	0	; select bank0
  9543  071D  0825               	movf	?_FRT_GetMicros+3,w
  9544  071E  0021               	movlb	1	; select bank1
  9545  071F  00A7               	movwf	(_micros+3)^(0+128)
  9546  0720  0020               	movlb	0	; select bank0
  9547  0721  0824               	movf	?_FRT_GetMicros+2,w
  9548  0722  0021               	movlb	1	; select bank1
  9549  0723  00A6               	movwf	(_micros+2)^(0+128)
  9550  0724  0020               	movlb	0	; select bank0
  9551  0725  0823               	movf	?_FRT_GetMicros+1,w
  9552  0726  0021               	movlb	1	; select bank1
  9553  0727  00A5               	movwf	(_micros+1)^(0+128)
  9554  0728  0020               	movlb	0	; select bank0
  9555  0729  0822               	movf	?_FRT_GetMicros,w
  9556  072A  0021               	movlb	1	; select bank1
  9557  072B  00A4               	movwf	_micros^(0+128)
  9558  072C                     l3565:
  9559                           
  9560                           ;JSN_Sensor.c: 88:     WritePin(Sensor->trigPin, 1);
  9561  072C  0020               	movlb	0	; select bank0
  9562  072D  01A0               	clrf	WritePin@val
  9563  072E  0AA0               	incf	WritePin@val,f
  9564  072F  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9565  0730  3E04               	addlw	4
  9566  0731  0086               	movwf	6
  9567  0732  0187               	clrf	7
  9568  0733  0801               	movf	1,w
  9569  0734  3182  223F  3187   	fcall	_WritePin
  9570  0737                     l3567:	
  9571                           ;JSN_Sensor.c: 91:     while((FRT_GetMicros() - micros) < 11);
  9572                           
  9573  0737  318D  254D  3187   	fcall	_FRT_GetMicros
  9574  073A  0021               	movlb	1	; select bank1
  9575  073B  0824               	movf	_micros^(0+128),w
  9576  073C  0020               	movlb	0	; select bank0
  9577  073D  0222               	subwf	?_FRT_GetMicros,w
  9578  073E  00A6               	movwf	??_JSN_Sensor_Trig
  9579  073F  0021               	movlb	1	; select bank1
  9580  0740  0825               	movf	(_micros+1)^(0+128),w
  9581  0741  0020               	movlb	0	; select bank0
  9582  0742  3B23               	subwfb	?_FRT_GetMicros+1,w
  9583  0743  00A7               	movwf	??_JSN_Sensor_Trig+1
  9584  0744  0021               	movlb	1	; select bank1
  9585  0745  0826               	movf	(_micros+2)^(0+128),w
  9586  0746  0020               	movlb	0	; select bank0
  9587  0747  3B24               	subwfb	?_FRT_GetMicros+2,w
  9588  0748  00A8               	movwf	??_JSN_Sensor_Trig+2
  9589  0749  0021               	movlb	1	; select bank1
  9590  074A  0827               	movf	(_micros+3)^(0+128),w
  9591  074B  0020               	movlb	0	; select bank0
  9592  074C  3B25               	subwfb	?_FRT_GetMicros+3,w
  9593  074D  00A9               	movwf	??_JSN_Sensor_Trig+3
  9594  074E  0829               	movf	??_JSN_Sensor_Trig+3,w
  9595  074F  1D03               	btfss	3,2
  9596  0750  2F5D               	goto	u1230
  9597  0751  0828               	movf	??_JSN_Sensor_Trig+2,w
  9598  0752  1D03               	btfss	3,2
  9599  0753  2F5D               	goto	u1230
  9600  0754  0827               	movf	??_JSN_Sensor_Trig+1,w
  9601  0755  1D03               	btfss	3,2
  9602  0756  2F5D               	goto	u1230
  9603  0757  300B               	movlw	11
  9604  0758  0226               	subwf	??_JSN_Sensor_Trig,w
  9605  0759  1C03               	btfss	3,0
  9606  075A  2F5C               	goto	u1231
  9607  075B  2F5D               	goto	u1230
  9608  075C                     u1231:
  9609  075C  2F37               	goto	l3567
  9610  075D                     u1230:
  9611  075D                     l3569:
  9612                           
  9613                           ;JSN_Sensor.c: 94:     WritePin(Sensor->trigPin, 0);
  9614  075D  0020               	movlb	0	; select bank0
  9615  075E  01A0               	clrf	WritePin@val
  9616  075F  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9617  0760  3E04               	addlw	4
  9618  0761  0086               	movwf	6
  9619  0762  0187               	clrf	7
  9620  0763  0801               	movf	1,w
  9621  0764  3182  223F  3187   	fcall	_WritePin
  9622  0767                     l3571:
  9623                           
  9624                           ;JSN_Sensor.c: 97:     lastTrig = Sensor;
  9625  0767  0020               	movlb	0	; select bank0
  9626  0768  082A               	movf	JSN_Sensor_Trig@Sensor,w
  9627  0769  00A6               	movwf	??_JSN_Sensor_Trig
  9628  076A  0826               	movf	??_JSN_Sensor_Trig,w
  9629  076B  0021               	movlb	1	; select bank1
  9630  076C  00D8               	movwf	_lastTrig^(0+128)
  9631  076D                     l54:
  9632  076D  0008               	return
  9633  076E                     __end_of_JSN_Sensor_Trig:
  9634                           
  9635                           	psect	text36
  9636  0D4D                     __ptext36:	
  9637 ;; *************** function _FRT_GetMicros *****************
  9638 ;; Defined at:
  9639 ;;		line 36 in file "FRT.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;		None
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  4    2[BANK0 ] unsigned long 
  9646 ;; Registers used:
  9647 ;;		wreg, pclath, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9656 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;Total ram usage:        4 bytes
  9658 ;; Hardware stack levels used: 1
  9659 ;; Hardware stack levels required when called: 5
  9660 ;; This function calls:
  9661 ;;		_TMR0_ReadTimer
  9662 ;; This function is called by:
  9663 ;;		_JSN_Sensor_Trig
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667  0D4D                     _FRT_GetMicros:	
  9668                           ;psect for function _FRT_GetMicros
  9669                           
  9670  0D4D                     l3401:	
  9671                           ;incstack = 0
  9672                           ; Regs used in _FRT_GetMicros: [wreg+pclath+cstack]
  9673                           
  9674                           
  9675                           ;FRT.c: 37:     return (micros + TMR0_ReadTimer());
  9676  0D4D  318B  237B  318D   	fcall	_TMR0_ReadTimer
  9677  0D50  0022               	movlb	2	; select bank2
  9678  0D51  0744               	addwf	_micros@FRT$F1501^(0+256),w
  9679  0D52  0020               	movlb	0	; select bank0
  9680  0D53  00A2               	movwf	?_FRT_GetMicros
  9681  0D54  0022               	movlb	2	; select bank2
  9682  0D55  0845               	movf	(_micros@FRT$F1501+1)^(0+256),w
  9683  0D56  1803               	skipnc
  9684  0D57  0F45               	incfsz	(_micros@FRT$F1501+1)^(0+256),w
  9685  0D58  1003               	clrc
  9686  0D59  0020               	movlb	0	; select bank0
  9687  0D5A  00A3               	movwf	?_FRT_GetMicros+1
  9688  0D5B  0022               	movlb	2	; select bank2
  9689  0D5C  0846               	movf	(_micros@FRT$F1501+2)^(0+256),w
  9690  0D5D  1803               	skipnc
  9691  0D5E  0F46               	incfsz	(_micros@FRT$F1501+2)^(0+256),w
  9692  0D5F  1003               	clrc
  9693  0D60  0020               	movlb	0	; select bank0
  9694  0D61  00A4               	movwf	?_FRT_GetMicros+2
  9695  0D62  0022               	movlb	2	; select bank2
  9696  0D63  0847               	movf	(_micros@FRT$F1501+3)^(0+256),w
  9697  0D64  1803               	skipnc
  9698  0D65  0A47               	incf	(_micros@FRT$F1501+3)^(0+256),w
  9699  0D66  0020               	movlb	0	; select bank0
  9700  0D67  00A5               	movwf	?_FRT_GetMicros+3
  9701  0D68                     l807:
  9702  0D68  0008               	return
  9703  0D69                     __end_of_FRT_GetMicros:
  9704                           
  9705                           	psect	text37
  9706  0B7B                     __ptext37:	
  9707 ;; *************** function _TMR0_ReadTimer *****************
  9708 ;; Defined at:
  9709 ;;		line 62 in file "tmr0.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;		None
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  readVal         1    1[BANK0 ] unsigned char 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      unsigned char 
  9716 ;; Registers used:
  9717 ;;		wreg
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;Total ram usage:        2 bytes
  9728 ;; Hardware stack levels used: 1
  9729 ;; Hardware stack levels required when called: 4
  9730 ;; This function calls:
  9731 ;;		Nothing
  9732 ;; This function is called by:
  9733 ;;		_FRT_GetMicros
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737  0B7B                     _TMR0_ReadTimer:	
  9738                           ;psect for function _TMR0_ReadTimer
  9739                           
  9740  0B7B                     l3177:	
  9741                           ;incstack = 0
  9742                           ; Regs used in _TMR0_ReadTimer: [wreg]
  9743                           
  9744                           
  9745                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
  9746  0B7B  0020               	movlb	0	; select bank0
  9747  0B7C  0815               	movf	21,w	;volatile
  9748  0B7D  00A0               	movwf	??_TMR0_ReadTimer
  9749  0B7E  0820               	movf	??_TMR0_ReadTimer,w
  9750  0B7F  00A1               	movwf	TMR0_ReadTimer@readVal
  9751                           
  9752                           ;tmr0.c: 69:     return readVal;
  9753  0B80  0821               	movf	TMR0_ReadTimer@readVal,w
  9754  0B81                     l330:
  9755  0B81  0008               	return
  9756  0B82                     __end_of_TMR0_ReadTimer:
  9757                           
  9758                           	psect	text38
  9759  0570                     __ptext38:	
  9760 ;; *************** function _JSN_Sensor_Init *****************
  9761 ;; Defined at:
  9762 ;;		line 33 in file "JSN_Sensor.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  Sensor          1    wreg     PTR struct .
  9765 ;;		 -> Sens1(6), 
  9766 ;;  trigPin         1    4[BANK0 ] enum E7110
  9767 ;;  echoPin         1    5[BANK0 ] enum E7110
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;  Sensor          1    8[BANK0 ] PTR struct .
  9770 ;;		 -> Sens1(6), 
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  1    wreg      unsigned char 
  9773 ;; Registers used:
  9774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9780 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9782 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;Total ram usage:        5 bytes
  9785 ;; Hardware stack levels used: 1
  9786 ;; Hardware stack levels required when called: 5
  9787 ;; This function calls:
  9788 ;;		_SetPin
  9789 ;;		_WritePin
  9790 ;; This function is called by:
  9791 ;;		_main
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795  0570                     _JSN_Sensor_Init:	
  9796                           ;psect for function _JSN_Sensor_Init
  9797                           
  9798                           
  9799                           ;incstack = 0
  9800                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9801                           ;JSN_Sensor_Init@Sensor stored from wreg
  9802  0570  0020               	movlb	0	; select bank0
  9803  0571  00A8               	movwf	JSN_Sensor_Init@Sensor
  9804  0572                     l3525:
  9805                           
  9806                           ;JSN_Sensor.c: 36:     switch(echoPin) {
  9807  0572  2D7A               	goto	l3531
  9808  0573                     l28:	
  9809                           ;JSN_Sensor.c: 39:         case C3:
  9810                           
  9811  0573                     l3527:
  9812                           
  9813                           ;JSN_Sensor.c: 41:             SetPin(echoPin, 1);
  9814  0573  01A0               	clrf	SetPin@io
  9815  0574  0AA0               	incf	SetPin@io,f
  9816  0575  0825               	movf	JSN_Sensor_Init@echoPin,w
  9817  0576  3182  22FA  3185   	fcall	_SetPin
  9818                           
  9819                           ;JSN_Sensor.c: 42:             break;
  9820  0579  2D9C               	goto	l3537
  9821  057A                     l3531:
  9822  057A  0825               	movf	JSN_Sensor_Init@echoPin,w
  9823  057B  00A6               	movwf	??_JSN_Sensor_Init
  9824  057C  01A7               	clrf	??_JSN_Sensor_Init+1
  9825                           
  9826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9827                           ; Switch size 1, requested type "simple"
  9828                           ; Number of cases is 1, Range of values is 0 to 0
  9829                           ; switch strategies available:
  9830                           ; Name         Instructions Cycles
  9831                           ; simple_byte            4     3 (average)
  9832                           ; direct_byte            8     6 (fixed)
  9833                           ; jumptable            260     6 (fixed)
  9834                           ;	Chosen strategy is simple_byte
  9835  057D  0827               	movf	??_JSN_Sensor_Init+1,w
  9836  057E  3A00               	xorlw	0	; case 0
  9837  057F  1903               	skipnz
  9838  0580  2D82               	goto	l3981
  9839  0581  2DF1               	goto	l32
  9840  0582                     l3981:
  9841                           
  9842                           ; Switch size 1, requested type "simple"
  9843                           ; Number of cases is 4, Range of values is 1 to 11
  9844                           ; switch strategies available:
  9845                           ; Name         Instructions Cycles
  9846                           ; simple_byte           13     7 (average)
  9847                           ; direct_byte           31     9 (fixed)
  9848                           ; jumptable            263     9 (fixed)
  9849                           ;	Chosen strategy is simple_byte
  9850  0582  0826               	movf	??_JSN_Sensor_Init,w
  9851  0583  3A01               	xorlw	1	; case 1
  9852  0584  1903               	skipnz
  9853  0585  2D73               	goto	l3527
  9854  0586  3A02               	xorlw	2	; case 3
  9855  0587  1903               	skipnz
  9856  0588  2D73               	goto	l3527
  9857  0589  3A06               	xorlw	6	; case 5
  9858  058A  1903               	skipnz
  9859  058B  2D73               	goto	l3527
  9860  058C  3A0E               	xorlw	14	; case 11
  9861  058D  1903               	skipnz
  9862  058E  2D73               	goto	l28
  9863  058F  2DF1               	goto	l32
  9864  0590                     l37:	
  9865                           ;JSN_Sensor.c: 52:         case C7:
  9866                           
  9867  0590                     l3533:
  9868                           
  9869                           ;JSN_Sensor.c: 62:             SetPin(trigPin, 0);
  9870  0590  01A0               	clrf	SetPin@io
  9871  0591  0824               	movf	JSN_Sensor_Init@trigPin,w
  9872  0592  3182  22FA  3185   	fcall	_SetPin
  9873                           
  9874                           ;JSN_Sensor.c: 63:             WritePin(trigPin, 0);
  9875  0595  0020               	movlb	0	; select bank0
  9876  0596  01A0               	clrf	WritePin@val
  9877  0597  0824               	movf	JSN_Sensor_Init@trigPin,w
  9878  0598  3182  223F  3185   	fcall	_WritePin
  9879                           
  9880                           ;JSN_Sensor.c: 64:             break;
  9881  059B  2DCE               	goto	l3539
  9882  059C                     l3537:
  9883  059C  0020               	movlb	0	; select bank0
  9884  059D  0824               	movf	JSN_Sensor_Init@trigPin,w
  9885  059E  00A6               	movwf	??_JSN_Sensor_Init
  9886  059F  01A7               	clrf	??_JSN_Sensor_Init+1
  9887                           
  9888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9889                           ; Switch size 1, requested type "simple"
  9890                           ; Number of cases is 1, Range of values is 0 to 0
  9891                           ; switch strategies available:
  9892                           ; Name         Instructions Cycles
  9893                           ; simple_byte            4     3 (average)
  9894                           ; direct_byte            8     6 (fixed)
  9895                           ; jumptable            260     6 (fixed)
  9896                           ;	Chosen strategy is simple_byte
  9897  05A0  0827               	movf	??_JSN_Sensor_Init+1,w
  9898  05A1  3A00               	xorlw	0	; case 0
  9899  05A2  1903               	skipnz
  9900  05A3  2DA5               	goto	l3983
  9901  05A4  2DF1               	goto	l32
  9902  05A5                     l3983:
  9903                           
  9904                           ; Switch size 1, requested type "simple"
  9905                           ; Number of cases is 13, Range of values is 0 to 17
  9906                           ; switch strategies available:
  9907                           ; Name         Instructions Cycles
  9908                           ; simple_byte           40    21 (average)
  9909                           ; direct_byte           42     6 (fixed)
  9910                           ; jumptable            260     6 (fixed)
  9911                           ;	Chosen strategy is simple_byte
  9912  05A5  0826               	movf	??_JSN_Sensor_Init,w
  9913  05A6  3A00               	xorlw	0	; case 0
  9914  05A7  1903               	skipnz
  9915  05A8  2D90               	goto	l37
  9916  05A9  3A04               	xorlw	4	; case 4
  9917  05AA  1903               	skipnz
  9918  05AB  2D90               	goto	l37
  9919  05AC  3A02               	xorlw	2	; case 6
  9920  05AD  1903               	skipnz
  9921  05AE  2D90               	goto	l37
  9922  05AF  3A01               	xorlw	1	; case 7
  9923  05B0  1903               	skipnz
  9924  05B1  2D90               	goto	l3533
  9925  05B2  3A0F               	xorlw	15	; case 8
  9926  05B3  1903               	skipnz
  9927  05B4  2D90               	goto	l3533
  9928  05B5  3A01               	xorlw	1	; case 9
  9929  05B6  1903               	skipnz
  9930  05B7  2D90               	goto	l3533
  9931  05B8  3A03               	xorlw	3	; case 10
  9932  05B9  1903               	skipnz
  9933  05BA  2D90               	goto	l3533
  9934  05BB  3A06               	xorlw	6	; case 12
  9935  05BC  1903               	skipnz
  9936  05BD  2D90               	goto	l3533
  9937  05BE  3A01               	xorlw	1	; case 13
  9938  05BF  1903               	skipnz
  9939  05C0  2D90               	goto	l3533
  9940  05C1  3A03               	xorlw	3	; case 14
  9941  05C2  1903               	skipnz
  9942  05C3  2D90               	goto	l3533
  9943  05C4  3A01               	xorlw	1	; case 15
  9944  05C5  1903               	skipnz
  9945  05C6  2D90               	goto	l3533
  9946  05C7  3A1F               	xorlw	31	; case 16
  9947  05C8  1903               	skipnz
  9948  05C9  2D90               	goto	l3533
  9949  05CA  3A01               	xorlw	1	; case 17
  9950  05CB  1903               	skipnz
  9951  05CC  2D90               	goto	l3533
  9952  05CD  2DF1               	goto	l32
  9953  05CE                     l3539:
  9954                           
  9955                           ;JSN_Sensor.c: 70:     Sensor->distance = 0;
  9956  05CE  0020               	movlb	0	; select bank0
  9957  05CF  0828               	movf	JSN_Sensor_Init@Sensor,w
  9958  05D0  3E02               	addlw	2
  9959  05D1  0086               	movwf	6
  9960  05D2  0187               	clrf	7
  9961  05D3  3000               	movlw	0
  9962  05D4  3FC0               	movwi [0]fsr1
  9963  05D5  3FC1               	movwi [1]fsr1
  9964  05D6                     l3541:
  9965                           
  9966                           ;JSN_Sensor.c: 71:     Sensor->echoHighTime = 0;
  9967  05D6  0828               	movf	JSN_Sensor_Init@Sensor,w
  9968  05D7  0086               	movwf	6
  9969  05D8  0187               	clrf	7
  9970  05D9  3000               	movlw	0
  9971  05DA  3FC0               	movwi [0]fsr1
  9972  05DB  3FC1               	movwi [1]fsr1
  9973  05DC                     l3543:
  9974                           
  9975                           ;JSN_Sensor.c: 72:     Sensor->echoPin = echoPin;
  9976  05DC  0825               	movf	JSN_Sensor_Init@echoPin,w
  9977  05DD  00A6               	movwf	??_JSN_Sensor_Init
  9978  05DE  0828               	movf	JSN_Sensor_Init@Sensor,w
  9979  05DF  3E05               	addlw	5
  9980  05E0  0086               	movwf	6
  9981  05E1  0187               	clrf	7
  9982  05E2  0826               	movf	??_JSN_Sensor_Init,w
  9983  05E3  0081               	movwf	1
  9984  05E4                     l3545:
  9985                           
  9986                           ;JSN_Sensor.c: 73:     Sensor->trigPin = trigPin;
  9987  05E4  0824               	movf	JSN_Sensor_Init@trigPin,w
  9988  05E5  00A6               	movwf	??_JSN_Sensor_Init
  9989  05E6  0828               	movf	JSN_Sensor_Init@Sensor,w
  9990  05E7  3E04               	addlw	4
  9991  05E8  0086               	movwf	6
  9992  05E9  0187               	clrf	7
  9993  05EA  0826               	movf	??_JSN_Sensor_Init,w
  9994  05EB  0081               	movwf	1
  9995  05EC                     l3547:
  9996                           
  9997                           ;JSN_Sensor.c: 75:     lastTrig = Sensor;
  9998  05EC  0828               	movf	JSN_Sensor_Init@Sensor,w
  9999  05ED  00A6               	movwf	??_JSN_Sensor_Init
 10000  05EE  0826               	movf	??_JSN_Sensor_Init,w
 10001  05EF  0021               	movlb	1	; select bank1
 10002  05F0  00D8               	movwf	_lastTrig^(0+128)
 10003  05F1                     l32:
 10004  05F1  0008               	return
 10005  05F2                     __end_of_JSN_Sensor_Init:
 10006                           
 10007                           	psect	text39
 10008  023F                     __ptext39:	
 10009 ;; *************** function _WritePin *****************
 10010 ;; Defined at:
 10011 ;;		line 177 in file "PIC16Xpress_DevBoard.c"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;  pin             1    wreg     enum E7110
 10014 ;;  val             1    0[BANK0 ] unsigned char 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  pin             1    3[BANK0 ] enum E7110
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      unsigned char 
 10019 ;; Registers used:
 10020 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10026 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;Total ram usage:        4 bytes
 10031 ;; Hardware stack levels used: 1
 10032 ;; Hardware stack levels required when called: 4
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;;		_JSN_Sensor_Init
 10037 ;;		_JSN_Sensor_Trig
 10038 ;;		_main
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042  023F                     _WritePin:	
 10043                           ;psect for function _WritePin
 10044                           
 10045                           
 10046                           ;incstack = 0
 10047                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
 10048                           ;WritePin@pin stored from wreg
 10049  023F  0020               	movlb	0	; select bank0
 10050  0240  00A3               	movwf	WritePin@pin
 10051  0241                     l3321:
 10052                           
 10053                           ;PIC16Xpress_DevBoard.c: 178:     switch(pin) {
 10054  0241  2AB9               	goto	l3393
 10055  0242                     l3323:
 10056                           
 10057                           ;PIC16Xpress_DevBoard.c: 180:             LATAbits.LATA5 = val;
 10058  0242  0C20               	rrf	WritePin@val,w
 10059  0243  0022               	movlb	2	; select bank2
 10060  0244  1C03               	skipc
 10061  0245  128C               	bcf	12,5	;volatile
 10062  0246  1803               	skipnc
 10063  0247  168C               	bsf	12,5	;volatile
 10064  0248  2AF9               	goto	l212
 10065  0249                     l3327:
 10066                           
 10067                           ;PIC16Xpress_DevBoard.c: 183:             LATAbits.LATA4 = val;
 10068  0249  0C20               	rrf	WritePin@val,w
 10069  024A  0022               	movlb	2	; select bank2
 10070  024B  1C03               	skipc
 10071  024C  120C               	bcf	12,4	;volatile
 10072  024D  1803               	skipnc
 10073  024E  160C               	bsf	12,4	;volatile
 10074  024F  2AF9               	goto	l212
 10075  0250                     l3331:
 10076                           
 10077                           ;PIC16Xpress_DevBoard.c: 188:             LATCbits.LATC5 = val;
 10078  0250  0C20               	rrf	WritePin@val,w
 10079  0251  0022               	movlb	2	; select bank2
 10080  0252  1C03               	skipc
 10081  0253  128E               	bcf	14,5	;volatile
 10082  0254  1803               	skipnc
 10083  0255  168E               	bsf	14,5	;volatile
 10084  0256  2AF9               	goto	l212
 10085  0257                     l3335:
 10086                           
 10087                           ;PIC16Xpress_DevBoard.c: 191:             LATCbits.LATC4 = val;
 10088  0257  0C20               	rrf	WritePin@val,w
 10089  0258  0022               	movlb	2	; select bank2
 10090  0259  1C03               	skipc
 10091  025A  120E               	bcf	14,4	;volatile
 10092  025B  1803               	skipnc
 10093  025C  160E               	bsf	14,4	;volatile
 10094  025D  2AF9               	goto	l212
 10095  025E                     l3339:
 10096                           
 10097                           ;PIC16Xpress_DevBoard.c: 194:             LATCbits.LATC3 = val;
 10098  025E  0C20               	rrf	WritePin@val,w
 10099  025F  0022               	movlb	2	; select bank2
 10100  0260  1C03               	skipc
 10101  0261  118E               	bcf	14,3	;volatile
 10102  0262  1803               	skipnc
 10103  0263  158E               	bsf	14,3	;volatile
 10104  0264  2AF9               	goto	l212
 10105  0265                     l3343:
 10106                           
 10107                           ;PIC16Xpress_DevBoard.c: 197:             LATCbits.LATC6 = val;
 10108  0265  0C20               	rrf	WritePin@val,w
 10109  0266  0022               	movlb	2	; select bank2
 10110  0267  1C03               	skipc
 10111  0268  130E               	bcf	14,6	;volatile
 10112  0269  1803               	skipnc
 10113  026A  170E               	bsf	14,6	;volatile
 10114  026B  2AF9               	goto	l212
 10115  026C                     l3347:
 10116                           
 10117                           ;PIC16Xpress_DevBoard.c: 200:             LATCbits.LATC7 = val;
 10118  026C  0C20               	rrf	WritePin@val,w
 10119  026D  0022               	movlb	2	; select bank2
 10120  026E  1C03               	skipc
 10121  026F  138E               	bcf	14,7	;volatile
 10122  0270  1803               	skipnc
 10123  0271  178E               	bsf	14,7	;volatile
 10124  0272  2AF9               	goto	l212
 10125  0273                     l3351:
 10126                           
 10127                           ;PIC16Xpress_DevBoard.c: 203:             LATBbits.LATB7 = val;
 10128  0273  0C20               	rrf	WritePin@val,w
 10129  0274  0022               	movlb	2	; select bank2
 10130  0275  1C03               	skipc
 10131  0276  138D               	bcf	13,7	;volatile
 10132  0277  1803               	skipnc
 10133  0278  178D               	bsf	13,7	;volatile
 10134  0279  2AF9               	goto	l212
 10135  027A                     l3355:
 10136                           
 10137                           ;PIC16Xpress_DevBoard.c: 206:             LATAbits.LATA0 = val;
 10138  027A  0C20               	rrf	WritePin@val,w
 10139  027B  0022               	movlb	2	; select bank2
 10140  027C  1C03               	skipc
 10141  027D  100C               	bcf	12,0	;volatile
 10142  027E  1803               	skipnc
 10143  027F  140C               	bsf	12,0	;volatile
 10144  0280  2AF9               	goto	l212
 10145  0281                     l3359:
 10146                           
 10147                           ;PIC16Xpress_DevBoard.c: 209:             LATAbits.LATA1 = val;
 10148  0281  0C20               	rrf	WritePin@val,w
 10149  0282  0022               	movlb	2	; select bank2
 10150  0283  1C03               	skipc
 10151  0284  108C               	bcf	12,1	;volatile
 10152  0285  1803               	skipnc
 10153  0286  148C               	bsf	12,1	;volatile
 10154  0287  2AF9               	goto	l212
 10155  0288                     l3363:
 10156                           
 10157                           ;PIC16Xpress_DevBoard.c: 212:             LATAbits.LATA2 = val;
 10158  0288  0C20               	rrf	WritePin@val,w
 10159  0289  0022               	movlb	2	; select bank2
 10160  028A  1C03               	skipc
 10161  028B  110C               	bcf	12,2	;volatile
 10162  028C  1803               	skipnc
 10163  028D  150C               	bsf	12,2	;volatile
 10164  028E  2AF9               	goto	l212
 10165  028F                     l3367:
 10166                           
 10167                           ;PIC16Xpress_DevBoard.c: 215:             LATCbits.LATC0 = val;
 10168  028F  0C20               	rrf	WritePin@val,w
 10169  0290  0022               	movlb	2	; select bank2
 10170  0291  1C03               	skipc
 10171  0292  100E               	bcf	14,0	;volatile
 10172  0293  1803               	skipnc
 10173  0294  140E               	bsf	14,0	;volatile
 10174  0295  2AF9               	goto	l212
 10175  0296                     l3371:
 10176                           
 10177                           ;PIC16Xpress_DevBoard.c: 218:             LATCbits.LATC1 = val;
 10178  0296  0C20               	rrf	WritePin@val,w
 10179  0297  0022               	movlb	2	; select bank2
 10180  0298  1C03               	skipc
 10181  0299  108E               	bcf	14,1	;volatile
 10182  029A  1803               	skipnc
 10183  029B  148E               	bsf	14,1	;volatile
 10184  029C  2AF9               	goto	l212
 10185  029D                     l3375:
 10186                           
 10187                           ;PIC16Xpress_DevBoard.c: 221:             LATCbits.LATC2 = val;
 10188  029D  0C20               	rrf	WritePin@val,w
 10189  029E  0022               	movlb	2	; select bank2
 10190  029F  1C03               	skipc
 10191  02A0  110E               	bcf	14,2	;volatile
 10192  02A1  1803               	skipnc
 10193  02A2  150E               	bsf	14,2	;volatile
 10194  02A3  2AF9               	goto	l212
 10195  02A4                     l3379:
 10196                           
 10197                           ;PIC16Xpress_DevBoard.c: 224:             LATBbits.LATB4 = val;
 10198  02A4  0C20               	rrf	WritePin@val,w
 10199  02A5  0022               	movlb	2	; select bank2
 10200  02A6  1C03               	skipc
 10201  02A7  120D               	bcf	13,4	;volatile
 10202  02A8  1803               	skipnc
 10203  02A9  160D               	bsf	13,4	;volatile
 10204  02AA  2AF9               	goto	l212
 10205  02AB                     l3383:
 10206                           
 10207                           ;PIC16Xpress_DevBoard.c: 227:             LATBbits.LATB5 = val;
 10208  02AB  0C20               	rrf	WritePin@val,w
 10209  02AC  0022               	movlb	2	; select bank2
 10210  02AD  1C03               	skipc
 10211  02AE  128D               	bcf	13,5	;volatile
 10212  02AF  1803               	skipnc
 10213  02B0  168D               	bsf	13,5	;volatile
 10214  02B1  2AF9               	goto	l212
 10215  02B2                     l3387:
 10216                           
 10217                           ;PIC16Xpress_DevBoard.c: 230:             LATBbits.LATB6 = val;
 10218  02B2  0C20               	rrf	WritePin@val,w
 10219  02B3  0022               	movlb	2	; select bank2
 10220  02B4  1C03               	skipc
 10221  02B5  130D               	bcf	13,6	;volatile
 10222  02B6  1803               	skipnc
 10223  02B7  170D               	bsf	13,6	;volatile
 10224  02B8  2AF9               	goto	l212
 10225  02B9                     l3393:
 10226  02B9  0823               	movf	WritePin@pin,w
 10227  02BA  00A1               	movwf	??_WritePin
 10228  02BB  01A2               	clrf	??_WritePin+1
 10229                           
 10230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10231                           ; Switch size 1, requested type "simple"
 10232                           ; Number of cases is 1, Range of values is 0 to 0
 10233                           ; switch strategies available:
 10234                           ; Name         Instructions Cycles
 10235                           ; simple_byte            4     3 (average)
 10236                           ; direct_byte            8     6 (fixed)
 10237                           ; jumptable            260     6 (fixed)
 10238                           ;	Chosen strategy is simple_byte
 10239  02BC  0822               	movf	??_WritePin+1,w
 10240  02BD  3A00               	xorlw	0	; case 0
 10241  02BE  1903               	skipnz
 10242  02BF  2AC1               	goto	l3985
 10243  02C0  2AF9               	goto	l212
 10244  02C1                     l3985:
 10245                           
 10246                           ; Switch size 1, requested type "simple"
 10247                           ; Number of cases is 18, Range of values is 0 to 17
 10248                           ; switch strategies available:
 10249                           ; Name         Instructions Cycles
 10250                           ; direct_byte           42     6 (fixed)
 10251                           ; simple_byte           55    28 (average)
 10252                           ; jumptable            260     6 (fixed)
 10253                           ;	Chosen strategy is simple_byte
 10254  02C1  0821               	movf	??_WritePin,w
 10255  02C2  3A00               	xorlw	0	; case 0
 10256  02C3  1903               	skipnz
 10257  02C4  2A42               	goto	l3323
 10258  02C5  3A01               	xorlw	1	; case 1
 10259  02C6  1903               	skipnz
 10260  02C7  2A49               	goto	l3327
 10261  02C8  3A03               	xorlw	3	; case 2
 10262  02C9  1903               	skipnz
 10263  02CA  2AF9               	goto	l212
 10264  02CB  3A01               	xorlw	1	; case 3
 10265  02CC  1903               	skipnz
 10266  02CD  2A50               	goto	l3331
 10267  02CE  3A07               	xorlw	7	; case 4
 10268  02CF  1903               	skipnz
 10269  02D0  2A57               	goto	l3335
 10270  02D1  3A01               	xorlw	1	; case 5
 10271  02D2  1903               	skipnz
 10272  02D3  2A5E               	goto	l3339
 10273  02D4  3A03               	xorlw	3	; case 6
 10274  02D5  1903               	skipnz
 10275  02D6  2A65               	goto	l3343
 10276  02D7  3A01               	xorlw	1	; case 7
 10277  02D8  1903               	skipnz
 10278  02D9  2A6C               	goto	l3347
 10279  02DA  3A0F               	xorlw	15	; case 8
 10280  02DB  1903               	skipnz
 10281  02DC  2A73               	goto	l3351
 10282  02DD  3A01               	xorlw	1	; case 9
 10283  02DE  1903               	skipnz
 10284  02DF  2A7A               	goto	l3355
 10285  02E0  3A03               	xorlw	3	; case 10
 10286  02E1  1903               	skipnz
 10287  02E2  2A81               	goto	l3359
 10288  02E3  3A01               	xorlw	1	; case 11
 10289  02E4  1903               	skipnz
 10290  02E5  2A88               	goto	l3363
 10291  02E6  3A07               	xorlw	7	; case 12
 10292  02E7  1903               	skipnz
 10293  02E8  2A8F               	goto	l3367
 10294  02E9  3A01               	xorlw	1	; case 13
 10295  02EA  1903               	skipnz
 10296  02EB  2A96               	goto	l3371
 10297  02EC  3A03               	xorlw	3	; case 14
 10298  02ED  1903               	skipnz
 10299  02EE  2A9D               	goto	l3375
 10300  02EF  3A01               	xorlw	1	; case 15
 10301  02F0  1903               	skipnz
 10302  02F1  2AA4               	goto	l3379
 10303  02F2  3A1F               	xorlw	31	; case 16
 10304  02F3  1903               	skipnz
 10305  02F4  2AAB               	goto	l3383
 10306  02F5  3A01               	xorlw	1	; case 17
 10307  02F6  1903               	skipnz
 10308  02F7  2AB2               	goto	l3387
 10309  02F8  2AF9               	goto	l212
 10310  02F9                     l212:
 10311  02F9  0008               	return
 10312  02FA                     __end_of_WritePin:
 10313                           
 10314                           	psect	text40
 10315  02FA                     __ptext40:	
 10316 ;; *************** function _SetPin *****************
 10317 ;; Defined at:
 10318 ;;		line 70 in file "PIC16Xpress_DevBoard.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  pin             1    wreg     enum E7110
 10321 ;;  io              1    0[BANK0 ] unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  pin             1    3[BANK0 ] enum E7110
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      unsigned char 
 10326 ;; Registers used:
 10327 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10333 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;Total ram usage:        4 bytes
 10338 ;; Hardware stack levels used: 1
 10339 ;; Hardware stack levels required when called: 4
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_JSN_Sensor_Init
 10344 ;;		_main
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348  02FA                     _SetPin:	
 10349                           ;psect for function _SetPin
 10350                           
 10351                           
 10352                           ;incstack = 0
 10353                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
 10354                           ;SetPin@pin stored from wreg
 10355  02FA  0020               	movlb	0	; select bank0
 10356  02FB  00A3               	movwf	SetPin@pin
 10357  02FC                     l3241:
 10358                           
 10359                           ;PIC16Xpress_DevBoard.c: 71:     switch(pin) {
 10360  02FC  2B74               	goto	l3313
 10361  02FD                     l3243:
 10362                           
 10363                           ;PIC16Xpress_DevBoard.c: 73:             TRISAbits.TRISA5 = io;
 10364  02FD  0C20               	rrf	SetPin@io,w
 10365  02FE  0021               	movlb	1	; select bank1
 10366  02FF  1C03               	skipc
 10367  0300  128C               	bcf	12,5	;volatile
 10368  0301  1803               	skipnc
 10369  0302  168C               	bsf	12,5	;volatile
 10370  0303  2BB4               	goto	l164
 10371  0304                     l3247:
 10372                           
 10373                           ;PIC16Xpress_DevBoard.c: 76:             TRISAbits.TRISA4 = io;
 10374  0304  0C20               	rrf	SetPin@io,w
 10375  0305  0021               	movlb	1	; select bank1
 10376  0306  1C03               	skipc
 10377  0307  120C               	bcf	12,4	;volatile
 10378  0308  1803               	skipnc
 10379  0309  160C               	bsf	12,4	;volatile
 10380  030A  2BB4               	goto	l164
 10381  030B                     l3251:
 10382                           
 10383                           ;PIC16Xpress_DevBoard.c: 81:             TRISCbits.TRISC5 = io;
 10384  030B  0C20               	rrf	SetPin@io,w
 10385  030C  0021               	movlb	1	; select bank1
 10386  030D  1C03               	skipc
 10387  030E  128E               	bcf	14,5	;volatile
 10388  030F  1803               	skipnc
 10389  0310  168E               	bsf	14,5	;volatile
 10390  0311  2BB4               	goto	l164
 10391  0312                     l3255:
 10392                           
 10393                           ;PIC16Xpress_DevBoard.c: 84:             TRISCbits.TRISC4 = io;
 10394  0312  0C20               	rrf	SetPin@io,w
 10395  0313  0021               	movlb	1	; select bank1
 10396  0314  1C03               	skipc
 10397  0315  120E               	bcf	14,4	;volatile
 10398  0316  1803               	skipnc
 10399  0317  160E               	bsf	14,4	;volatile
 10400  0318  2BB4               	goto	l164
 10401  0319                     l3259:
 10402                           
 10403                           ;PIC16Xpress_DevBoard.c: 87:             TRISCbits.TRISC3 = io;
 10404  0319  0C20               	rrf	SetPin@io,w
 10405  031A  0021               	movlb	1	; select bank1
 10406  031B  1C03               	skipc
 10407  031C  118E               	bcf	14,3	;volatile
 10408  031D  1803               	skipnc
 10409  031E  158E               	bsf	14,3	;volatile
 10410  031F  2BB4               	goto	l164
 10411  0320                     l3263:
 10412                           
 10413                           ;PIC16Xpress_DevBoard.c: 90:             TRISCbits.TRISC6 = io;
 10414  0320  0C20               	rrf	SetPin@io,w
 10415  0321  0021               	movlb	1	; select bank1
 10416  0322  1C03               	skipc
 10417  0323  130E               	bcf	14,6	;volatile
 10418  0324  1803               	skipnc
 10419  0325  170E               	bsf	14,6	;volatile
 10420  0326  2BB4               	goto	l164
 10421  0327                     l3267:
 10422                           
 10423                           ;PIC16Xpress_DevBoard.c: 93:             TRISCbits.TRISC7 = io;
 10424  0327  0C20               	rrf	SetPin@io,w
 10425  0328  0021               	movlb	1	; select bank1
 10426  0329  1C03               	skipc
 10427  032A  138E               	bcf	14,7	;volatile
 10428  032B  1803               	skipnc
 10429  032C  178E               	bsf	14,7	;volatile
 10430  032D  2BB4               	goto	l164
 10431  032E                     l3271:
 10432                           
 10433                           ;PIC16Xpress_DevBoard.c: 96:             TRISBbits.TRISB7 = io;
 10434  032E  0C20               	rrf	SetPin@io,w
 10435  032F  0021               	movlb	1	; select bank1
 10436  0330  1C03               	skipc
 10437  0331  138D               	bcf	13,7	;volatile
 10438  0332  1803               	skipnc
 10439  0333  178D               	bsf	13,7	;volatile
 10440  0334  2BB4               	goto	l164
 10441  0335                     l3275:
 10442                           
 10443                           ;PIC16Xpress_DevBoard.c: 99:             TRISAbits.TRISA0 = io;
 10444  0335  0C20               	rrf	SetPin@io,w
 10445  0336  0021               	movlb	1	; select bank1
 10446  0337  1C03               	skipc
 10447  0338  100C               	bcf	12,0	;volatile
 10448  0339  1803               	skipnc
 10449  033A  140C               	bsf	12,0	;volatile
 10450  033B  2BB4               	goto	l164
 10451  033C                     l3279:
 10452                           
 10453                           ;PIC16Xpress_DevBoard.c: 102:             TRISAbits.TRISA1 = io;
 10454  033C  0C20               	rrf	SetPin@io,w
 10455  033D  0021               	movlb	1	; select bank1
 10456  033E  1C03               	skipc
 10457  033F  108C               	bcf	12,1	;volatile
 10458  0340  1803               	skipnc
 10459  0341  148C               	bsf	12,1	;volatile
 10460  0342  2BB4               	goto	l164
 10461  0343                     l3283:
 10462                           
 10463                           ;PIC16Xpress_DevBoard.c: 105:             TRISAbits.TRISA2 = io;
 10464  0343  0C20               	rrf	SetPin@io,w
 10465  0344  0021               	movlb	1	; select bank1
 10466  0345  1C03               	skipc
 10467  0346  110C               	bcf	12,2	;volatile
 10468  0347  1803               	skipnc
 10469  0348  150C               	bsf	12,2	;volatile
 10470  0349  2BB4               	goto	l164
 10471  034A                     l3287:
 10472                           
 10473                           ;PIC16Xpress_DevBoard.c: 108:             TRISCbits.TRISC0 = io;
 10474  034A  0C20               	rrf	SetPin@io,w
 10475  034B  0021               	movlb	1	; select bank1
 10476  034C  1C03               	skipc
 10477  034D  100E               	bcf	14,0	;volatile
 10478  034E  1803               	skipnc
 10479  034F  140E               	bsf	14,0	;volatile
 10480  0350  2BB4               	goto	l164
 10481  0351                     l3291:
 10482                           
 10483                           ;PIC16Xpress_DevBoard.c: 111:             TRISCbits.TRISC1 = io;
 10484  0351  0C20               	rrf	SetPin@io,w
 10485  0352  0021               	movlb	1	; select bank1
 10486  0353  1C03               	skipc
 10487  0354  108E               	bcf	14,1	;volatile
 10488  0355  1803               	skipnc
 10489  0356  148E               	bsf	14,1	;volatile
 10490  0357  2BB4               	goto	l164
 10491  0358                     l3295:
 10492                           
 10493                           ;PIC16Xpress_DevBoard.c: 114:             TRISCbits.TRISC2 = io;
 10494  0358  0C20               	rrf	SetPin@io,w
 10495  0359  0021               	movlb	1	; select bank1
 10496  035A  1C03               	skipc
 10497  035B  110E               	bcf	14,2	;volatile
 10498  035C  1803               	skipnc
 10499  035D  150E               	bsf	14,2	;volatile
 10500  035E  2BB4               	goto	l164
 10501  035F                     l3299:
 10502                           
 10503                           ;PIC16Xpress_DevBoard.c: 117:             TRISBbits.TRISB4 = io;
 10504  035F  0C20               	rrf	SetPin@io,w
 10505  0360  0021               	movlb	1	; select bank1
 10506  0361  1C03               	skipc
 10507  0362  120D               	bcf	13,4	;volatile
 10508  0363  1803               	skipnc
 10509  0364  160D               	bsf	13,4	;volatile
 10510  0365  2BB4               	goto	l164
 10511  0366                     l3303:
 10512                           
 10513                           ;PIC16Xpress_DevBoard.c: 120:             TRISBbits.TRISB5 = io;
 10514  0366  0C20               	rrf	SetPin@io,w
 10515  0367  0021               	movlb	1	; select bank1
 10516  0368  1C03               	skipc
 10517  0369  128D               	bcf	13,5	;volatile
 10518  036A  1803               	skipnc
 10519  036B  168D               	bsf	13,5	;volatile
 10520  036C  2BB4               	goto	l164
 10521  036D                     l3307:
 10522                           
 10523                           ;PIC16Xpress_DevBoard.c: 123:             TRISBbits.TRISB6 = io;
 10524  036D  0C20               	rrf	SetPin@io,w
 10525  036E  0021               	movlb	1	; select bank1
 10526  036F  1C03               	skipc
 10527  0370  130D               	bcf	13,6	;volatile
 10528  0371  1803               	skipnc
 10529  0372  170D               	bsf	13,6	;volatile
 10530  0373  2BB4               	goto	l164
 10531  0374                     l3313:
 10532  0374  0823               	movf	SetPin@pin,w
 10533  0375  00A1               	movwf	??_SetPin
 10534  0376  01A2               	clrf	??_SetPin+1
 10535                           
 10536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10537                           ; Switch size 1, requested type "simple"
 10538                           ; Number of cases is 1, Range of values is 0 to 0
 10539                           ; switch strategies available:
 10540                           ; Name         Instructions Cycles
 10541                           ; simple_byte            4     3 (average)
 10542                           ; direct_byte            8     6 (fixed)
 10543                           ; jumptable            260     6 (fixed)
 10544                           ;	Chosen strategy is simple_byte
 10545  0377  0822               	movf	??_SetPin+1,w
 10546  0378  3A00               	xorlw	0	; case 0
 10547  0379  1903               	skipnz
 10548  037A  2B7C               	goto	l3987
 10549  037B  2BB4               	goto	l164
 10550  037C                     l3987:
 10551                           
 10552                           ; Switch size 1, requested type "simple"
 10553                           ; Number of cases is 18, Range of values is 0 to 17
 10554                           ; switch strategies available:
 10555                           ; Name         Instructions Cycles
 10556                           ; direct_byte           42     6 (fixed)
 10557                           ; simple_byte           55    28 (average)
 10558                           ; jumptable            260     6 (fixed)
 10559                           ;	Chosen strategy is simple_byte
 10560  037C  0821               	movf	??_SetPin,w
 10561  037D  3A00               	xorlw	0	; case 0
 10562  037E  1903               	skipnz
 10563  037F  2AFD               	goto	l3243
 10564  0380  3A01               	xorlw	1	; case 1
 10565  0381  1903               	skipnz
 10566  0382  2B04               	goto	l3247
 10567  0383  3A03               	xorlw	3	; case 2
 10568  0384  1903               	skipnz
 10569  0385  2BB4               	goto	l164
 10570  0386  3A01               	xorlw	1	; case 3
 10571  0387  1903               	skipnz
 10572  0388  2B0B               	goto	l3251
 10573  0389  3A07               	xorlw	7	; case 4
 10574  038A  1903               	skipnz
 10575  038B  2B12               	goto	l3255
 10576  038C  3A01               	xorlw	1	; case 5
 10577  038D  1903               	skipnz
 10578  038E  2B19               	goto	l3259
 10579  038F  3A03               	xorlw	3	; case 6
 10580  0390  1903               	skipnz
 10581  0391  2B20               	goto	l3263
 10582  0392  3A01               	xorlw	1	; case 7
 10583  0393  1903               	skipnz
 10584  0394  2B27               	goto	l3267
 10585  0395  3A0F               	xorlw	15	; case 8
 10586  0396  1903               	skipnz
 10587  0397  2B2E               	goto	l3271
 10588  0398  3A01               	xorlw	1	; case 9
 10589  0399  1903               	skipnz
 10590  039A  2B35               	goto	l3275
 10591  039B  3A03               	xorlw	3	; case 10
 10592  039C  1903               	skipnz
 10593  039D  2B3C               	goto	l3279
 10594  039E  3A01               	xorlw	1	; case 11
 10595  039F  1903               	skipnz
 10596  03A0  2B43               	goto	l3283
 10597  03A1  3A07               	xorlw	7	; case 12
 10598  03A2  1903               	skipnz
 10599  03A3  2B4A               	goto	l3287
 10600  03A4  3A01               	xorlw	1	; case 13
 10601  03A5  1903               	skipnz
 10602  03A6  2B51               	goto	l3291
 10603  03A7  3A03               	xorlw	3	; case 14
 10604  03A8  1903               	skipnz
 10605  03A9  2B58               	goto	l3295
 10606  03AA  3A01               	xorlw	1	; case 15
 10607  03AB  1903               	skipnz
 10608  03AC  2B5F               	goto	l3299
 10609  03AD  3A1F               	xorlw	31	; case 16
 10610  03AE  1903               	skipnz
 10611  03AF  2B66               	goto	l3303
 10612  03B0  3A01               	xorlw	1	; case 17
 10613  03B1  1903               	skipnz
 10614  03B2  2B6D               	goto	l3307
 10615  03B3  2BB4               	goto	l164
 10616  03B4                     l164:
 10617  03B4  0008               	return
 10618  03B5                     __end_of_SetPin:
 10619                           
 10620                           	psect	text41
 10621  0FC0                     __ptext41:	
 10622 ;; *************** function _JSN_Sensor_GetDistance *****************
 10623 ;; Defined at:
 10624 ;;		line 103 in file "JSN_Sensor.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  Sensor          1    wreg     PTR struct .
 10627 ;;		 -> Sens1(6), 
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;  Sensor          1   30[BANK0 ] PTR struct .
 10630 ;;		 -> Sens1(6), 
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  2   26[BANK0 ] unsigned int 
 10633 ;; Registers used:
 10634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10644 ;;Total ram usage:        5 bytes
 10645 ;; Hardware stack levels used: 1
 10646 ;; Hardware stack levels required when called: 5
 10647 ;; This function calls:
 10648 ;;		___lldiv
 10649 ;;		___lmul
 10650 ;; This function is called by:
 10651 ;;		_main
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655  0FC0                     _JSN_Sensor_GetDistance:	
 10656                           ;psect for function _JSN_Sensor_GetDistance
 10657                           
 10658                           
 10659                           ;incstack = 0
 10660                           ; Regs used in _JSN_Sensor_GetDistance: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 10661                           ;JSN_Sensor_GetDistance@Sensor stored from wreg
 10662  0FC0  0020               	movlb	0	; select bank0
 10663  0FC1  00BE               	movwf	JSN_Sensor_GetDistance@Sensor
 10664  0FC2                     l3575:
 10665                           
 10666                           ;JSN_Sensor.c: 108:     Sensor->distance = (unsigned int)(((uint32_t)Sensor->echoHighTim
      +                          e *
 10667  0FC2  3000               	movlw	0
 10668  0FC3  00AF               	movwf	___lldiv@divisor+3
 10669  0FC4  3000               	movlw	0
 10670  0FC5  00AE               	movwf	___lldiv@divisor+2
 10671  0FC6  3007               	movlw	7
 10672  0FC7  00AD               	movwf	___lldiv@divisor+1
 10673  0FC8  30D0               	movlw	208
 10674  0FC9  00AC               	movwf	___lldiv@divisor
 10675  0FCA  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10676  0FCB  0086               	movwf	6
 10677  0FCC  0187               	clrf	7
 10678  0FCD  3F40               	moviw [0]fsr1
 10679  0FCE  00BC               	movwf	??_JSN_Sensor_GetDistance
 10680  0FCF  3F41               	moviw [1]fsr1
 10681  0FD0  00BD               	movwf	??_JSN_Sensor_GetDistance+1
 10682  0FD1  083C               	movf	??_JSN_Sensor_GetDistance,w
 10683  0FD2  00A0               	movwf	___lmul@multiplier
 10684  0FD3  083D               	movf	??_JSN_Sensor_GetDistance+1,w
 10685  0FD4  00A1               	movwf	___lmul@multiplier+1
 10686  0FD5  01A2               	clrf	___lmul@multiplier+2
 10687  0FD6  01A3               	clrf	___lmul@multiplier+3
 10688  0FD7  3000               	movlw	0
 10689  0FD8  00A7               	movwf	___lmul@multiplicand+3
 10690  0FD9  3000               	movlw	0
 10691  0FDA  00A6               	movwf	___lmul@multiplicand+2
 10692  0FDB  3001               	movlw	1
 10693  0FDC  00A5               	movwf	___lmul@multiplicand+1
 10694  0FDD  3057               	movlw	87
 10695  0FDE  00A4               	movwf	___lmul@multiplicand
 10696  0FDF  318E  2631  318F   	fcall	___lmul
 10697  0FE2  0020               	movlb	0	; select bank0
 10698  0FE3  0823               	movf	?___lmul+3,w
 10699  0FE4  00B3               	movwf	___lldiv@dividend+3
 10700  0FE5  0822               	movf	?___lmul+2,w
 10701  0FE6  00B2               	movwf	___lldiv@dividend+2
 10702  0FE7  0821               	movf	?___lmul+1,w
 10703  0FE8  00B1               	movwf	___lldiv@dividend+1
 10704  0FE9  0820               	movf	?___lmul,w
 10705  0FEA  00B0               	movwf	___lldiv@dividend
 10706  0FEB  3186  2663  318F   	fcall	___lldiv
 10707  0FEE  0020               	movlb	0	; select bank0
 10708  0FEF  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10709  0FF0  3E02               	addlw	2
 10710  0FF1  0086               	movwf	6
 10711  0FF2  0187               	clrf	7
 10712  0FF3  082C               	movf	?___lldiv,w
 10713  0FF4  3FC0               	movwi [0]fsr1
 10714  0FF5  082D               	movf	?___lldiv+1,w
 10715  0FF6  3FC1               	movwi [1]fsr1
 10716  0FF7                     l3577:
 10717                           
 10718                           ;JSN_Sensor.c: 110:     return Sensor->distance;
 10719  0FF7  083E               	movf	JSN_Sensor_GetDistance@Sensor,w
 10720  0FF8  3E02               	addlw	2
 10721  0FF9  0086               	movwf	6
 10722  0FFA  0187               	clrf	7
 10723  0FFB  3F40               	moviw [0]fsr1
 10724  0FFC  00BA               	movwf	?_JSN_Sensor_GetDistance
 10725  0FFD  3F41               	moviw [1]fsr1
 10726  0FFE  00BB               	movwf	?_JSN_Sensor_GetDistance+1
 10727  0FFF                     l57:
 10728  0FFF  0008               	return
 10729  1000                     __end_of_JSN_Sensor_GetDistance:
 10730                           
 10731                           	psect	text42
 10732  0E31                     __ptext42:	
 10733 ;; *************** function ___lmul *****************
 10734 ;; Defined at:
 10735 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul32.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  multiplier      4    0[BANK0 ] unsigned long 
 10738 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 10739 ;; Auto vars:     Size  Location     Type
 10740 ;;  product         4    8[BANK0 ] unsigned long 
 10741 ;; Return value:  Size  Location     Type
 10742 ;;                  4    0[BANK0 ] unsigned long 
 10743 ;; Registers used:
 10744 ;;		wreg, status,2, status,0
 10745 ;; Tracked objects:
 10746 ;;		On entry : 0/0
 10747 ;;		On exit  : 0/0
 10748 ;;		Unchanged: 0/0
 10749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10750 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;Total ram usage:       12 bytes
 10755 ;; Hardware stack levels used: 1
 10756 ;; Hardware stack levels required when called: 4
 10757 ;; This function calls:
 10758 ;;		Nothing
 10759 ;; This function is called by:
 10760 ;;		_JSN_Sensor_GetDistance
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764  0E31                     ___lmul:	
 10765                           ;psect for function ___lmul
 10766                           
 10767  0E31                     l3475:	
 10768                           ;incstack = 0
 10769                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10770                           
 10771  0E31  3000               	movlw	0
 10772  0E32  0020               	movlb	0	; select bank0
 10773  0E33  00AB               	movwf	___lmul@product+3
 10774  0E34  3000               	movlw	0
 10775  0E35  00AA               	movwf	___lmul@product+2
 10776  0E36  3000               	movlw	0
 10777  0E37  00A9               	movwf	___lmul@product+1
 10778  0E38  3000               	movlw	0
 10779  0E39  00A8               	movwf	___lmul@product
 10780  0E3A                     l3477:
 10781  0E3A  1C20               	btfss	___lmul@multiplier,0
 10782  0E3B  2E3D               	goto	u1111
 10783  0E3C  2E3E               	goto	u1110
 10784  0E3D                     u1111:
 10785  0E3D  2E46               	goto	l3481
 10786  0E3E                     u1110:
 10787  0E3E                     l3479:
 10788  0E3E  0824               	movf	___lmul@multiplicand,w
 10789  0E3F  07A8               	addwf	___lmul@product,f
 10790  0E40  0825               	movf	___lmul@multiplicand+1,w
 10791  0E41  3DA9               	addwfc	___lmul@product+1,f
 10792  0E42  0826               	movf	___lmul@multiplicand+2,w
 10793  0E43  3DAA               	addwfc	___lmul@product+2,f
 10794  0E44  0827               	movf	___lmul@multiplicand+3,w
 10795  0E45  3DAB               	addwfc	___lmul@product+3,f
 10796  0E46                     l3481:
 10797  0E46  3001               	movlw	1
 10798  0E47                     u1125:
 10799  0E47  35A4               	lslf	___lmul@multiplicand,f
 10800  0E48  0DA5               	rlf	___lmul@multiplicand+1,f
 10801  0E49  0DA6               	rlf	___lmul@multiplicand+2,f
 10802  0E4A  0DA7               	rlf	___lmul@multiplicand+3,f
 10803  0E4B  0B89               	decfsz	9,f
 10804  0E4C  2E47               	goto	u1125
 10805  0E4D                     l3483:
 10806  0E4D  3001               	movlw	1
 10807  0E4E                     u1135:
 10808  0E4E  36A3               	lsrf	___lmul@multiplier+3,f
 10809  0E4F  0CA2               	rrf	___lmul@multiplier+2,f
 10810  0E50  0CA1               	rrf	___lmul@multiplier+1,f
 10811  0E51  0CA0               	rrf	___lmul@multiplier,f
 10812  0E52  0B89               	decfsz	9,f
 10813  0E53  2E4E               	goto	u1135
 10814  0E54  0823               	movf	___lmul@multiplier+3,w
 10815  0E55  0422               	iorwf	___lmul@multiplier+2,w
 10816  0E56  0421               	iorwf	___lmul@multiplier+1,w
 10817  0E57  0420               	iorwf	___lmul@multiplier,w
 10818  0E58  1D03               	skipz
 10819  0E59  2E5B               	goto	u1141
 10820  0E5A  2E5C               	goto	u1140
 10821  0E5B                     u1141:
 10822  0E5B  2E3A               	goto	l3477
 10823  0E5C                     u1140:
 10824  0E5C                     l3485:
 10825  0E5C  082B               	movf	___lmul@product+3,w
 10826  0E5D  00A3               	movwf	?___lmul+3
 10827  0E5E  082A               	movf	___lmul@product+2,w
 10828  0E5F  00A2               	movwf	?___lmul+2
 10829  0E60  0829               	movf	___lmul@product+1,w
 10830  0E61  00A1               	movwf	?___lmul+1
 10831  0E62  0828               	movf	___lmul@product,w
 10832  0E63  00A0               	movwf	?___lmul
 10833  0E64                     l979:
 10834  0E64  0008               	return
 10835  0E65                     __end_of___lmul:
 10836                           
 10837                           	psect	text43
 10838  0663                     __ptext43:	
 10839 ;; *************** function ___lldiv *****************
 10840 ;; Defined at:
 10841 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\__lldiv.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  divisor         4   12[BANK0 ] unsigned long 
 10844 ;;  dividend        4   16[BANK0 ] unsigned long 
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;  quotient        4   21[BANK0 ] unsigned long 
 10847 ;;  counter         1   25[BANK0 ] unsigned char 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  4   12[BANK0 ] unsigned long 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10857 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;Total ram usage:       14 bytes
 10862 ;; Hardware stack levels used: 1
 10863 ;; Hardware stack levels required when called: 4
 10864 ;; This function calls:
 10865 ;;		Nothing
 10866 ;; This function is called by:
 10867 ;;		_JSN_Sensor_GetDistance
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871  0663                     ___lldiv:	
 10872                           ;psect for function ___lldiv
 10873                           
 10874  0663                     l3489:	
 10875                           ;incstack = 0
 10876                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10877                           
 10878  0663  3000               	movlw	0
 10879  0664  0020               	movlb	0	; select bank0
 10880  0665  00B8               	movwf	___lldiv@quotient+3
 10881  0666  3000               	movlw	0
 10882  0667  00B7               	movwf	___lldiv@quotient+2
 10883  0668  3000               	movlw	0
 10884  0669  00B6               	movwf	___lldiv@quotient+1
 10885  066A  3000               	movlw	0
 10886  066B  00B5               	movwf	___lldiv@quotient
 10887  066C  082F               	movf	___lldiv@divisor+3,w
 10888  066D  042E               	iorwf	___lldiv@divisor+2,w
 10889  066E  042D               	iorwf	___lldiv@divisor+1,w
 10890  066F  042C               	iorwf	___lldiv@divisor,w
 10891  0670  1903               	skipnz
 10892  0671  2E73               	goto	u1151
 10893  0672  2E74               	goto	u1150
 10894  0673                     u1151:
 10895  0673  2EB5               	goto	l3509
 10896  0674                     u1150:
 10897  0674                     l3491:
 10898  0674  01B9               	clrf	___lldiv@counter
 10899  0675  0AB9               	incf	___lldiv@counter,f
 10900  0676  2E82               	goto	l3495
 10901  0677                     l3493:
 10902  0677  3001               	movlw	1
 10903  0678                     u1165:
 10904  0678  35AC               	lslf	___lldiv@divisor,f
 10905  0679  0DAD               	rlf	___lldiv@divisor+1,f
 10906  067A  0DAE               	rlf	___lldiv@divisor+2,f
 10907  067B  0DAF               	rlf	___lldiv@divisor+3,f
 10908  067C  0B89               	decfsz	9,f
 10909  067D  2E78               	goto	u1165
 10910  067E  3001               	movlw	1
 10911  067F  00B4               	movwf	??___lldiv
 10912  0680  0834               	movf	??___lldiv,w
 10913  0681  07B9               	addwf	___lldiv@counter,f
 10914  0682                     l3495:
 10915  0682  1FAF               	btfss	___lldiv@divisor+3,7
 10916  0683  2E85               	goto	u1171
 10917  0684  2E86               	goto	u1170
 10918  0685                     u1171:
 10919  0685  2E77               	goto	l3493
 10920  0686                     u1170:
 10921  0686                     l3497:
 10922  0686  3001               	movlw	1
 10923  0687                     u1185:
 10924  0687  35B5               	lslf	___lldiv@quotient,f
 10925  0688  0DB6               	rlf	___lldiv@quotient+1,f
 10926  0689  0DB7               	rlf	___lldiv@quotient+2,f
 10927  068A  0DB8               	rlf	___lldiv@quotient+3,f
 10928  068B  0B89               	decfsz	9,f
 10929  068C  2E87               	goto	u1185
 10930  068D                     l3499:
 10931  068D  082F               	movf	___lldiv@divisor+3,w
 10932  068E  0233               	subwf	___lldiv@dividend+3,w
 10933  068F  1D03               	skipz
 10934  0690  2E9B               	goto	u1195
 10935  0691  082E               	movf	___lldiv@divisor+2,w
 10936  0692  0232               	subwf	___lldiv@dividend+2,w
 10937  0693  1D03               	skipz
 10938  0694  2E9B               	goto	u1195
 10939  0695  082D               	movf	___lldiv@divisor+1,w
 10940  0696  0231               	subwf	___lldiv@dividend+1,w
 10941  0697  1D03               	skipz
 10942  0698  2E9B               	goto	u1195
 10943  0699  082C               	movf	___lldiv@divisor,w
 10944  069A  0230               	subwf	___lldiv@dividend,w
 10945  069B                     u1195:
 10946  069B  1C03               	skipc
 10947  069C  2E9E               	goto	u1191
 10948  069D  2E9F               	goto	u1190
 10949  069E                     u1191:
 10950  069E  2EA8               	goto	l3505
 10951  069F                     u1190:
 10952  069F                     l3501:
 10953  069F  082C               	movf	___lldiv@divisor,w
 10954  06A0  02B0               	subwf	___lldiv@dividend,f
 10955  06A1  082D               	movf	___lldiv@divisor+1,w
 10956  06A2  3BB1               	subwfb	___lldiv@dividend+1,f
 10957  06A3  082E               	movf	___lldiv@divisor+2,w
 10958  06A4  3BB2               	subwfb	___lldiv@dividend+2,f
 10959  06A5  082F               	movf	___lldiv@divisor+3,w
 10960  06A6  3BB3               	subwfb	___lldiv@dividend+3,f
 10961  06A7                     l3503:
 10962  06A7  1435               	bsf	___lldiv@quotient,0
 10963  06A8                     l3505:
 10964  06A8  3001               	movlw	1
 10965  06A9                     u1205:
 10966  06A9  36AF               	lsrf	___lldiv@divisor+3,f
 10967  06AA  0CAE               	rrf	___lldiv@divisor+2,f
 10968  06AB  0CAD               	rrf	___lldiv@divisor+1,f
 10969  06AC  0CAC               	rrf	___lldiv@divisor,f
 10970  06AD  0B89               	decfsz	9,f
 10971  06AE  2EA9               	goto	u1205
 10972  06AF                     l3507:
 10973  06AF  3001               	movlw	1
 10974  06B0  02B9               	subwf	___lldiv@counter,f
 10975  06B1  1D03               	btfss	3,2
 10976  06B2  2EB4               	goto	u1211
 10977  06B3  2EB5               	goto	u1210
 10978  06B4                     u1211:
 10979  06B4  2E86               	goto	l3497
 10980  06B5                     u1210:
 10981  06B5                     l3509:
 10982  06B5  0838               	movf	___lldiv@quotient+3,w
 10983  06B6  00AF               	movwf	?___lldiv+3
 10984  06B7  0837               	movf	___lldiv@quotient+2,w
 10985  06B8  00AE               	movwf	?___lldiv+2
 10986  06B9  0836               	movf	___lldiv@quotient+1,w
 10987  06BA  00AD               	movwf	?___lldiv+1
 10988  06BB  0835               	movf	___lldiv@quotient,w
 10989  06BC  00AC               	movwf	?___lldiv
 10990  06BD                     l1001:
 10991  06BD  0008               	return
 10992  06BE                     __end_of___lldiv:
 10993                           
 10994                           	psect	text44
 10995  0C22                     __ptext44:	
 10996 ;; *************** function _FRT_GetMillis *****************
 10997 ;; Defined at:
 10998 ;;		line 30 in file "FRT.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;		None
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;		None
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  4    0[BANK0 ] unsigned long 
 11005 ;; Registers used:
 11006 ;;		wreg
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11012 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11016 ;;Total ram usage:        4 bytes
 11017 ;; Hardware stack levels used: 1
 11018 ;; Hardware stack levels required when called: 4
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_main
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026  0C22                     _FRT_GetMillis:	
 11027                           ;psect for function _FRT_GetMillis
 11028                           
 11029  0C22                     l3613:	
 11030                           ;incstack = 0
 11031                           ; Regs used in _FRT_GetMillis: [wreg]
 11032                           
 11033                           
 11034                           ;FRT.c: 31:     return millis;
 11035  0C22  0021               	movlb	1	; select bank1
 11036  0C23  0823               	movf	(_millis+3)^(0+128),w
 11037  0C24  0020               	movlb	0	; select bank0
 11038  0C25  00A3               	movwf	?_FRT_GetMillis+3
 11039  0C26  0021               	movlb	1	; select bank1
 11040  0C27  0822               	movf	(_millis+2)^(0+128),w
 11041  0C28  0020               	movlb	0	; select bank0
 11042  0C29  00A2               	movwf	?_FRT_GetMillis+2
 11043  0C2A  0021               	movlb	1	; select bank1
 11044  0C2B  0821               	movf	(_millis+1)^(0+128),w
 11045  0C2C  0020               	movlb	0	; select bank0
 11046  0C2D  00A1               	movwf	?_FRT_GetMillis+1
 11047  0C2E  0021               	movlb	1	; select bank1
 11048  0C2F  0820               	movf	_millis^(0+128),w
 11049  0C30  0020               	movlb	0	; select bank0
 11050  0C31  00A0               	movwf	?_FRT_GetMillis
 11051  0C32                     l804:
 11052  0C32  0008               	return
 11053  0C33                     __end_of_FRT_GetMillis:
 11054                           
 11055                           	psect	intentry
 11056  0004                     __pintentry:	
 11057 ;; *************** function _INTERRUPT_InterruptManager *****************
 11058 ;; Defined at:
 11059 ;;		line 16 in file "interrupt_manager.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;		None
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;		None
 11064 ;; Return value:  Size  Location     Type
 11065 ;;                  1    wreg      void 
 11066 ;; Registers used:
 11067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/0
 11070 ;;		On exit  : 0/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;Total ram usage:        0 bytes
 11078 ;; Hardware stack levels used: 1
 11079 ;; Hardware stack levels required when called: 3
 11080 ;; This function calls:
 11081 ;;		Absolute function
 11082 ;;		_CCP1_CaptureISR
 11083 ;;		_CCP2_CaptureISR
 11084 ;;		_CCP3_CaptureISR
 11085 ;;		_EUSART_Receive_ISR
 11086 ;;		_EUSART_Transmit_ISR
 11087 ;;		_TMR0_ISR
 11088 ;;		_TMR1_ISR
 11089 ;; This function is called by:
 11090 ;;		Interrupt level 1
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094  0004                     _INTERRUPT_InterruptManager:
 11095                           
 11096                           ;incstack = 0
 11097  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11098                           
 11099                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11100  0005  3180               	pagesel	$
 11101  0006                     i1l3749:
 11102                           
 11103                           ;interrupt_manager.c: 19:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 11104  0006  0021               	movlb	1	; select bank1
 11105  0007  1E90               	btfss	16,5	;volatile
 11106  0008  280A               	goto	u136_21
 11107  0009  280B               	goto	u136_20
 11108  000A                     u136_21:
 11109  000A  2814               	goto	i1l723
 11110  000B                     u136_20:
 11111  000B                     i1l3751:
 11112  000B  0020               	movlb	0	; select bank0
 11113  000C  1E90               	btfss	16,5	;volatile
 11114  000D  280F               	goto	u137_21
 11115  000E  2810               	goto	u137_20
 11116  000F                     u137_21:
 11117  000F  2814               	goto	i1l723
 11118  0010                     u137_20:
 11119  0010                     i1l3753:
 11120                           
 11121                           ;interrupt_manager.c: 20:     {;interrupt_manager.c: 21:         TMR0_ISR();
 11122  0010  318C  249F  3180   	fcall	_TMR0_ISR
 11123                           
 11124                           ;interrupt_manager.c: 22:     }
 11125  0013  2872               	goto	i1l737
 11126  0014                     i1l723:	
 11127                           ;interrupt_manager.c: 23:     else if(INTCONbits.PEIE == 1)
 11128                           
 11129  0014  1F0B               	btfss	11,6	;volatile
 11130  0015  2817               	goto	u138_21
 11131  0016  2818               	goto	u138_20
 11132  0017                     u138_21:
 11133  0017  2872               	goto	i1l737
 11134  0018                     u138_20:
 11135  0018                     i1l3755:
 11136                           
 11137                           ;interrupt_manager.c: 24:     {;interrupt_manager.c: 25:         if(PIE4bits.CCP1IE == 1
      +                           && PIR4bits.CCP1IF == 1)
 11138  0018  0021               	movlb	1	; select bank1
 11139  0019  1C14               	btfss	20,0	;volatile
 11140  001A  281C               	goto	u139_21
 11141  001B  281D               	goto	u139_20
 11142  001C                     u139_21:
 11143  001C  2826               	goto	i1l726
 11144  001D                     u139_20:
 11145  001D                     i1l3757:
 11146  001D  0020               	movlb	0	; select bank0
 11147  001E  1C14               	btfss	20,0	;volatile
 11148  001F  2821               	goto	u140_21
 11149  0020  2822               	goto	u140_20
 11150  0021                     u140_21:
 11151  0021  2826               	goto	i1l726
 11152  0022                     u140_20:
 11153  0022                     i1l3759:
 11154                           
 11155                           ;interrupt_manager.c: 26:         {;interrupt_manager.c: 27:             CCP1_CaptureISR
      +                          ();
 11156  0022  318C  245D  3180   	fcall	_CCP1_CaptureISR
 11157                           
 11158                           ;interrupt_manager.c: 28:         }
 11159  0025  2872               	goto	i1l737
 11160  0026                     i1l726:	
 11161                           ;interrupt_manager.c: 29:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF == 1)
 11162                           
 11163  0026  0021               	movlb	1	; select bank1
 11164  0027  1C94               	btfss	20,1	;volatile
 11165  0028  282A               	goto	u141_21
 11166  0029  282B               	goto	u141_20
 11167  002A                     u141_21:
 11168  002A  2834               	goto	i1l728
 11169  002B                     u141_20:
 11170  002B                     i1l3761:
 11171  002B  0020               	movlb	0	; select bank0
 11172  002C  1C94               	btfss	20,1	;volatile
 11173  002D  282F               	goto	u142_21
 11174  002E  2830               	goto	u142_20
 11175  002F                     u142_21:
 11176  002F  2834               	goto	i1l728
 11177  0030                     u142_20:
 11178  0030                     i1l3763:
 11179                           
 11180                           ;interrupt_manager.c: 30:         {;interrupt_manager.c: 31:             CCP2_CaptureISR
      +                          ();
 11181  0030  318C  2473  3180   	fcall	_CCP2_CaptureISR
 11182                           
 11183                           ;interrupt_manager.c: 32:         }
 11184  0033  2872               	goto	i1l737
 11185  0034                     i1l728:	
 11186                           ;interrupt_manager.c: 33:         else if(PIE4bits.CCP3IE == 1 && PIR4bits.CCP3IF == 1)
 11187                           
 11188  0034  0021               	movlb	1	; select bank1
 11189  0035  1D14               	btfss	20,2	;volatile
 11190  0036  2838               	goto	u143_21
 11191  0037  2839               	goto	u143_20
 11192  0038                     u143_21:
 11193  0038  2842               	goto	i1l730
 11194  0039                     u143_20:
 11195  0039                     i1l3765:
 11196  0039  0020               	movlb	0	; select bank0
 11197  003A  1D14               	btfss	20,2	;volatile
 11198  003B  283D               	goto	u144_21
 11199  003C  283E               	goto	u144_20
 11200  003D                     u144_21:
 11201  003D  2842               	goto	i1l730
 11202  003E                     u144_20:
 11203  003E                     i1l3767:
 11204                           
 11205                           ;interrupt_manager.c: 34:         {;interrupt_manager.c: 35:             CCP3_CaptureISR
      +                          ();
 11206  003E  318C  2489  3180   	fcall	_CCP3_CaptureISR
 11207                           
 11208                           ;interrupt_manager.c: 36:         }
 11209  0041  2872               	goto	i1l737
 11210  0042                     i1l730:	
 11211                           ;interrupt_manager.c: 37:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 11212                           
 11213  0042  0021               	movlb	1	; select bank1
 11214  0043  1C11               	btfss	17,0	;volatile
 11215  0044  2846               	goto	u145_21
 11216  0045  2847               	goto	u145_20
 11217  0046                     u145_21:
 11218  0046  2850               	goto	i1l732
 11219  0047                     u145_20:
 11220  0047                     i1l3769:
 11221  0047  0020               	movlb	0	; select bank0
 11222  0048  1C11               	btfss	17,0	;volatile
 11223  0049  284B               	goto	u146_21
 11224  004A  284C               	goto	u146_20
 11225  004B                     u146_21:
 11226  004B  2850               	goto	i1l732
 11227  004C                     u146_20:
 11228  004C                     i1l3771:
 11229                           
 11230                           ;interrupt_manager.c: 38:         {;interrupt_manager.c: 39:             TMR1_ISR();
 11231  004C  318B  23EE  3180   	fcall	_TMR1_ISR
 11232                           
 11233                           ;interrupt_manager.c: 40:         }
 11234  004F  2872               	goto	i1l737
 11235  0050                     i1l732:	
 11236                           ;interrupt_manager.c: 41:         else if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
 11237                           
 11238  0050  0021               	movlb	1	; select bank1
 11239  0051  1E91               	btfss	17,5	;volatile
 11240  0052  2854               	goto	u147_21
 11241  0053  2855               	goto	u147_20
 11242  0054                     u147_21:
 11243  0054  2861               	goto	i1l734
 11244  0055                     u147_20:
 11245  0055                     i1l3773:
 11246  0055  0020               	movlb	0	; select bank0
 11247  0056  1E91               	btfss	17,5	;volatile
 11248  0057  2859               	goto	u148_21
 11249  0058  285A               	goto	u148_20
 11250  0059                     u148_21:
 11251  0059  2861               	goto	i1l734
 11252  005A                     u148_20:
 11253  005A                     i1l3775:
 11254                           
 11255                           ;interrupt_manager.c: 42:         {;interrupt_manager.c: 43:             EUSART_RxDefaul
      +                          tInterruptHandler();
 11256  005A  0021               	movlb	1	; select bank1
 11257  005B  0837               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 11258  005C  008A               	movwf	10
 11259  005D  0836               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 11260  005E  000A               	callw
 11261  005F  3180               	pagesel	$
 11262                           
 11263                           ;interrupt_manager.c: 44:         }
 11264  0060  2872               	goto	i1l737
 11265  0061                     i1l734:	
 11266                           ;interrupt_manager.c: 45:         else if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 11267                           
 11268  0061  0021               	movlb	1	; select bank1
 11269  0062  1E11               	btfss	17,4	;volatile
 11270  0063  2865               	goto	u149_21
 11271  0064  2866               	goto	u149_20
 11272  0065                     u149_21:
 11273  0065  2872               	goto	i1l731
 11274  0066                     u149_20:
 11275  0066                     i1l3777:
 11276  0066  0020               	movlb	0	; select bank0
 11277  0067  1E11               	btfss	17,4	;volatile
 11278  0068  286A               	goto	u150_21
 11279  0069  286B               	goto	u150_20
 11280  006A                     u150_21:
 11281  006A  2872               	goto	i1l731
 11282  006B                     u150_20:
 11283  006B                     i1l3779:
 11284                           
 11285                           ;interrupt_manager.c: 46:         {;interrupt_manager.c: 47:             EUSART_TxDefaul
      +                          tInterruptHandler();
 11286  006B  0021               	movlb	1	; select bank1
 11287  006C  0839               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 11288  006D  008A               	movwf	10
 11289  006E  0838               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 11290  006F  000A               	callw
 11291  0070  3180               	pagesel	$
 11292  0071  2872               	goto	i1l737
 11293  0072                     i1l731:
 11294  0072                     i1l737:
 11295  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11296  0073  0009               	retfie
 11297  0074                     __end_of_INTERRUPT_InterruptManager:
 11298                           
 11299                           	psect	text46
 11300  0BEE                     __ptext46:	
 11301 ;; *************** function _TMR1_ISR *****************
 11302 ;; Defined at:
 11303 ;;		line 129 in file "tmr1.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;		None
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;		None
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  1    wreg      void 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2, status,0, pclath, cstack
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11321 ;;Total ram usage:        0 bytes
 11322 ;; Hardware stack levels used: 1
 11323 ;; Hardware stack levels required when called: 1
 11324 ;; This function calls:
 11325 ;;		_TMR1_WriteTimer
 11326 ;; This function is called by:
 11327 ;;		_INTERRUPT_InterruptManager
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331  0BEE                     _TMR1_ISR:	
 11332                           ;psect for function _TMR1_ISR
 11333                           
 11334  0BEE                     i1l3649:	
 11335                           ;incstack = 0
 11336                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 11337                           
 11338                           
 11339                           ;tmr1.c: 133:     PIR1bits.TMR1IF = 0;
 11340  0BEE  0020               	movlb	0	; select bank0
 11341  0BEF  1011               	bcf	17,0	;volatile
 11342  0BF0                     i1l3651:
 11343                           
 11344                           ;tmr1.c: 134:     TMR1_WriteTimer(timer1ReloadVal);
 11345  0BF0  0021               	movlb	1	; select bank1
 11346  0BF1  083D               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 11347  0BF2  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11348  0BF3  083C               	movf	_timer1ReloadVal^(0+128),w	;volatile
 11349  0BF4  00F0               	movwf	TMR1_WriteTimer@timerVal
 11350  0BF5  318C  2411  318B   	fcall	_TMR1_WriteTimer
 11351  0BF8                     i1l530:
 11352  0BF8  0008               	return
 11353  0BF9                     __end_of_TMR1_ISR:
 11354                           
 11355                           	psect	text47
 11356  0C11                     __ptext47:	
 11357 ;; *************** function _TMR1_WriteTimer *****************
 11358 ;; Defined at:
 11359 ;;		line 84 in file "tmr1.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  timerVal        2    0[COMMON] unsigned short 
 11362 ;; Auto vars:     Size  Location     Type
 11363 ;;		None
 11364 ;; Return value:  Size  Location     Type
 11365 ;;                  1    wreg      void 
 11366 ;; Registers used:
 11367 ;;		wreg, status,2
 11368 ;; Tracked objects:
 11369 ;;		On entry : 0/0
 11370 ;;		On exit  : 0/0
 11371 ;;		Unchanged: 0/0
 11372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;Total ram usage:        2 bytes
 11378 ;; Hardware stack levels used: 1
 11379 ;; This function calls:
 11380 ;;		Nothing
 11381 ;; This function is called by:
 11382 ;;		_TMR1_ISR
 11383 ;;		_TMR1_Reload
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387  0C11                     _TMR1_WriteTimer:	
 11388                           ;psect for function _TMR1_WriteTimer
 11389                           
 11390  0C11                     i1l3457:	
 11391                           ;incstack = 0
 11392                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11393                           
 11394                           
 11395                           ;tmr1.c: 84: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 85: {;tmr1.c: 86:     if (T
      +                          1CONbits.T1SYNC == 1)
 11396  0C11  0020               	movlb	0	; select bank0
 11397  0C12  1D1B               	btfss	27,2	;volatile
 11398  0C13  2C15               	goto	u110_21
 11399  0C14  2C16               	goto	u110_20
 11400  0C15                     u110_21:
 11401  0C15  2C1D               	goto	i1l3467
 11402  0C16                     u110_20:
 11403  0C16                     i1l3459:
 11404                           
 11405                           ;tmr1.c: 87:     {;tmr1.c: 89:         T1CONbits.TMR1ON = 0;
 11406  0C16  101B               	bcf	27,0	;volatile
 11407  0C17                     i1l3461:
 11408                           
 11409                           ;tmr1.c: 92:         TMR1H = (uint8_t)(timerVal >> 8);
 11410  0C17  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11411  0C18  009A               	movwf	26	;volatile
 11412  0C19                     i1l3463:
 11413                           
 11414                           ;tmr1.c: 93:         TMR1L = (uint8_t)timerVal;
 11415  0C19  0870               	movf	TMR1_WriteTimer@timerVal,w
 11416  0C1A  0099               	movwf	25	;volatile
 11417  0C1B                     i1l3465:
 11418                           
 11419                           ;tmr1.c: 96:         T1CONbits.TMR1ON =1;
 11420  0C1B  141B               	bsf	27,0	;volatile
 11421                           
 11422                           ;tmr1.c: 97:     }
 11423  0C1C  2C21               	goto	i1l518
 11424  0C1D                     i1l3467:
 11425                           
 11426                           ;tmr1.c: 99:     {;tmr1.c: 101:         TMR1H = (uint8_t)(timerVal >> 8);
 11427  0C1D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11428  0C1E  009A               	movwf	26	;volatile
 11429  0C1F                     i1l3469:
 11430                           
 11431                           ;tmr1.c: 102:         TMR1L = (uint8_t)timerVal;
 11432  0C1F  0870               	movf	TMR1_WriteTimer@timerVal,w
 11433  0C20  0099               	movwf	25	;volatile
 11434  0C21                     i1l518:
 11435  0C21  0008               	return
 11436  0C22                     __end_of_TMR1_WriteTimer:
 11437                           
 11438                           	psect	text48
 11439  0C9F                     __ptext48:	
 11440 ;; *************** function _TMR0_ISR *****************
 11441 ;; Defined at:
 11442 ;;		line 90 in file "tmr0.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;		None
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;		None
 11447 ;; Return value:  Size  Location     Type
 11448 ;;                  1    wreg      void 
 11449 ;; Registers used:
 11450 ;;		wreg, status,2, status,0, pclath, cstack
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;Total ram usage:        0 bytes
 11461 ;; Hardware stack levels used: 1
 11462 ;; Hardware stack levels required when called: 2
 11463 ;; This function calls:
 11464 ;;		_TMR0_CallBack
 11465 ;; This function is called by:
 11466 ;;		_INTERRUPT_InterruptManager
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470  0C9F                     _TMR0_ISR:	
 11471                           ;psect for function _TMR0_ISR
 11472                           
 11473  0C9F                     i1l3623:	
 11474                           ;incstack = 0
 11475                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11476                           
 11477                           
 11478                           ;tmr0.c: 92:     static volatile uint16_t CountCallBack = 0;;tmr0.c: 95:     PIR0bits.TM
      +                          R0IF = 0;
 11479  0C9F  0020               	movlb	0	; select bank0
 11480  0CA0  1290               	bcf	16,5	;volatile
 11481  0CA1                     i1l3625:
 11482                           
 11483                           ;tmr0.c: 97:     if (++CountCallBack >= 4)
 11484  0CA1  3001               	movlw	1
 11485  0CA2  0021               	movlb	1	; select bank1
 11486  0CA3  07D0               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 11487  0CA4  3000               	movlw	0
 11488  0CA5  3DD1               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 11489  0CA6  3000               	movlw	0
 11490  0CA7  0251               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 11491  0CA8  3004               	movlw	4
 11492  0CA9  1903               	skipnz
 11493  0CAA  0250               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 11494  0CAB  1C03               	skipc
 11495  0CAC  2CAE               	goto	u124_21
 11496  0CAD  2CAF               	goto	u124_20
 11497  0CAE                     u124_21:
 11498  0CAE  2CB5               	goto	i1l342
 11499  0CAF                     u124_20:
 11500  0CAF                     i1l3627:
 11501                           
 11502                           ;tmr0.c: 98:     {;tmr0.c: 100:         TMR0_CallBack();
 11503  0CAF  318B  2374  318C   	fcall	_TMR0_CallBack
 11504  0CB2                     i1l3629:
 11505                           
 11506                           ;tmr0.c: 103:         CountCallBack = 0;
 11507  0CB2  0021               	movlb	1	; select bank1
 11508  0CB3  01D0               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 11509  0CB4  01D1               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 11510  0CB5                     i1l342:
 11511  0CB5  0008               	return
 11512  0CB6                     __end_of_TMR0_ISR:
 11513                           
 11514                           	psect	text49
 11515  0B74                     __ptext49:	
 11516 ;; *************** function _TMR0_CallBack *****************
 11517 ;; Defined at:
 11518 ;;		line 111 in file "tmr0.c"
 11519 ;; Parameters:    Size  Location     Type
 11520 ;;		None
 11521 ;; Auto vars:     Size  Location     Type
 11522 ;;		None
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      void 
 11525 ;; Registers used:
 11526 ;;		wreg, status,2, status,0, pclath, cstack
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11536 ;;Total ram usage:        0 bytes
 11537 ;; Hardware stack levels used: 1
 11538 ;; Hardware stack levels required when called: 1
 11539 ;; This function calls:
 11540 ;;		_FRT_IncMicros
 11541 ;;		_FRT_IncMillis
 11542 ;; This function is called by:
 11543 ;;		_TMR0_ISR
 11544 ;; This function uses a non-reentrant model
 11545 ;;
 11546                           
 11547  0B74                     _TMR0_CallBack:	
 11548                           ;psect for function _TMR0_CallBack
 11549                           
 11550  0B74                     i1l3407:	
 11551                           ;incstack = 0
 11552                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 11553                           
 11554                           
 11555                           ;tmr0.c: 113:     FRT_IncMillis();
 11556  0B74  318B  23E4  318B   	fcall	_FRT_IncMillis
 11557                           
 11558                           ;tmr0.c: 114:     FRT_IncMicros();
 11559  0B77  318B  23DA  318B   	fcall	_FRT_IncMicros
 11560  0B7A                     i1l345:
 11561  0B7A  0008               	return
 11562  0B7B                     __end_of_TMR0_CallBack:
 11563                           
 11564                           	psect	text50
 11565  0BE4                     __ptext50:	
 11566 ;; *************** function _FRT_IncMillis *****************
 11567 ;; Defined at:
 11568 ;;		line 42 in file "FRT.c"
 11569 ;; Parameters:    Size  Location     Type
 11570 ;;		None
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;		None
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  1    wreg      void 
 11575 ;; Registers used:
 11576 ;;		wreg
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;Total ram usage:        0 bytes
 11587 ;; Hardware stack levels used: 1
 11588 ;; This function calls:
 11589 ;;		Nothing
 11590 ;; This function is called by:
 11591 ;;		_TMR0_CallBack
 11592 ;; This function uses a non-reentrant model
 11593 ;;
 11594                           
 11595  0BE4                     _FRT_IncMillis:	
 11596                           ;psect for function _FRT_IncMillis
 11597                           
 11598  0BE4                     i1l3181:	
 11599                           ;incstack = 0
 11600                           ; Regs used in _FRT_IncMillis: [wreg]
 11601                           
 11602                           
 11603                           ;FRT.c: 43:     millis ++;
 11604  0BE4  3001               	movlw	1
 11605  0BE5  0021               	movlb	1	; select bank1
 11606  0BE6  07A0               	addwf	_millis^(0+128),f
 11607  0BE7  3000               	movlw	0
 11608  0BE8  3DA1               	addwfc	(_millis+1)^(0+128),f
 11609  0BE9  3000               	movlw	0
 11610  0BEA  3DA2               	addwfc	(_millis+2)^(0+128),f
 11611  0BEB  3000               	movlw	0
 11612  0BEC  3DA3               	addwfc	(_millis+3)^(0+128),f
 11613  0BED                     i1l810:
 11614  0BED  0008               	return
 11615  0BEE                     __end_of_FRT_IncMillis:
 11616                           
 11617                           	psect	text51
 11618  0BDA                     __ptext51:	
 11619 ;; *************** function _FRT_IncMicros *****************
 11620 ;; Defined at:
 11621 ;;		line 49 in file "FRT.c"
 11622 ;; Parameters:    Size  Location     Type
 11623 ;;		None
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;		None
 11626 ;; Return value:  Size  Location     Type
 11627 ;;                  1    wreg      void 
 11628 ;; Registers used:
 11629 ;;		wreg
 11630 ;; Tracked objects:
 11631 ;;		On entry : 0/0
 11632 ;;		On exit  : 0/0
 11633 ;;		Unchanged: 0/0
 11634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11639 ;;Total ram usage:        0 bytes
 11640 ;; Hardware stack levels used: 1
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_TMR0_CallBack
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648  0BDA                     _FRT_IncMicros:	
 11649                           ;psect for function _FRT_IncMicros
 11650                           
 11651  0BDA                     i1l3185:	
 11652                           ;incstack = 0
 11653                           ; Regs used in _FRT_IncMicros: [wreg]
 11654                           
 11655                           
 11656                           ;FRT.c: 50:     micros += 1000;
 11657  0BDA  30E8               	movlw	232
 11658  0BDB  0022               	movlb	2	; select bank2
 11659  0BDC  07C4               	addwf	_micros@FRT$F1501^(0+256),f
 11660  0BDD  3003               	movlw	3
 11661  0BDE  3DC5               	addwfc	(_micros@FRT$F1501+1)^(0+256),f
 11662  0BDF  3000               	movlw	0
 11663  0BE0  3DC6               	addwfc	(_micros@FRT$F1501+2)^(0+256),f
 11664  0BE1  3000               	movlw	0
 11665  0BE2  3DC7               	addwfc	(_micros@FRT$F1501+3)^(0+256),f
 11666  0BE3                     i1l813:
 11667  0BE3  0008               	return
 11668  0BE4                     __end_of_FRT_IncMicros:
 11669                           
 11670                           	psect	text52
 11671  0D88                     __ptext52:	
 11672 ;; *************** function _EUSART_Transmit_ISR *****************
 11673 ;; Defined at:
 11674 ;;		line 181 in file "eusart.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;		None
 11677 ;; Auto vars:     Size  Location     Type
 11678 ;;		None
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  1    wreg      void 
 11681 ;; Registers used:
 11682 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11683 ;; Tracked objects:
 11684 ;;		On entry : 0/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;Total ram usage:        1 bytes
 11693 ;; Hardware stack levels used: 1
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		_EUSART_Initialize
 11698 ;;		_INTERRUPT_InterruptManager
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702  0D88                     _EUSART_Transmit_ISR:	
 11703                           ;psect for function _EUSART_Transmit_ISR
 11704                           
 11705  0D88                     i1l3675:	
 11706                           ;incstack = 0
 11707                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 11708                           
 11709                           
 11710                           ;eusart.c: 185:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 11711  0D88  3008               	movlw	8
 11712  0D89  0021               	movlb	1	; select bank1
 11713  0D8A  0256               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 11714  0D8B  1803               	skipnc
 11715  0D8C  2D8E               	goto	u127_21
 11716  0D8D  2D8F               	goto	u127_20
 11717  0D8E                     u127_21:
 11718  0D8E  2DA8               	goto	i1l652
 11719  0D8F                     u127_20:
 11720  0D8F                     i1l3677:
 11721                           
 11722                           ;eusart.c: 186:     {;eusart.c: 187:         TX1REG = eusartTxBuffer[eusartTxTail++];
 11723  0D8F  0857               	movf	_eusartTxTail^(0+128),w
 11724  0D90  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 11725  0D91  0086               	movwf	6
 11726  0D92  3001               	movlw	1	; select bank2/3
 11727  0D93  0087               	movwf	7
 11728  0D94  0801               	movf	1,w
 11729  0D95  0023               	movlb	3	; select bank3
 11730  0D96  009A               	movwf	26	;volatile
 11731  0D97                     i1l3679:
 11732  0D97  3001               	movlw	1
 11733  0D98  00F0               	movwf	??_EUSART_Transmit_ISR
 11734  0D99  0870               	movf	??_EUSART_Transmit_ISR,w
 11735  0D9A  0021               	movlb	1	; select bank1
 11736  0D9B  07D7               	addwf	_eusartTxTail^(0+128),f	;volatile
 11737  0D9C                     i1l3681:
 11738                           
 11739                           ;eusart.c: 188:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 11740  0D9C  3008               	movlw	8
 11741  0D9D  0257               	subwf	_eusartTxTail^(0+128),w	;volatile
 11742  0D9E  1C03               	skipc
 11743  0D9F  2DA1               	goto	u128_21
 11744  0DA0  2DA2               	goto	u128_20
 11745  0DA1                     u128_21:
 11746  0DA1  2DA3               	goto	i1l3685
 11747  0DA2                     u128_20:
 11748  0DA2                     i1l3683:
 11749                           
 11750                           ;eusart.c: 189:         {;eusart.c: 190:             eusartTxTail = 0;
 11751  0DA2  01D7               	clrf	_eusartTxTail^(0+128)	;volatile
 11752  0DA3                     i1l3685:
 11753                           
 11754                           ;eusart.c: 192:         eusartTxBufferRemaining++;
 11755  0DA3  3001               	movlw	1
 11756  0DA4  00F0               	movwf	??_EUSART_Transmit_ISR
 11757  0DA5  0870               	movf	??_EUSART_Transmit_ISR,w
 11758  0DA6  07D6               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 11759                           
 11760                           ;eusart.c: 193:     }
 11761  0DA7  2DA9               	goto	i1l655
 11762  0DA8                     i1l652:	
 11763                           ;eusart.c: 194:     else
 11764                           
 11765                           
 11766                           ;eusart.c: 195:     {;eusart.c: 196:         PIE1bits.TXIE = 0;
 11767  0DA8  1211               	bcf	17,4	;volatile
 11768  0DA9                     i1l655:
 11769  0DA9  0008               	return
 11770  0DAA                     __end_of_EUSART_Transmit_ISR:
 11771                           
 11772                           	psect	text53
 11773  0F83                     __ptext53:	
 11774 ;; *************** function _EUSART_Receive_ISR *****************
 11775 ;; Defined at:
 11776 ;;		line 202 in file "eusart.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;		None
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;		None
 11781 ;; Return value:  Size  Location     Type
 11782 ;;                  1    wreg      void 
 11783 ;; Registers used:
 11784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11785 ;; Tracked objects:
 11786 ;;		On entry : 0/0
 11787 ;;		On exit  : 0/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;Total ram usage:        0 bytes
 11795 ;; Hardware stack levels used: 1
 11796 ;; Hardware stack levels required when called: 2
 11797 ;; This function calls:
 11798 ;;		Absolute function
 11799 ;;		_EUSART_DefaultErrorHandler
 11800 ;;		_EUSART_DefaultFramingErrorHandler
 11801 ;;		_EUSART_DefaultOverrunErrorHandler
 11802 ;;		_EUSART_RxDataHandler
 11803 ;; This function is called by:
 11804 ;;		_EUSART_Initialize
 11805 ;;		_INTERRUPT_InterruptManager
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809  0F83                     _EUSART_Receive_ISR:	
 11810                           ;psect for function _EUSART_Receive_ISR
 11811                           
 11812  0F83                     i1l3687:	
 11813                           ;incstack = 0
 11814                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11815                           
 11816                           
 11817                           ;eusart.c: 205:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 11818  0F83  087C               	movf	_eusartRxHead,w	;volatile
 11819  0F84  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11820  0F85  0086               	movwf	6
 11821  0F86  3001               	movlw	1	; select bank2/3
 11822  0F87  0087               	movwf	7
 11823  0F88  0181               	clrf	1
 11824  0F89                     i1l3689:
 11825                           
 11826                           ;eusart.c: 207:     if(RC1STAbits.FERR){
 11827  0F89  0023               	movlb	3	; select bank3
 11828  0F8A  1D1D               	btfss	29,2	;volatile
 11829  0F8B  2F8D               	goto	u129_21
 11830  0F8C  2F8E               	goto	u129_20
 11831  0F8D                     u129_21:
 11832  0F8D  2F9A               	goto	i1l3695
 11833  0F8E                     u129_20:
 11834  0F8E                     i1l3691:
 11835                           
 11836                           ;eusart.c: 208:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 11837  0F8E  087C               	movf	_eusartRxHead,w	;volatile
 11838  0F8F  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11839  0F90  0086               	movwf	6
 11840  0F91  3001               	movlw	1	; select bank2/3
 11841  0F92  0087               	movwf	7
 11842  0F93  1481               	bsf	1,1
 11843  0F94                     i1l3693:
 11844                           
 11845                           ;eusart.c: 209:         EUSART_FramingErrorHandler();
 11846  0F94  0021               	movlb	1	; select bank1
 11847  0F95  0835               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 11848  0F96  008A               	movwf	10
 11849  0F97  0834               	movf	_EUSART_FramingErrorHandler^(0+128),w
 11850  0F98  000A               	callw
 11851  0F99  318F               	pagesel	$
 11852  0F9A                     i1l3695:
 11853                           
 11854                           ;eusart.c: 212:     if(RC1STAbits.OERR){
 11855  0F9A  0023               	movlb	3	; select bank3
 11856  0F9B  1C9D               	btfss	29,1	;volatile
 11857  0F9C  2F9E               	goto	u130_21
 11858  0F9D  2F9F               	goto	u130_20
 11859  0F9E                     u130_21:
 11860  0F9E  2FAB               	goto	i1l3701
 11861  0F9F                     u130_20:
 11862  0F9F                     i1l3697:
 11863                           
 11864                           ;eusart.c: 213:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 11865  0F9F  087C               	movf	_eusartRxHead,w	;volatile
 11866  0FA0  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11867  0FA1  0086               	movwf	6
 11868  0FA2  3001               	movlw	1	; select bank2/3
 11869  0FA3  0087               	movwf	7
 11870  0FA4  1501               	bsf	1,2
 11871  0FA5                     i1l3699:
 11872                           
 11873                           ;eusart.c: 214:         EUSART_OverrunErrorHandler();
 11874  0FA5  0021               	movlb	1	; select bank1
 11875  0FA6  0833               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 11876  0FA7  008A               	movwf	10
 11877  0FA8  0832               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 11878  0FA9  000A               	callw
 11879  0FAA  318F               	pagesel	$
 11880  0FAB                     i1l3701:
 11881                           
 11882                           ;eusart.c: 217:     if(eusartRxStatusBuffer[eusartRxHead].status){
 11883  0FAB  087C               	movf	_eusartRxHead,w	;volatile
 11884  0FAC  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 11885  0FAD  0086               	movwf	6
 11886  0FAE  3001               	movlw	1	; select bank2/3
 11887  0FAF  0087               	movwf	7
 11888  0FB0  0801               	movf	1,w
 11889  0FB1  1903               	btfsc	3,2
 11890  0FB2  2FB4               	goto	u131_21
 11891  0FB3  2FB5               	goto	u131_20
 11892  0FB4                     u131_21:
 11893  0FB4  2FBC               	goto	i1l3705
 11894  0FB5                     u131_20:
 11895  0FB5                     i1l3703:
 11896                           
 11897                           ;eusart.c: 218:         EUSART_ErrorHandler();
 11898  0FB5  0021               	movlb	1	; select bank1
 11899  0FB6  0831               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 11900  0FB7  008A               	movwf	10
 11901  0FB8  0830               	movf	_EUSART_ErrorHandler^(0+128),w
 11902  0FB9  000A               	callw
 11903  0FBA  318F               	pagesel	$
 11904                           
 11905                           ;eusart.c: 219:     } else {
 11906  0FBB  2FBF               	goto	i1l662
 11907  0FBC                     i1l3705:
 11908                           
 11909                           ;eusart.c: 220:         EUSART_RxDataHandler();
 11910  0FBC  318D  2517  318F   	fcall	_EUSART_RxDataHandler
 11911  0FBF                     i1l662:
 11912  0FBF  0008               	return
 11913  0FC0                     __end_of_EUSART_Receive_ISR:
 11914                           
 11915                           	psect	text54
 11916  0B66                     __ptext54:	
 11917 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 11918 ;; Defined at:
 11919 ;;		line 244 in file "eusart.c"
 11920 ;; Parameters:    Size  Location     Type
 11921 ;;		None
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;		None
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  1    wreg      void 
 11926 ;; Registers used:
 11927 ;;		None
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;Total ram usage:        0 bytes
 11938 ;; Hardware stack levels used: 1
 11939 ;; This function calls:
 11940 ;;		Nothing
 11941 ;; This function is called by:
 11942 ;;		_EUSART_Initialize
 11943 ;;		_EUSART_Receive_ISR
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947  0B66                     _EUSART_DefaultOverrunErrorHandler:	
 11948                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 11949                           
 11950  0B66                     i1l3471:	
 11951                           ;incstack = 0
 11952                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 11953                           
 11954                           
 11955                           ;eusart.c: 247:     RC1STAbits.CREN = 0;
 11956  0B66  0023               	movlb	3	; select bank3
 11957  0B67  121D               	bcf	29,4	;volatile
 11958                           
 11959                           ;eusart.c: 248:     RC1STAbits.CREN = 1;
 11960  0B68  161D               	bsf	29,4	;volatile
 11961  0B69                     i1l672:
 11962  0B69  0008               	return
 11963  0B6A                     __end_of_EUSART_DefaultOverrunErrorHandler:
 11964                           
 11965                           	psect	text55
 11966  0003                     __ptext55:	
 11967 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 11968 ;; Defined at:
 11969 ;;		line 240 in file "eusart.c"
 11970 ;; Parameters:    Size  Location     Type
 11971 ;;		None
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;		None
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      void 
 11976 ;; Registers used:
 11977 ;;		None
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11987 ;;Total ram usage:        0 bytes
 11988 ;; Hardware stack levels used: 1
 11989 ;; This function calls:
 11990 ;;		Nothing
 11991 ;; This function is called by:
 11992 ;;		_EUSART_Initialize
 11993 ;;		_EUSART_Receive_ISR
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997  0003                     _EUSART_DefaultFramingErrorHandler:	
 11998                           ;psect for function _EUSART_DefaultFramingErrorHandler
 11999                           
 12000  0003                     i1l669:	
 12001                           ;incstack = 0
 12002                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 12003                           
 12004  0003  0008               	return
 12005  0004                     __end_of_EUSART_DefaultFramingErrorHandler:
 12006                           
 12007                           	psect	text56
 12008  0B62                     __ptext56:	
 12009 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12010 ;; Defined at:
 12011 ;;		line 254 in file "eusart.c"
 12012 ;; Parameters:    Size  Location     Type
 12013 ;;		None
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;		None
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      void 
 12018 ;; Registers used:
 12019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;Total ram usage:        0 bytes
 12030 ;; Hardware stack levels used: 1
 12031 ;; Hardware stack levels required when called: 1
 12032 ;; This function calls:
 12033 ;;		_EUSART_RxDataHandler
 12034 ;; This function is called by:
 12035 ;;		_EUSART_Initialize
 12036 ;;		_EUSART_Receive_ISR
 12037 ;; This function uses a non-reentrant model
 12038 ;;
 12039                           
 12040  0B62                     _EUSART_DefaultErrorHandler:	
 12041                           ;psect for function _EUSART_DefaultErrorHandler
 12042                           
 12043  0B62                     i1l3473:	
 12044                           ;incstack = 0
 12045                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 12046                           
 12047                           
 12048                           ;eusart.c: 255:     EUSART_RxDataHandler();
 12049  0B62  318D  2517  318B   	fcall	_EUSART_RxDataHandler
 12050  0B65                     i1l675:
 12051  0B65  0008               	return
 12052  0B66                     __end_of_EUSART_DefaultErrorHandler:
 12053                           
 12054                           	psect	text57
 12055  0D17                     __ptext57:	
 12056 ;; *************** function _EUSART_RxDataHandler *****************
 12057 ;; Defined at:
 12058 ;;		line 228 in file "eusart.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;		None
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;		None
 12063 ;; Return value:  Size  Location     Type
 12064 ;;                  1    wreg      void 
 12065 ;; Registers used:
 12066 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12067 ;; Tracked objects:
 12068 ;;		On entry : 0/0
 12069 ;;		On exit  : 0/0
 12070 ;;		Unchanged: 0/0
 12071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;Total ram usage:        1 bytes
 12077 ;; Hardware stack levels used: 1
 12078 ;; This function calls:
 12079 ;;		Nothing
 12080 ;; This function is called by:
 12081 ;;		_EUSART_Receive_ISR
 12082 ;;		_EUSART_DefaultErrorHandler
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086  0D17                     _EUSART_RxDataHandler:	
 12087                           ;psect for function _EUSART_RxDataHandler
 12088                           
 12089  0D17                     i1l3189:	
 12090                           ;incstack = 0
 12091                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12092                           
 12093                           
 12094                           ;eusart.c: 230:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 12095  0D17  0023               	movlb	3	; select bank3
 12096  0D18  0819               	movf	25,w	;volatile
 12097  0D19  00F0               	movwf	??_EUSART_RxDataHandler
 12098  0D1A  087C               	movf	_eusartRxHead,w
 12099  0D1B  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 12100  0D1C  0086               	movwf	6
 12101  0D1D  3001               	movlw	1	; select bank2/3
 12102  0D1E  0087               	movwf	7
 12103  0D1F  0870               	movf	??_EUSART_RxDataHandler,w
 12104  0D20  0081               	movwf	1
 12105  0D21                     i1l3191:
 12106  0D21  3001               	movlw	1
 12107  0D22  00F0               	movwf	??_EUSART_RxDataHandler
 12108  0D23  0870               	movf	??_EUSART_RxDataHandler,w
 12109  0D24  07FC               	addwf	_eusartRxHead,f	;volatile
 12110  0D25                     i1l3193:
 12111                           
 12112                           ;eusart.c: 231:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 12113  0D25  3008               	movlw	8
 12114  0D26  027C               	subwf	_eusartRxHead,w	;volatile
 12115  0D27  1C03               	skipc
 12116  0D28  2D2A               	goto	u106_21
 12117  0D29  2D2B               	goto	u106_20
 12118  0D2A                     u106_21:
 12119  0D2A  2D2C               	goto	i1l3197
 12120  0D2B                     u106_20:
 12121  0D2B                     i1l3195:
 12122                           
 12123                           ;eusart.c: 232:     {;eusart.c: 233:         eusartRxHead = 0;
 12124  0D2B  01FC               	clrf	_eusartRxHead	;volatile
 12125  0D2C                     i1l3197:
 12126                           
 12127                           ;eusart.c: 235:     eusartRxCount++;
 12128  0D2C  3001               	movlw	1
 12129  0D2D  00F0               	movwf	??_EUSART_RxDataHandler
 12130  0D2E  0870               	movf	??_EUSART_RxDataHandler,w
 12131  0D2F  0021               	movlb	1	; select bank1
 12132  0D30  07D5               	addwf	_eusartRxCount^(0+128),f	;volatile
 12133  0D31                     i1l666:
 12134  0D31  0008               	return
 12135  0D32                     __end_of_EUSART_RxDataHandler:
 12136                           
 12137                           	psect	text58
 12138  0C89                     __ptext58:	
 12139 ;; *************** function _CCP3_CaptureISR *****************
 12140 ;; Defined at:
 12141 ;;		line 76 in file "ccp3.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;		None
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;  module          2    9[COMMON] struct CCPR3Reg_tag
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1    wreg      void 
 12148 ;; Registers used:
 12149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;Total ram usage:        3 bytes
 12160 ;; Hardware stack levels used: 1
 12161 ;; Hardware stack levels required when called: 2
 12162 ;; This function calls:
 12163 ;;		Absolute function
 12164 ;;		_CCP3_DefaultCallBack
 12165 ;; This function is called by:
 12166 ;;		_INTERRUPT_InterruptManager
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170  0C89                     _CCP3_CaptureISR:	
 12171                           ;psect for function _CCP3_CaptureISR
 12172                           
 12173  0C89                     i1l3643:	
 12174                           ;incstack = 0
 12175                           ; Regs used in _CCP3_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12176                           
 12177                           
 12178                           ;ccp3.c: 78:     CCP3_PERIOD_REG_T module;;ccp3.c: 81:     PIR4bits.CCP3IF = 0;
 12179  0C89  0020               	movlb	0	; select bank0
 12180  0C8A  1114               	bcf	20,2	;volatile
 12181  0C8B                     i1l3645:
 12182                           
 12183                           ;ccp3.c: 84:     module.ccpr3l = CCPR3L;
 12184  0C8B  0026               	movlb	6	; select bank6
 12185  0C8C  0811               	movf	17,w	;volatile
 12186  0C8D  00F8               	movwf	??_CCP3_CaptureISR
 12187  0C8E  0878               	movf	??_CCP3_CaptureISR,w
 12188  0C8F  00F9               	movwf	CCP3_CaptureISR@module
 12189                           
 12190                           ;ccp3.c: 85:     module.ccpr3h = CCPR3H;
 12191  0C90  0812               	movf	18,w	;volatile
 12192  0C91  00F8               	movwf	??_CCP3_CaptureISR
 12193  0C92  0878               	movf	??_CCP3_CaptureISR,w
 12194  0C93  00FA               	movwf	CCP3_CaptureISR@module+1
 12195  0C94                     i1l3647:
 12196                           
 12197                           ;ccp3.c: 88:     CCP3_CallBack(module.ccpr3_16Bit);
 12198  0C94  087A               	movf	CCP3_CaptureISR@module+1,w
 12199  0C95  00F4               	movwf	CCP3_DefaultCallBack@capturedValue+1
 12200  0C96  0879               	movf	CCP3_CaptureISR@module,w
 12201  0C97  00F3               	movwf	CCP3_DefaultCallBack@capturedValue
 12202  0C98  0021               	movlb	1	; select bank1
 12203  0C99  0843               	movf	(_CCP3_CallBack+1)^(0+128),w
 12204  0C9A  008A               	movwf	10
 12205  0C9B  0842               	movf	_CCP3_CallBack^(0+128),w
 12206  0C9C  000A               	callw
 12207  0C9D  318C               	pagesel	$
 12208  0C9E                     i1l474:
 12209  0C9E  0008               	return
 12210  0C9F                     __end_of_CCP3_CaptureISR:
 12211                           
 12212                           	psect	text59
 12213  0F0F                     __ptext59:	
 12214 ;; *************** function _CCP3_DefaultCallBack *****************
 12215 ;; Defined at:
 12216 ;;		line 28 in file "ccp3.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;  capturedValu    2    3[COMMON] unsigned short 
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;		None
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      void 
 12223 ;; Registers used:
 12224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12232 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12233 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12234 ;;Total ram usage:        5 bytes
 12235 ;; Hardware stack levels used: 1
 12236 ;; Hardware stack levels required when called: 1
 12237 ;; This function calls:
 12238 ;;		_JSN_GetLastTrig
 12239 ;;		_ReadPin
 12240 ;; This function is called by:
 12241 ;;		_CCP3_Initialize
 12242 ;;		_CCP3_CaptureISR
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246  0F0F                     _CCP3_DefaultCallBack:	
 12247                           ;psect for function _CCP3_DefaultCallBack
 12248                           
 12249  0F0F                     i1l3441:	
 12250                           ;incstack = 0
 12251                           ; Regs used in _CCP3_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12252                           
 12253                           
 12254                           ;ccp3.c: 28: static void CCP3_DefaultCallBack(uint16_t capturedValue);ccp3.c: 29: {;ccp3
      +                          .c: 30:     switch(ReadPin(JSN_GetLastTrig()->echoPin)) {
 12255  0F0F  2F2D               	goto	i1l3451
 12256  0F10                     i1l3443:
 12257                           
 12258                           ;ccp3.c: 33:             ticksUp = capturedValue;
 12259  0F10  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 12260  0F11  0021               	movlb	1	; select bank1
 12261  0F12  00C1               	movwf	(_ticksUp@ccp3$F975+1)^(0+128)
 12262  0F13  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 12263  0F14  00C0               	movwf	_ticksUp@ccp3$F975^(0+128)
 12264                           
 12265                           ;ccp3.c: 34:             break;
 12266  0F15  2F48               	goto	i1l468
 12267  0F16                     i1l3445:
 12268                           
 12269                           ;ccp3.c: 37:             ticksDown = capturedValue;
 12270  0F16  0874               	movf	CCP3_DefaultCallBack@capturedValue+1,w
 12271  0F17  0021               	movlb	1	; select bank1
 12272  0F18  00BF               	movwf	(_ticksDown@ccp3$F976+1)^(0+128)
 12273  0F19  0873               	movf	CCP3_DefaultCallBack@capturedValue,w
 12274  0F1A  00BE               	movwf	_ticksDown@ccp3$F976^(0+128)
 12275  0F1B                     i1l3447:
 12276                           
 12277                           ;ccp3.c: 38:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp)>>1);
 12278  0F1B  0840               	movf	_ticksUp@ccp3$F975^(0+128),w
 12279  0F1C  023E               	subwf	_ticksDown@ccp3$F976^(0+128),w
 12280  0F1D  00F5               	movwf	??_CCP3_DefaultCallBack
 12281  0F1E  0841               	movf	(_ticksUp@ccp3$F975+1)^(0+128),w
 12282  0F1F  3B3F               	subwfb	(_ticksDown@ccp3$F976+1)^(0+128),w
 12283  0F20  00F6               	movwf	??_CCP3_DefaultCallBack+1
 12284  0F21  36F6               	lsrf	??_CCP3_DefaultCallBack+1,f
 12285  0F22  0CF5               	rrf	??_CCP3_DefaultCallBack,f
 12286  0F23  318B  235F  318F   	fcall	_JSN_GetLastTrig
 12287  0F26  0086               	movwf	6
 12288  0F27  0187               	clrf	7
 12289  0F28  0875               	movf	??_CCP3_DefaultCallBack,w
 12290  0F29  3FC0               	movwi [0]fsr1
 12291  0F2A  0876               	movf	??_CCP3_DefaultCallBack+1,w
 12292  0F2B  3FC1               	movwi [1]fsr1
 12293                           
 12294                           ;ccp3.c: 39:             break;
 12295  0F2C  2F48               	goto	i1l468
 12296  0F2D                     i1l3451:
 12297  0F2D  318B  235F  318F   	fcall	_JSN_GetLastTrig
 12298  0F30  00F5               	movwf	??_CCP3_DefaultCallBack
 12299  0F31  3005               	movlw	5
 12300  0F32  0775               	addwf	??_CCP3_DefaultCallBack,w
 12301  0F33  0086               	movwf	6
 12302  0F34  0187               	clrf	7
 12303  0F35  0801               	movf	1,w
 12304  0F36  3184  2455  318F   	fcall	_ReadPin
 12305  0F39  00F6               	movwf	??_CCP3_DefaultCallBack+1
 12306  0F3A  01F7               	clrf	??_CCP3_DefaultCallBack+2
 12307                           
 12308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12309                           ; Switch size 1, requested type "simple"
 12310                           ; Number of cases is 1, Range of values is 0 to 0
 12311                           ; switch strategies available:
 12312                           ; Name         Instructions Cycles
 12313                           ; simple_byte            4     3 (average)
 12314                           ; direct_byte            8     6 (fixed)
 12315                           ; jumptable            260     6 (fixed)
 12316                           ;	Chosen strategy is simple_byte
 12317  0F3B  0877               	movf	??_CCP3_DefaultCallBack+2,w
 12318  0F3C  3A00               	xorlw	0	; case 0
 12319  0F3D  1903               	skipnz
 12320  0F3E  2F40               	goto	i1l3989
 12321  0F3F  2F48               	goto	i1l468
 12322  0F40                     i1l3989:
 12323                           
 12324                           ; Switch size 1, requested type "simple"
 12325                           ; Number of cases is 2, Range of values is 0 to 1
 12326                           ; switch strategies available:
 12327                           ; Name         Instructions Cycles
 12328                           ; simple_byte            7     4 (average)
 12329                           ; direct_byte           10     6 (fixed)
 12330                           ; jumptable            260     6 (fixed)
 12331                           ;	Chosen strategy is simple_byte
 12332  0F40  0876               	movf	??_CCP3_DefaultCallBack+1,w
 12333  0F41  3A00               	xorlw	0	; case 0
 12334  0F42  1903               	skipnz
 12335  0F43  2F16               	goto	i1l3445
 12336  0F44  3A01               	xorlw	1	; case 1
 12337  0F45  1903               	skipnz
 12338  0F46  2F10               	goto	i1l3443
 12339  0F47  2F48               	goto	i1l468
 12340  0F48                     i1l468:
 12341  0F48  0008               	return
 12342  0F49                     __end_of_CCP3_DefaultCallBack:
 12343                           
 12344                           	psect	text60
 12345  0C73                     __ptext60:	
 12346 ;; *************** function _CCP2_CaptureISR *****************
 12347 ;; Defined at:
 12348 ;;		line 76 in file "ccp2.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  module          2    9[COMMON] struct CCPR2Reg_tag
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12366 ;;Total ram usage:        3 bytes
 12367 ;; Hardware stack levels used: 1
 12368 ;; Hardware stack levels required when called: 2
 12369 ;; This function calls:
 12370 ;;		Absolute function
 12371 ;;		_CCP2_DefaultCallBack
 12372 ;; This function is called by:
 12373 ;;		_INTERRUPT_InterruptManager
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377  0C73                     _CCP2_CaptureISR:	
 12378                           ;psect for function _CCP2_CaptureISR
 12379                           
 12380  0C73                     i1l3637:	
 12381                           ;incstack = 0
 12382                           ; Regs used in _CCP2_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12383                           
 12384                           
 12385                           ;ccp2.c: 78:     CCP2_PERIOD_REG_T module;;ccp2.c: 81:     PIR4bits.CCP2IF = 0;
 12386  0C73  0020               	movlb	0	; select bank0
 12387  0C74  1094               	bcf	20,1	;volatile
 12388  0C75                     i1l3639:
 12389                           
 12390                           ;ccp2.c: 84:     module.ccpr2l = CCPR2L;
 12391  0C75  0025               	movlb	5	; select bank5
 12392  0C76  0815               	movf	21,w	;volatile
 12393  0C77  00F8               	movwf	??_CCP2_CaptureISR
 12394  0C78  0878               	movf	??_CCP2_CaptureISR,w
 12395  0C79  00F9               	movwf	CCP2_CaptureISR@module
 12396                           
 12397                           ;ccp2.c: 85:     module.ccpr2h = CCPR2H;
 12398  0C7A  0816               	movf	22,w	;volatile
 12399  0C7B  00F8               	movwf	??_CCP2_CaptureISR
 12400  0C7C  0878               	movf	??_CCP2_CaptureISR,w
 12401  0C7D  00FA               	movwf	CCP2_CaptureISR@module+1
 12402  0C7E                     i1l3641:
 12403                           
 12404                           ;ccp2.c: 88:     CCP2_CallBack(module.ccpr2_16Bit);
 12405  0C7E  087A               	movf	CCP2_CaptureISR@module+1,w
 12406  0C7F  00F4               	movwf	CCP2_DefaultCallBack@capturedValue+1
 12407  0C80  0879               	movf	CCP2_CaptureISR@module,w
 12408  0C81  00F3               	movwf	CCP2_DefaultCallBack@capturedValue
 12409  0C82  0021               	movlb	1	; select bank1
 12410  0C83  0849               	movf	(_CCP2_CallBack+1)^(0+128),w
 12411  0C84  008A               	movwf	10
 12412  0C85  0848               	movf	_CCP2_CallBack^(0+128),w
 12413  0C86  000A               	callw
 12414  0C87  318C               	pagesel	$
 12415  0C88                     i1l432:
 12416  0C88  0008               	return
 12417  0C89                     __end_of_CCP2_CaptureISR:
 12418                           
 12419                           	psect	text61
 12420  0ED5                     __ptext61:	
 12421 ;; *************** function _CCP2_DefaultCallBack *****************
 12422 ;; Defined at:
 12423 ;;		line 28 in file "ccp2.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;  capturedValu    2    3[COMMON] unsigned short 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;		None
 12428 ;; Return value:  Size  Location     Type
 12429 ;;                  1    wreg      void 
 12430 ;; Registers used:
 12431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;Total ram usage:        5 bytes
 12442 ;; Hardware stack levels used: 1
 12443 ;; Hardware stack levels required when called: 1
 12444 ;; This function calls:
 12445 ;;		_JSN_GetLastTrig
 12446 ;;		_ReadPin
 12447 ;; This function is called by:
 12448 ;;		_CCP2_Initialize
 12449 ;;		_CCP2_CaptureISR
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453  0ED5                     _CCP2_DefaultCallBack:	
 12454                           ;psect for function _CCP2_DefaultCallBack
 12455                           
 12456  0ED5                     i1l3425:	
 12457                           ;incstack = 0
 12458                           ; Regs used in _CCP2_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12459                           
 12460                           
 12461                           ;ccp2.c: 28: static void CCP2_DefaultCallBack(uint16_t capturedValue);ccp2.c: 29: {;ccp2
      +                          .c: 30:     switch(ReadPin(JSN_GetLastTrig()->echoPin)) {
 12462  0ED5  2EF3               	goto	i1l3435
 12463  0ED6                     i1l3427:
 12464                           
 12465                           ;ccp2.c: 33:             ticksUp = capturedValue;
 12466  0ED6  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 12467  0ED7  0021               	movlb	1	; select bank1
 12468  0ED8  00C7               	movwf	(_ticksUp@ccp2$F860+1)^(0+128)
 12469  0ED9  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 12470  0EDA  00C6               	movwf	_ticksUp@ccp2$F860^(0+128)
 12471                           
 12472                           ;ccp2.c: 34:             break;
 12473  0EDB  2F0E               	goto	i1l426
 12474  0EDC                     i1l3429:
 12475                           
 12476                           ;ccp2.c: 37:             ticksDown = capturedValue;
 12477  0EDC  0874               	movf	CCP2_DefaultCallBack@capturedValue+1,w
 12478  0EDD  0021               	movlb	1	; select bank1
 12479  0EDE  00C5               	movwf	(_ticksDown@ccp2$F861+1)^(0+128)
 12480  0EDF  0873               	movf	CCP2_DefaultCallBack@capturedValue,w
 12481  0EE0  00C4               	movwf	_ticksDown@ccp2$F861^(0+128)
 12482  0EE1                     i1l3431:
 12483                           
 12484                           ;ccp2.c: 38:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp)>>1);
 12485  0EE1  0846               	movf	_ticksUp@ccp2$F860^(0+128),w
 12486  0EE2  0244               	subwf	_ticksDown@ccp2$F861^(0+128),w
 12487  0EE3  00F5               	movwf	??_CCP2_DefaultCallBack
 12488  0EE4  0847               	movf	(_ticksUp@ccp2$F860+1)^(0+128),w
 12489  0EE5  3B45               	subwfb	(_ticksDown@ccp2$F861+1)^(0+128),w
 12490  0EE6  00F6               	movwf	??_CCP2_DefaultCallBack+1
 12491  0EE7  36F6               	lsrf	??_CCP2_DefaultCallBack+1,f
 12492  0EE8  0CF5               	rrf	??_CCP2_DefaultCallBack,f
 12493  0EE9  318B  235F  318E   	fcall	_JSN_GetLastTrig
 12494  0EEC  0086               	movwf	6
 12495  0EED  0187               	clrf	7
 12496  0EEE  0875               	movf	??_CCP2_DefaultCallBack,w
 12497  0EEF  3FC0               	movwi [0]fsr1
 12498  0EF0  0876               	movf	??_CCP2_DefaultCallBack+1,w
 12499  0EF1  3FC1               	movwi [1]fsr1
 12500                           
 12501                           ;ccp2.c: 39:             break;
 12502  0EF2  2F0E               	goto	i1l426
 12503  0EF3                     i1l3435:
 12504  0EF3  318B  235F  318E   	fcall	_JSN_GetLastTrig
 12505  0EF6  00F5               	movwf	??_CCP2_DefaultCallBack
 12506  0EF7  3005               	movlw	5
 12507  0EF8  0775               	addwf	??_CCP2_DefaultCallBack,w
 12508  0EF9  0086               	movwf	6
 12509  0EFA  0187               	clrf	7
 12510  0EFB  0801               	movf	1,w
 12511  0EFC  3184  2455  318E   	fcall	_ReadPin
 12512  0EFF  00F6               	movwf	??_CCP2_DefaultCallBack+1
 12513  0F00  01F7               	clrf	??_CCP2_DefaultCallBack+2
 12514                           
 12515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12516                           ; Switch size 1, requested type "simple"
 12517                           ; Number of cases is 1, Range of values is 0 to 0
 12518                           ; switch strategies available:
 12519                           ; Name         Instructions Cycles
 12520                           ; simple_byte            4     3 (average)
 12521                           ; direct_byte            8     6 (fixed)
 12522                           ; jumptable            260     6 (fixed)
 12523                           ;	Chosen strategy is simple_byte
 12524  0F01  0877               	movf	??_CCP2_DefaultCallBack+2,w
 12525  0F02  3A00               	xorlw	0	; case 0
 12526  0F03  1903               	skipnz
 12527  0F04  2F06               	goto	i1l3991
 12528  0F05  2F0E               	goto	i1l426
 12529  0F06                     i1l3991:
 12530                           
 12531                           ; Switch size 1, requested type "simple"
 12532                           ; Number of cases is 2, Range of values is 0 to 1
 12533                           ; switch strategies available:
 12534                           ; Name         Instructions Cycles
 12535                           ; simple_byte            7     4 (average)
 12536                           ; direct_byte           10     6 (fixed)
 12537                           ; jumptable            260     6 (fixed)
 12538                           ;	Chosen strategy is simple_byte
 12539  0F06  0876               	movf	??_CCP2_DefaultCallBack+1,w
 12540  0F07  3A00               	xorlw	0	; case 0
 12541  0F08  1903               	skipnz
 12542  0F09  2EDC               	goto	i1l3429
 12543  0F0A  3A01               	xorlw	1	; case 1
 12544  0F0B  1903               	skipnz
 12545  0F0C  2ED6               	goto	i1l3427
 12546  0F0D  2F0E               	goto	i1l426
 12547  0F0E                     i1l426:
 12548  0F0E  0008               	return
 12549  0F0F                     __end_of_CCP2_DefaultCallBack:
 12550                           
 12551                           	psect	text62
 12552  0C5D                     __ptext62:	
 12553 ;; *************** function _CCP1_CaptureISR *****************
 12554 ;; Defined at:
 12555 ;;		line 76 in file "ccp1.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;		None
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;  module          2    9[COMMON] struct CCPR1Reg_tag
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  1    wreg      void 
 12562 ;; Registers used:
 12563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/0
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12572 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12573 ;;Total ram usage:        3 bytes
 12574 ;; Hardware stack levels used: 1
 12575 ;; Hardware stack levels required when called: 2
 12576 ;; This function calls:
 12577 ;;		Absolute function
 12578 ;;		_CCP1_DefaultCallBack
 12579 ;; This function is called by:
 12580 ;;		_INTERRUPT_InterruptManager
 12581 ;; This function uses a non-reentrant model
 12582 ;;
 12583                           
 12584  0C5D                     _CCP1_CaptureISR:	
 12585                           ;psect for function _CCP1_CaptureISR
 12586                           
 12587  0C5D                     i1l3631:	
 12588                           ;incstack = 0
 12589                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12590                           
 12591                           
 12592                           ;ccp1.c: 78:     CCP1_PERIOD_REG_T module;;ccp1.c: 81:     PIR4bits.CCP1IF = 0;
 12593  0C5D  0020               	movlb	0	; select bank0
 12594  0C5E  1014               	bcf	20,0	;volatile
 12595  0C5F                     i1l3633:
 12596                           
 12597                           ;ccp1.c: 84:     module.ccpr1l = CCPR1L;
 12598  0C5F  0025               	movlb	5	; select bank5
 12599  0C60  0811               	movf	17,w	;volatile
 12600  0C61  00F8               	movwf	??_CCP1_CaptureISR
 12601  0C62  0878               	movf	??_CCP1_CaptureISR,w
 12602  0C63  00F9               	movwf	CCP1_CaptureISR@module
 12603                           
 12604                           ;ccp1.c: 85:     module.ccpr1h = CCPR1H;
 12605  0C64  0812               	movf	18,w	;volatile
 12606  0C65  00F8               	movwf	??_CCP1_CaptureISR
 12607  0C66  0878               	movf	??_CCP1_CaptureISR,w
 12608  0C67  00FA               	movwf	CCP1_CaptureISR@module+1
 12609  0C68                     i1l3635:
 12610                           
 12611                           ;ccp1.c: 88:     CCP1_CallBack(module.ccpr1_16Bit);
 12612  0C68  087A               	movf	CCP1_CaptureISR@module+1,w
 12613  0C69  00F4               	movwf	CCP1_DefaultCallBack@capturedValue+1
 12614  0C6A  0879               	movf	CCP1_CaptureISR@module,w
 12615  0C6B  00F3               	movwf	CCP1_DefaultCallBack@capturedValue
 12616  0C6C  0021               	movlb	1	; select bank1
 12617  0C6D  084F               	movf	(_CCP1_CallBack+1)^(0+128),w
 12618  0C6E  008A               	movwf	10
 12619  0C6F  084E               	movf	_CCP1_CallBack^(0+128),w
 12620  0C70  000A               	callw
 12621  0C71  318C               	pagesel	$
 12622  0C72                     i1l390:
 12623  0C72  0008               	return
 12624  0C73                     __end_of_CCP1_CaptureISR:
 12625                           
 12626                           	psect	text63
 12627  0E9B                     __ptext63:	
 12628 ;; *************** function _CCP1_DefaultCallBack *****************
 12629 ;; Defined at:
 12630 ;;		line 28 in file "ccp1.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  capturedValu    2    3[COMMON] unsigned short 
 12633 ;; Auto vars:     Size  Location     Type
 12634 ;;		None
 12635 ;; Return value:  Size  Location     Type
 12636 ;;                  1    wreg      void 
 12637 ;; Registers used:
 12638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12639 ;; Tracked objects:
 12640 ;;		On entry : 0/0
 12641 ;;		On exit  : 0/0
 12642 ;;		Unchanged: 0/0
 12643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12646 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12647 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12648 ;;Total ram usage:        5 bytes
 12649 ;; Hardware stack levels used: 1
 12650 ;; Hardware stack levels required when called: 1
 12651 ;; This function calls:
 12652 ;;		_JSN_GetLastTrig
 12653 ;;		_ReadPin
 12654 ;; This function is called by:
 12655 ;;		_CCP1_Initialize
 12656 ;;		_CCP1_CaptureISR
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660  0E9B                     _CCP1_DefaultCallBack:	
 12661                           ;psect for function _CCP1_DefaultCallBack
 12662                           
 12663  0E9B                     i1l3409:	
 12664                           ;incstack = 0
 12665                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12666                           
 12667                           
 12668                           ;ccp1.c: 28: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 29: {;ccp1
      +                          .c: 30:     switch(ReadPin(JSN_GetLastTrig()->echoPin)) {
 12669  0E9B  2EB9               	goto	i1l3419
 12670  0E9C                     i1l3411:
 12671                           
 12672                           ;ccp1.c: 33:             ticksUp = capturedValue;
 12673  0E9C  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12674  0E9D  0021               	movlb	1	; select bank1
 12675  0E9E  00CD               	movwf	(_ticksUp+1)^(0+128)
 12676  0E9F  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 12677  0EA0  00CC               	movwf	_ticksUp^(0+128)
 12678                           
 12679                           ;ccp1.c: 34:             break;
 12680  0EA1  2ED4               	goto	i1l384
 12681  0EA2                     i1l3413:
 12682                           
 12683                           ;ccp1.c: 37:             ticksDown = capturedValue;
 12684  0EA2  0874               	movf	CCP1_DefaultCallBack@capturedValue+1,w
 12685  0EA3  0021               	movlb	1	; select bank1
 12686  0EA4  00CB               	movwf	(_ticksDown+1)^(0+128)
 12687  0EA5  0873               	movf	CCP1_DefaultCallBack@capturedValue,w
 12688  0EA6  00CA               	movwf	_ticksDown^(0+128)
 12689  0EA7                     i1l3415:
 12690                           
 12691                           ;ccp1.c: 38:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp)>>1);
 12692  0EA7  084C               	movf	_ticksUp^(0+128),w
 12693  0EA8  024A               	subwf	_ticksDown^(0+128),w
 12694  0EA9  00F5               	movwf	??_CCP1_DefaultCallBack
 12695  0EAA  084D               	movf	(_ticksUp+1)^(0+128),w
 12696  0EAB  3B4B               	subwfb	(_ticksDown+1)^(0+128),w
 12697  0EAC  00F6               	movwf	??_CCP1_DefaultCallBack+1
 12698  0EAD  36F6               	lsrf	??_CCP1_DefaultCallBack+1,f
 12699  0EAE  0CF5               	rrf	??_CCP1_DefaultCallBack,f
 12700  0EAF  318B  235F  318E   	fcall	_JSN_GetLastTrig
 12701  0EB2  0086               	movwf	6
 12702  0EB3  0187               	clrf	7
 12703  0EB4  0875               	movf	??_CCP1_DefaultCallBack,w
 12704  0EB5  3FC0               	movwi [0]fsr1
 12705  0EB6  0876               	movf	??_CCP1_DefaultCallBack+1,w
 12706  0EB7  3FC1               	movwi [1]fsr1
 12707                           
 12708                           ;ccp1.c: 39:             break;
 12709  0EB8  2ED4               	goto	i1l384
 12710  0EB9                     i1l3419:
 12711  0EB9  318B  235F  318E   	fcall	_JSN_GetLastTrig
 12712  0EBC  00F5               	movwf	??_CCP1_DefaultCallBack
 12713  0EBD  3005               	movlw	5
 12714  0EBE  0775               	addwf	??_CCP1_DefaultCallBack,w
 12715  0EBF  0086               	movwf	6
 12716  0EC0  0187               	clrf	7
 12717  0EC1  0801               	movf	1,w
 12718  0EC2  3184  2455  318E   	fcall	_ReadPin
 12719  0EC5  00F6               	movwf	??_CCP1_DefaultCallBack+1
 12720  0EC6  01F7               	clrf	??_CCP1_DefaultCallBack+2
 12721                           
 12722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12723                           ; Switch size 1, requested type "simple"
 12724                           ; Number of cases is 1, Range of values is 0 to 0
 12725                           ; switch strategies available:
 12726                           ; Name         Instructions Cycles
 12727                           ; simple_byte            4     3 (average)
 12728                           ; direct_byte            8     6 (fixed)
 12729                           ; jumptable            260     6 (fixed)
 12730                           ;	Chosen strategy is simple_byte
 12731  0EC7  0877               	movf	??_CCP1_DefaultCallBack+2,w
 12732  0EC8  3A00               	xorlw	0	; case 0
 12733  0EC9  1903               	skipnz
 12734  0ECA  2ECC               	goto	i1l3993
 12735  0ECB  2ED4               	goto	i1l384
 12736  0ECC                     i1l3993:
 12737                           
 12738                           ; Switch size 1, requested type "simple"
 12739                           ; Number of cases is 2, Range of values is 0 to 1
 12740                           ; switch strategies available:
 12741                           ; Name         Instructions Cycles
 12742                           ; simple_byte            7     4 (average)
 12743                           ; direct_byte           10     6 (fixed)
 12744                           ; jumptable            260     6 (fixed)
 12745                           ;	Chosen strategy is simple_byte
 12746  0ECC  0876               	movf	??_CCP1_DefaultCallBack+1,w
 12747  0ECD  3A00               	xorlw	0	; case 0
 12748  0ECE  1903               	skipnz
 12749  0ECF  2EA2               	goto	i1l3413
 12750  0ED0  3A01               	xorlw	1	; case 1
 12751  0ED1  1903               	skipnz
 12752  0ED2  2E9C               	goto	i1l3411
 12753  0ED3  2ED4               	goto	i1l384
 12754  0ED4                     i1l384:
 12755  0ED4  0008               	return
 12756  0ED5                     __end_of_CCP1_DefaultCallBack:
 12757                           
 12758                           	psect	text64
 12759  0455                     __ptext64:	
 12760 ;; *************** function _ReadPin *****************
 12761 ;; Defined at:
 12762 ;;		line 132 in file "PIC16Xpress_DevBoard.c"
 12763 ;; Parameters:    Size  Location     Type
 12764 ;;  pin             1    wreg     enum E7110
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;  pin             1    2[COMMON] enum E7110
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  1    wreg      unsigned char 
 12769 ;; Registers used:
 12770 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;Total ram usage:        3 bytes
 12781 ;; Hardware stack levels used: 1
 12782 ;; This function calls:
 12783 ;;		Nothing
 12784 ;; This function is called by:
 12785 ;;		_CCP1_DefaultCallBack
 12786 ;;		_CCP2_DefaultCallBack
 12787 ;;		_CCP3_DefaultCallBack
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791  0455                     _ReadPin:	
 12792                           ;psect for function _ReadPin
 12793                           
 12794                           
 12795                           ;incstack = 0
 12796                           ; Regs used in _ReadPin: [wreg-fsr0h+status,2+status,0]
 12797                           ;ReadPin@pin stored from wreg
 12798  0455  00F2               	movwf	ReadPin@pin
 12799  0456                     i1l2933:
 12800                           
 12801                           ;PIC16Xpress_DevBoard.c: 133:     switch(pin) {
 12802  0456  2CAB               	goto	i1l3013
 12803  0457                     i1l2935:
 12804                           
 12805                           ;PIC16Xpress_DevBoard.c: 135:             return PORTAbits.RA5;
 12806  0457  0020               	movlb	0	; select bank0
 12807  0458  0E0C               	swapf	12,w	;volatile
 12808  0459  0C89               	rrf	9,f
 12809  045A  3901               	andlw	1
 12810  045B  2CEB               	goto	i1l188
 12811  045C                     i1l2939:
 12812                           
 12813                           ;PIC16Xpress_DevBoard.c: 137:             return PORTAbits.RA4;
 12814  045C  0020               	movlb	0	; select bank0
 12815  045D  0E0C               	swapf	12,w	;volatile
 12816  045E  3901               	andlw	1
 12817  045F  2CEB               	goto	i1l188
 12818  0460                     i1l2943:
 12819                           
 12820                           ;PIC16Xpress_DevBoard.c: 139:             return 0xFF;
 12821  0460  30FF               	movlw	255
 12822  0461  2CEB               	goto	i1l188
 12823  0462                     i1l2947:
 12824                           
 12825                           ;PIC16Xpress_DevBoard.c: 141:             return PORTCbits.RC5;
 12826  0462  0020               	movlb	0	; select bank0
 12827  0463  0E0E               	swapf	14,w	;volatile
 12828  0464  0C89               	rrf	9,f
 12829  0465  3901               	andlw	1
 12830  0466  2CEB               	goto	i1l188
 12831  0467                     i1l2951:
 12832                           
 12833                           ;PIC16Xpress_DevBoard.c: 143:             return PORTCbits.RC4;
 12834  0467  0020               	movlb	0	; select bank0
 12835  0468  0E0E               	swapf	14,w	;volatile
 12836  0469  3901               	andlw	1
 12837  046A  2CEB               	goto	i1l188
 12838  046B                     i1l2955:
 12839                           
 12840                           ;PIC16Xpress_DevBoard.c: 145:             return PORTCbits.RC3;
 12841  046B  0020               	movlb	0	; select bank0
 12842  046C  0C0E               	rrf	14,w	;volatile
 12843  046D  00F0               	movwf	??_ReadPin
 12844  046E  0CF0               	rrf	??_ReadPin,f
 12845  046F  0C70               	rrf	??_ReadPin,w
 12846  0470  3901               	andlw	1
 12847  0471  2CEB               	goto	i1l188
 12848  0472                     i1l2959:
 12849                           
 12850                           ;PIC16Xpress_DevBoard.c: 147:             return PORTCbits.RC6;
 12851  0472  0020               	movlb	0	; select bank0
 12852  0473  0E0E               	swapf	14,w	;volatile
 12853  0474  0C89               	rrf	9,f
 12854  0475  0C89               	rrf	9,f
 12855  0476  3901               	andlw	1
 12856  0477  2CEB               	goto	i1l188
 12857  0478                     i1l2963:
 12858                           
 12859                           ;PIC16Xpress_DevBoard.c: 149:             return PORTCbits.RC7;
 12860  0478  0020               	movlb	0	; select bank0
 12861  0479  0D0E               	rlf	14,w	;volatile
 12862  047A  0D0E               	rlf	14,w	;volatile
 12863  047B  3901               	andlw	1
 12864  047C  2CEB               	goto	i1l188
 12865  047D                     i1l2967:
 12866                           
 12867                           ;PIC16Xpress_DevBoard.c: 151:             return PORTBbits.RB7;
 12868  047D  0020               	movlb	0	; select bank0
 12869  047E  0D0D               	rlf	13,w	;volatile
 12870  047F  0D0D               	rlf	13,w	;volatile
 12871  0480  3901               	andlw	1
 12872  0481  2CEB               	goto	i1l188
 12873  0482                     i1l2971:
 12874                           
 12875                           ;PIC16Xpress_DevBoard.c: 153:             return PORTAbits.RA0;
 12876  0482  0020               	movlb	0	; select bank0
 12877  0483  080C               	movf	12,w	;volatile
 12878  0484  3901               	andlw	1
 12879  0485  2CEB               	goto	i1l188
 12880  0486                     i1l2975:
 12881                           
 12882                           ;PIC16Xpress_DevBoard.c: 155:             return PORTAbits.RA1;
 12883  0486  0020               	movlb	0	; select bank0
 12884  0487  0C0C               	rrf	12,w	;volatile
 12885  0488  3901               	andlw	1
 12886  0489  2CEB               	goto	i1l188
 12887  048A                     i1l2979:
 12888                           
 12889                           ;PIC16Xpress_DevBoard.c: 157:             return PORTAbits.RA2;
 12890  048A  0020               	movlb	0	; select bank0
 12891  048B  0C0C               	rrf	12,w	;volatile
 12892  048C  0C89               	rrf	9,f
 12893  048D  3901               	andlw	1
 12894  048E  2CEB               	goto	i1l188
 12895  048F                     i1l2983:
 12896                           
 12897                           ;PIC16Xpress_DevBoard.c: 159:             return PORTCbits.RC0;
 12898  048F  0020               	movlb	0	; select bank0
 12899  0490  080E               	movf	14,w	;volatile
 12900  0491  3901               	andlw	1
 12901  0492  2CEB               	goto	i1l188
 12902  0493                     i1l2987:
 12903                           
 12904                           ;PIC16Xpress_DevBoard.c: 161:             return PORTCbits.RC1;
 12905  0493  0020               	movlb	0	; select bank0
 12906  0494  0C0E               	rrf	14,w	;volatile
 12907  0495  3901               	andlw	1
 12908  0496  2CEB               	goto	i1l188
 12909  0497                     i1l2991:
 12910                           
 12911                           ;PIC16Xpress_DevBoard.c: 163:             return PORTCbits.RC2;
 12912  0497  0020               	movlb	0	; select bank0
 12913  0498  0C0E               	rrf	14,w	;volatile
 12914  0499  0C89               	rrf	9,f
 12915  049A  3901               	andlw	1
 12916  049B  2CEB               	goto	i1l188
 12917  049C                     i1l2995:
 12918                           
 12919                           ;PIC16Xpress_DevBoard.c: 165:             return PORTBbits.RB4;
 12920  049C  0020               	movlb	0	; select bank0
 12921  049D  0E0D               	swapf	13,w	;volatile
 12922  049E  3901               	andlw	1
 12923  049F  2CEB               	goto	i1l188
 12924  04A0                     i1l2999:
 12925                           
 12926                           ;PIC16Xpress_DevBoard.c: 167:             return PORTBbits.RB5;
 12927  04A0  0020               	movlb	0	; select bank0
 12928  04A1  0E0D               	swapf	13,w	;volatile
 12929  04A2  0C89               	rrf	9,f
 12930  04A3  3901               	andlw	1
 12931  04A4  2CEB               	goto	i1l188
 12932  04A5                     i1l3003:
 12933                           
 12934                           ;PIC16Xpress_DevBoard.c: 169:             return PORTBbits.RB6;
 12935  04A5  0020               	movlb	0	; select bank0
 12936  04A6  0E0D               	swapf	13,w	;volatile
 12937  04A7  0C89               	rrf	9,f
 12938  04A8  0C89               	rrf	9,f
 12939  04A9  3901               	andlw	1
 12940  04AA  2CEB               	goto	i1l188
 12941  04AB                     i1l3013:
 12942  04AB  0872               	movf	ReadPin@pin,w
 12943  04AC  00F0               	movwf	??_ReadPin
 12944  04AD  01F1               	clrf	??_ReadPin+1
 12945                           
 12946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12947                           ; Switch size 1, requested type "simple"
 12948                           ; Number of cases is 1, Range of values is 0 to 0
 12949                           ; switch strategies available:
 12950                           ; Name         Instructions Cycles
 12951                           ; simple_byte            4     3 (average)
 12952                           ; direct_byte            8     6 (fixed)
 12953                           ; jumptable            260     6 (fixed)
 12954                           ;	Chosen strategy is simple_byte
 12955  04AE  0871               	movf	??_ReadPin+1,w
 12956  04AF  3A00               	xorlw	0	; case 0
 12957  04B0  1903               	skipnz
 12958  04B1  2CB3               	goto	i1l3995
 12959  04B2  2C60               	goto	i1l2943
 12960  04B3                     i1l3995:
 12961                           
 12962                           ; Switch size 1, requested type "simple"
 12963                           ; Number of cases is 18, Range of values is 0 to 17
 12964                           ; switch strategies available:
 12965                           ; Name         Instructions Cycles
 12966                           ; direct_byte           42     6 (fixed)
 12967                           ; simple_byte           55    28 (average)
 12968                           ; jumptable            260     6 (fixed)
 12969                           ;	Chosen strategy is simple_byte
 12970  04B3  0870               	movf	??_ReadPin,w
 12971  04B4  3A00               	xorlw	0	; case 0
 12972  04B5  1903               	skipnz
 12973  04B6  2C57               	goto	i1l2935
 12974  04B7  3A01               	xorlw	1	; case 1
 12975  04B8  1903               	skipnz
 12976  04B9  2C5C               	goto	i1l2939
 12977  04BA  3A03               	xorlw	3	; case 2
 12978  04BB  1903               	skipnz
 12979  04BC  2C60               	goto	i1l2943
 12980  04BD  3A01               	xorlw	1	; case 3
 12981  04BE  1903               	skipnz
 12982  04BF  2C62               	goto	i1l2947
 12983  04C0  3A07               	xorlw	7	; case 4
 12984  04C1  1903               	skipnz
 12985  04C2  2C67               	goto	i1l2951
 12986  04C3  3A01               	xorlw	1	; case 5
 12987  04C4  1903               	skipnz
 12988  04C5  2C6B               	goto	i1l2955
 12989  04C6  3A03               	xorlw	3	; case 6
 12990  04C7  1903               	skipnz
 12991  04C8  2C72               	goto	i1l2959
 12992  04C9  3A01               	xorlw	1	; case 7
 12993  04CA  1903               	skipnz
 12994  04CB  2C78               	goto	i1l2963
 12995  04CC  3A0F               	xorlw	15	; case 8
 12996  04CD  1903               	skipnz
 12997  04CE  2C7D               	goto	i1l2967
 12998  04CF  3A01               	xorlw	1	; case 9
 12999  04D0  1903               	skipnz
 13000  04D1  2C82               	goto	i1l2971
 13001  04D2  3A03               	xorlw	3	; case 10
 13002  04D3  1903               	skipnz
 13003  04D4  2C86               	goto	i1l2975
 13004  04D5  3A01               	xorlw	1	; case 11
 13005  04D6  1903               	skipnz
 13006  04D7  2C8A               	goto	i1l2979
 13007  04D8  3A07               	xorlw	7	; case 12
 13008  04D9  1903               	skipnz
 13009  04DA  2C8F               	goto	i1l2983
 13010  04DB  3A01               	xorlw	1	; case 13
 13011  04DC  1903               	skipnz
 13012  04DD  2C93               	goto	i1l2987
 13013  04DE  3A03               	xorlw	3	; case 14
 13014  04DF  1903               	skipnz
 13015  04E0  2C97               	goto	i1l2991
 13016  04E1  3A01               	xorlw	1	; case 15
 13017  04E2  1903               	skipnz
 13018  04E3  2C9C               	goto	i1l2995
 13019  04E4  3A1F               	xorlw	31	; case 16
 13020  04E5  1903               	skipnz
 13021  04E6  2CA0               	goto	i1l2999
 13022  04E7  3A01               	xorlw	1	; case 17
 13023  04E8  1903               	skipnz
 13024  04E9  2CA5               	goto	i1l3003
 13025  04EA  2C60               	goto	i1l2943
 13026  04EB                     i1l188:
 13027  04EB  0008               	return
 13028  04EC                     __end_of_ReadPin:
 13029                           
 13030                           	psect	text65
 13031  0B5F                     __ptext65:	
 13032 ;; *************** function _JSN_GetLastTrig *****************
 13033 ;; Defined at:
 13034 ;;		line 115 in file "JSN_Sensor.c"
 13035 ;; Parameters:    Size  Location     Type
 13036 ;;		None
 13037 ;; Auto vars:     Size  Location     Type
 13038 ;;		None
 13039 ;; Return value:  Size  Location     Type
 13040 ;;                  1    wreg      PTR struct .
 13041 ;; Registers used:
 13042 ;;		wreg
 13043 ;; Tracked objects:
 13044 ;;		On entry : 0/0
 13045 ;;		On exit  : 0/0
 13046 ;;		Unchanged: 0/0
 13047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;Total ram usage:        0 bytes
 13053 ;; Hardware stack levels used: 1
 13054 ;; This function calls:
 13055 ;;		Nothing
 13056 ;; This function is called by:
 13057 ;;		_CCP1_DefaultCallBack
 13058 ;;		_CCP2_DefaultCallBack
 13059 ;;		_CCP3_DefaultCallBack
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           
 13063  0B5F                     _JSN_GetLastTrig:	
 13064                           ;psect for function _JSN_GetLastTrig
 13065                           
 13066  0B5F                     i1l2929:	
 13067                           ;incstack = 0
 13068                           ; Regs used in _JSN_GetLastTrig: [wreg]
 13069                           
 13070                           
 13071                           ;JSN_Sensor.c: 116:     return lastTrig;
 13072  0B5F  0021               	movlb	1	; select bank1
 13073  0B60  0858               	movf	_lastTrig^(0+128),w
 13074  0B61                     i1l60:
 13075  0B61  0008               	return
 13076  0B62                     __end_of_JSN_GetLastTrig:
 13077  007E                     btemp	set	126	;btemp
 13078  007E                     int$flags	set	126
 13079  007E                     wtemp0	set	126
 13080                           
 13081                           	psect	idloc
 13082                           
 13083                           ;Config register IDLOC0 @ 0x8000
 13084                           ;	unspecified, using default values
 13085  8000                     	org	32768
 13086  8000  3FFF               	dw	16383
 13087                           
 13088                           ;Config register IDLOC1 @ 0x8001
 13089                           ;	unspecified, using default values
 13090  8001                     	org	32769
 13091  8001  3FFF               	dw	16383
 13092                           
 13093                           ;Config register IDLOC2 @ 0x8002
 13094                           ;	unspecified, using default values
 13095  8002                     	org	32770
 13096  8002  3FFF               	dw	16383
 13097                           
 13098                           ;Config register IDLOC3 @ 0x8003
 13099                           ;	unspecified, using default values
 13100  8003                     	org	32771
 13101  8003  3FFF               	dw	16383
 13102                           
 13103                           	psect	config
 13104                           
 13105                           ;Config register CONFIG1 @ 0x8007
 13106                           ;	FEXTOSC External Oscillator mode Selection bits
 13107                           ;	FEXTOSC = OFF, Oscillator not enabled
 13108                           ;	Power-up default value for COSC bits
 13109                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 13110                           ;	Clock Out Enable bit
 13111                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 13112                           ;	Clock Switch Enable bit
 13113                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13114                           ;	Fail-Safe Clock Monitor Enable
 13115                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13116  8007                     	org	32775
 13117  8007  3F8C               	dw	16268
 13118                           
 13119                           ;Config register CONFIG2 @ 0x8008
 13120                           ;	Master Clear Enable bit
 13121                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 13122                           ;	Power-up Timer Enable bit
 13123                           ;	PWRTE = OFF, PWRT disabled
 13124                           ;	Watchdog Timer Enable bits
 13125                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 13126                           ;	Low-power BOR enable bit
 13127                           ;	LPBOREN = OFF, ULPBOR disabled
 13128                           ;	Brown-out Reset Enable bits
 13129                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 13130                           ;	Brown-out Reset Voltage selection bit
 13131                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 13132                           ;	PPSLOCK bit One-Way Set Enable bit
 13133                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 13134                           ;	Stack Overflow/Underflow Reset Enable bit
 13135                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13136                           ;	Debugger enable bit
 13137                           ;	DEBUG = OFF, Background debugger disabled
 13138  8008                     	org	32776
 13139  8008  3FF3               	dw	16371
 13140                           
 13141                           ;Config register CONFIG3 @ 0x8009
 13142                           ;	User NVM self-write protection bits
 13143                           ;	WRT = OFF, Write protection off
 13144                           ;	Low Voltage Programming Enable bit
 13145                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 13146  8009                     	org	32777
 13147  8009  3FFF               	dw	16383
 13148                           
 13149                           ;Config register CONFIG4 @ 0x800A
 13150                           ;	User NVM Program Memory Code Protection bit
 13151                           ;	CP = OFF, User NVM code protection disabled
 13152                           ;	Data NVM Memory Code Protection bit
 13153                           ;	CPD = OFF, Data NVM code protection disabled
 13154  800A                     	org	32778
 13155  800A  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         138
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     80      80
    BANK1            80     14      77
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1950$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S1950$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP3_DefaultCallBack(), 

    CCP2_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP2_DefaultCallBack(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> Absolute function(), CCP1_DefaultCallBack(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK1[6]), 

    JSN_Sensor_GetDistance@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK1[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_CCP1_CaptureISR
    _INTERRUPT_InterruptManager->_CCP2_CaptureISR
    _INTERRUPT_InterruptManager->_CCP3_CaptureISR
    _TMR1_ISR->_TMR1_WriteTimer
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP3_DefaultCallBack->_ReadPin
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP2_DefaultCallBack->_ReadPin
    _CCP1_CaptureISR->_CCP1_DefaultCallBack
    _CCP1_DefaultCallBack->_ReadPin

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _CCP3_Initialize->_CCP3_SetCallBack
    _CCP2_Initialize->_CCP2_SetCallBack
    _CCP1_Initialize->_CCP1_SetCallBack
    _JSN_Sensor_Trig->_FRT_GetMicros
    _FRT_GetMicros->_TMR0_ReadTimer
    _JSN_Sensor_Init->_SetPin
    _JSN_Sensor_Init->_WritePin
    _JSN_Sensor_GetDistance->___lldiv
    ___lldiv->___lmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   11528
                                              2 BANK1     12    12      0
                      _FRT_GetMillis
             _JSN_Sensor_GetDistance
                    _JSN_Sensor_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5380
                                             76 BANK0      4     0      4
                                              0 BANK1      2     2      0
             _JSN_Sensor_GetDistance (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5250
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    4923
                                             52 BANK0     16    14      2
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                24    16      8    3578
                                             28 BANK0     24    16      8
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2554
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     834
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             18     2     16     311
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             26    10     16     314
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0     980
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     980
                    _CCP1_Initialize
                    _CCP2_Initialize
                    _CCP3_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR1_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    1     1      0     490
                                              2 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP3_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_Initialize                                      0     0      0      98
                   _CCP2_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP2_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP1_Initialize                                      0     0      0      98
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (4) _CCP1_SetCallBack                                     2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0    1007
                                              6 BANK0      5     5      0
                      _FRT_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FRT_GetMicros                                        4     0      4      23
                                              2 BANK0      4     0      4
                     _TMR0_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Init                                      5     3      2    1925
                                              4 BANK0      5     3      2
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     852
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_GetDistance                               5     3      2     690
                                             26 BANK0      5     3      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _FRT_GetMillis                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0     738
                   Absolute function *
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR0_CallBack                                       0     0      0       0
                      _FRT_IncMicros
                      _FRT_IncMillis
 ---------------------------------------------------------------------------------
 (13) _FRT_IncMillis                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _FRT_IncMicros                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CCP3_CaptureISR                                     3     3      0     166
                                              8 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP3_DefaultCallBack                                5     3      2     119
                                              3 COMMON     5     3      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (11) _CCP2_CaptureISR                                     3     3      0     166
                                              8 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP2_DefaultCallBack                                5     3      2     119
                                              3 COMMON     5     3      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (11) _CCP1_CaptureISR                                     3     3      0     166
                                              8 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP1_DefaultCallBack                                5     3      2     119
                                              3 COMMON     5     3      2
                    _JSN_GetLastTrig
                            _ReadPin
 ---------------------------------------------------------------------------------
 (13) _ReadPin                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (13) _JSN_GetLastTrig                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FRT_GetMillis
   _JSN_Sensor_GetDistance
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _JSN_Sensor_Init
     _SetPin
     _WritePin
   _JSN_Sensor_Trig
     _FRT_GetMicros
       _TMR0_ReadTimer
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _CCP1_Initialize
         _CCP1_SetCallBack
       _CCP2_Initialize
         _CCP2_SetCallBack
       _CCP3_Initialize
         _CCP3_SetCallBack
       _EUSART_Initialize
         _EUSART_SetErrorHandler
         _EUSART_SetFramingErrorHandler
         _EUSART_SetOverrunErrorHandler
         _EUSART_SetRxInterruptHandler
         _EUSART_SetTxInterruptHandler
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _PMD_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
       _WDT_Initialize
   _SetPin
   _WritePin
   _printf
     _JSN_Sensor_GetDistance (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
             _strlen

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _CCP1_CaptureISR *
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP2_CaptureISR *
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _CCP3_CaptureISR *
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
       _JSN_GetLastTrig
       _ReadPin
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     _TMR0_CallBack
       _FRT_IncMicros
       _FRT_IncMillis
   _TMR1_ISR *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Jan 30 02:10:14 2022

                ?_EUSART_SetRxInterruptHandler 0020                         ??_CCP3_DefaultCallBack 0075  
                                           l32 05F1                                             l28 0573  
                                           l37 0590                                             l54 076D  
                                           l57 0FFF                        __end_of_CCP1_Initialize 0CCE  
                                          l212 02F9                                            l321 0C47  
                                          l330 0B81                                            l164 03B4  
                                          l159 0F82                                            l504 0D16  
                                          l280 0D87                                            l435 0B9A  
                                          l283 0C00                                            l292 0C10  
                                          l348 0BD9                                            l429 0CE5  
                                          l286 0C04                                            l471 0CFD  
                                          l615 07B3                                            l640 0DE4  
                                          l393 0B91                                            l537 07FF  
                                          l289 0B6D                                            l387 0CCD  
                                          l643 0DFF                                            l804 0C32  
                                          l477 0BA3                                            l807 0D68  
                                          l639 0DDB                                            l681 0BBE  
                                          l649 0B88                                            l690 0BC7  
                                          l684 0BAC                                            l678 0BB5  
                                          l687 0BD0                                            l792 0E9A  
                                          l979 0E64                                            u800 07BF  
                                          u801 07BE                                            u810 07CE  
                                          u811 07CD                                            u900 05FF  
                                          u820 07EC                                            u901 05FE  
                                          u821 07EB                                            u910 0612  
                                          u830 0DD2                                            u911 0611  
                                          u831 0DD1                                            u920 0634  
                                          u760 0DDB                                            u840 0D46  
                                          u921 0633                                            u761 0DDA  
                                          u825 07E8                                            u841 0D45  
                                          u850 04F4                                            u930 0652  
                                          u770 0DDF                                            u931 0651  
                                          u771 0DDE                                            u860 0503  
                                          u780 0DF9                                            u940 06C5  
                                          u861 0502                                            u925 0630  
                                          u781 0DF8                                            u941 06C4  
                                          u870 0516                                            u790 07BA  
                                          u950 06D3                                            u871 0515  
                                          u791 07B9                                            u951 06D2  
                                          u880 0540                                            u960 06FC  
                                          u881 053F                                            u961 06FB  
                                          u890 055F                                            u970 0701  
                                          u891 055E                                            u971 0700  
                                          u980 0094                                            u885 053C  
                                          u965 06F8                                            u981 0093  
                                          u990 00A7                                            u991 00A6  
                                          u995 00A3                                _timer1ReloadVal 00BC  
                       ??_EUSART_RxDataHandler 0070                                            _pad 06BE  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         l1001 06BD                                           l1205 056F  
                                         l1215 0662                                           l1208 0652  
                                         l3101 0CF9                                           l3021 0C07  
                 JSN_Sensor_GetDistance@Sensor 003E                                           l3111 0CBB  
                                         l3103 0CFB                                           l3031 0E69  
                                         l3023 0C09                                           l1511 0D4C  
                                         l3113 0CBC                                           l3105 0CB6  
                                         l3041 0E75                                           l3033 0E6C  
                                         l3025 0C0B                                           l3121 0CFE  
                                         l1505 0DD2                                           l3201 018F  
                                         l3115 0CC4                                           l3107 0CB9  
                                         l3051 0E89                                           l3043 0E7F  
                                         l3035 0E6E                                           l3027 0C0D  
                                         l3019 0C05                                           l3131 0D13  
                                         l3123 0D02                                           l3211 01BA  
                                         l3203 0197                                           l1428 0C5C  
                                         l3117 0CC9                                           l3109 0CBA  
                                         l3061 0E94                                           l3053 0E8B  
                                         l3045 0E82                                           l3037 0E70  
                                         l3029 0E65                                           l3141 0C3C  
                                         l3133 0C33                                           l3125 0D03  
                                         l1453 06DA                                           l1461 0098  
                                         l3221 01FF                                           l3213 01CC  
                                         l3205 019C                                           l1198 055F  
                                         l3303 0366                                           l3119 0CCB  
                                         l3151 0782                                           l3063 0E97  
                                         l3055 0E8D                                           l3047 0E84  
                                         l3039 0E73                                           l3143 0C44  
                                         l3135 0C38                                           l3127 0D0A  
                                         l3071 0B6A                                           l3223 020A  
                                         l3207 01A0                                           l1456 06FC  
                                         l3313 0374                                           l3241 02FC  
                                         l3321 0241                                           l3401 0D4D  
                                         l3081 0CD4                                           l3073 0CCE  
                                         l3161 078D                                           l3153 0785  
                                         l3145 076E                                           l3065 0BF9  
                                         l3057 0E90                                           l3049 0E86  
                                         l3137 0C39                                           l3129 0D0B  
                                         l1457 070A                                           l1473 017B  
                                         l1465 00B5                                           l3209 01B2  
                                         l3217 01E6                                           l3233 021B  
                                         l1458 0716                                           l3307 036D  
                                         l3251 030B                                           l3243 02FD  
                                         l3331 0250                                           l3323 0242  
                                         l3083 0CDC                                           l3075 0CD1  
                                         l3091 0CE9                                           l3171 07A8  
                                         l3163 0795                                           l3155 0787  
                                         l3147 0770                                           l3067 0BFD  
                                         l3059 0E92                                           l3139 0C3A  
                                         l3235 0234                                           l3219 01F7  
                                         l3227 0210                                           l3501 069F  
                                         l3085 0CE1                                           l3077 0CD2  
                                         l3093 0CEA                                           l3173 07A9  
                                         l3165 079D                                           l3157 0789  
                                         l3149 0778                                           l3069 0BFF  
                                         l3405 0D69                                           l3229 0218  
                                         l1485 0E30                                           l1478 023E  
                                         l3503 06A7                                           l3271 032E  
                                         l3263 0320                                           l3255 0312  
                                         l3247 0304                                           l3351 0273  
                                         l3343 0265                                           l3335 0257  
                                         l3327 0249                                           l3087 0CE3  
                                         l3079 0CD3                                           l3095 0CEB  
                                         l3175 07B2                                           l3167 07A5  
                                         l3159 078B                                           l3505 06A8  
                                         l3177 0B7B                                           l3097 0CEC  
                                         l3089 0CE6                                           l3169 07A7  
                                         l3601 0F70                                           l1497 07F6  
                                         l2801 0DBD                                           l3521 0E28  
                                         l3513 0E02                                           l3507 06AF  
                                         l3291 0351                                           l3283 0343  
                                         l3275 0335                                           l3267 0327  
                                         l3259 0319                                           l3371 0296  
                                         l3363 0288                                           l3355 027A  
                                         l3347 026C                                           l3339 025E  
                                         l3531 057A                                           l3099 0CF4  
                                         l3611 0F81                                           l3603 0F73  
                                         l2803 0DC2                                           l2811 0D46  
                                         l3515 0E06                                           l3613 0C22  
                                         l3509 06B5                                           l3541 05D6  
                                         l3533 0590                                           l3525 0572  
                                         l3605 0F75                                           l2821 0506  
                                         l2805 0D34                                           l2901 00BD  
                                         l3517 0E0A                                           l3295 0358  
                                         l3287 034A                                           l3279 033C  
                                         l3383 02AB                                           l3375 029D  
                                         l3367 028F                                           l3359 0281  
                                         l3543 05DC                                           l3527 0573  
                                         l3607 0F7D                                           l2831 0540  
                                         l2823 050E                                           l2815 04EC  
                                         l2807 0D39                                           l2911 0104  
                                         l2903 00D1                                           l3199 017E  
                                         l3519 0E1E                                           l3711 03C8  
                                         l3481 0E46                                           l3393 02B9  
                                         l3545 05E4                                           l3537 059C  
                                         l3609 0F80                                           l2833 0550  
                                         l2825 0512                                           l2817 04F7  
                                         l2841 0602                                           l2809 0D3D  
                                         l2921 0155                                           l2913 0108  
                                         l2905 00D4                                           l3617 0C48  
                                         l3721 03E1                                           l3713 03C8  
                                         l3491 0674                                           l3483 0E4D  
                                         l3475 0E31                                           l3299 035F  
                                         l3387 02B2                                           l3379 02A4  
                                         l3547 05EC                                           l3539 05CE  
                                         l3571 0767                                           l3563 0719  
                                         l2835 0551                                           l2827 0516  
                                         l2819 0503                                           l2851 0644  
                                         l2843 060A                                           l2771 0DEF  
                                         l2763 0DD5                                           l2923 0163  
                                         l2907 00D9                                           l2915 0135  
                                         l3619 0C4D                                           l3731 042E  
                                         l3723 03F4                                           l3715 03D1  
                                         l3707 03B5                                           l3493 0677  
                                         l3485 0E5C                                           l3477 0E3A  
                                         l3565 072C                                           l3581 0F49  
                                         l2829 051E                                           l2845 060E  
                                         l2837 05F2                                           l2773 0DF3  
                                         l2765 0DD5                                           l2781 0B84  
                                         l2861 06D8                                           l2853 06C0  
                                         l2917 013C                                           l2925 0168  
                                         l2909 0100                                           l3733 0434  
                                         l3725 040F                                           l3717 03D7  
                                         l3709 03B8                                           ?_pad 0033  
                                         l3495 0682                                           l3479 0E3E  
                                         l3575 0FC2                                           l3567 0737  
                                         l3591 0F5D                                           l3583 0F53  
                                         l2847 0612                                           l2839 05FF  
                                         l2775 0DF9                                           l2767 0DDF  
                                         l2791 07CE                                           l2783 07B4  
                                         l2863 06DD                                           l2855 06C5  
                                         l2919 0148                                           l3735 0445  
                                         l3727 041D                                           l3719 03DD  
                                         l3497 0686                                           l3489 0663  
                                         l3577 0FF7                                           l3569 075D  
                                         l2873 0BD1                                           l2881 07F7  
                                         l3593 0F5F                                           l3585 0F56  
                                         l2849 0634                                           l2777 0DFA  
                                         l2769 0DE5                                           l2793 07EC  
                                         l2785 07BA                                           l2865 06E9  
                                         l2857 06CE                                           l3737 0449  
                                         l3729 0424                                           l3499 068D  
                                         l2875 0B89                                           l2891 0BA4  
                                         l2883 0BBF                                           l3595 0F69  
                                         l3587 0F58                                           l2779 0DFD  
                                         l2787 07BF                                           l2867 06EE  
                                         l2859 06D3                                           l2877 0B92  
                                         l2885 0BC8                                           l3597 0F6C  
                                         l3589 0F5A                                           l2789 07C4  
                                         l2797 0DAC                                           l2869 0701  
                                         l2893 008F                                           l2879 0B9B  
                                         l2887 0BAD                                           l3599 0F6E  
                                         l2799 0DAF                                           l2895 0094  
                                         l2889 0BB6                                           l2897 00A7  
                                         l2899 00AD                                           l3981 0582  
                                         l3983 05A5                                           l3985 02C1  
                                         l3987 037C                                           STR_1 1000  
                                         u1000 013C                                           u1001 013B  
                                         u1010 0148                                           u1011 0147  
                                         u1020 0155                                           u1021 0154  
                                         u1110 0E3E                                           u1030 0163  
                                         u1111 0E3D                                           u1031 0162  
                                         u1040 0168                                           u1041 0167  
                                         u1025 0151                                           u1210 06B5  
                                         u1050 0C04                                           u1211 06B4  
                                         u1051 0C03                                           u1035 015F  
                                         u1140 0E5C                                           u1220 0E28  
                                         u1205 06A9                                           u1141 0E5B  
                                         u1125 0E47                                           u1221 0E27  
                                         u1150 0674                                           u1230 075D  
                                         u1070 018F                                           u1151 0673  
                                         u1135 0E4E                                           u1231 075C  
                                         u1071 018E                                           u1080 01B2  
                                         u1320 040F                                           u1081 01B1  
                                         u1321 040E                                           u1170 0686  
                                         u1090 01F7                                           u1330 041D  
                                         u1171 0685                                           u1091 01F6  
                                         u1331 041C                                           u1340 042E  
                                         u1165 0678                                           u1341 042D  
                                         _LATA 010C                                           u1190 069F  
                                         _LATB 010D                                           u1191 069E  
                                         _LATC 010E                                           u1185 0687  
                                         u1195 069B                                           _PIE0 0090  
                                         _PIE1 0091                                           _PIE2 0092  
                                         _PIE3 0093                                           _PIE4 0094  
                                         _PMD0 0911                                           _PMD1 0912  
                                         _PMD2 0913                                           _PMD3 0914  
                                         _PMD4 0915                                           _PMD5 0916  
                                         i1l60 0B61                                           _PIR0 0010  
                                         _PIR1 0011                                           _PIR2 0012  
                                         _PIR3 0013                                           _PIR4 0014  
                                         _PLLR 48E0                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 0148                        __end_of_CCP2_Initialize 0CE6  
                                         _main 03B5                                           _prec 00AC  
                                         _nout 00A8                                           pad@i 0037  
                                         pad@p 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 0039  
                                         btemp 007E                                           _utoa 008D  
                                   ReadPin@pin 0072                                           start 0074  
                     __end_of_CCP1_SetCallBack 0B92                     ??_TMR1_SetInterruptHandler 0022  
                             ?_CCP1_CaptureISR 0070                                __end_of_ReadPin 04EC  
                                        ??_pad 0036                        __end_of_TMR0_Initialize 0C48  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0C05  
                      __end_of_CCP3_Initialize 0CFE                                          ?_main 0070  
                              __end_of___lldiv 06BE                                          ?_utoa 003C  
                              __end_of___lodiv 0570                                          _T1CON 001B  
                              __end_of___lomod 0663                                          i1l342 0CB5  
                                        i1l432 0C88                                          i1l345 0B7A  
                                        i1l426 0F0E                                          i1l530 0BF8  
                                        i1l188 04EB                                          i1l390 0C72  
                                        i1l518 0C21                                          i1l384 0ED4  
                                        i1l474 0C9E                                          i1l810 0BED  
                                        i1l730 0042                                          i1l731 0072  
                                        i1l723 0014                                          i1l468 0F48  
                                        i1l652 0DA8                                          i1l732 0050  
                                        i1l813 0BE3                                          i1l662 0FBF  
                                        i1l734 0061                                          i1l726 0026  
                                        i1l655 0DA9                                          i1l672 0B69  
                                        i1l728 0034                                          i1l737 0072  
                                        i1l666 0D31                                          i1l675 0B65  
                                        i1l669 0003                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 0054                                          _TMR0H 0016  
                                 vfpfcnvrt@llu 005B                                          _TMR1H 001A  
                                        _TMR0L 0015                                          _TMR1L 0019  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                          ___lmul@multiplicand 0024                      ?_TMR0_SetInterruptHandler 0020  
                                        _Sens1 00D9                                          _Sens2 013E  
                                        _Sens3 0138                               __end_of_TMR0_ISR 0CB6  
                             __end_of_TMR1_ISR 0BF9                               ?_CCP2_CaptureISR 0070  
                                        _flags 00AE                                 _WDT_Initialize 0B6A  
                                        _fputc 07B4                                          _fputs 0DAA  
                                        pad@fp 003B                                          _width 00AA  
                                        _putch 0B82                        __end_of_TMR1_Initialize 0D17  
                                        pclath 000A                                          utoa@d 003C  
                                        utoa@i 0052                                          utoa@n 004A  
                                        utoa@p 0045                                          utoa@w 0048  
                                        status 0003                                          wtemp0 007E  
                             ___lodiv@dividend 0028                                _TMR1_WriteTimer 0C11  
                     __end_of_CCP2_SetCallBack 0B9B                                __initialization 0076  
                             ?_CCP3_CaptureISR 0070                                   __end_of_main 0455  
                                 __end_of_utoa 017C                                 ??_EUSART_Write 0020  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0022  
                                       ??_main 00E1                               ?_CCP1_Initialize 0070  
                                       ??_utoa 0044                               ___lodiv@quotient 0031  
                       __end_of_WDT_Initialize 0B6E                                _JSN_GetLastTrig 0B5F  
    __end_of_EUSART_DefaultFramingErrorHandler 0004            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0003  
                   _EUSART_OverrunErrorHandler 00B2                                         ?_fputc 0023  
                                       ?_fputs 002B                                         _CCPR1H 0292  
                                       _CCPR2H 0296                                         _CCPR3H 0312  
                                       _CCPR1L 0291                                         _CCPR2L 0295  
                                       _CCPR3L 0311                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _T0CON0 0017  
                                       _T0CON1 0018                                         _T1GCON 001C  
                                       _RC1REG 0199                               __end_of_WritePin 02FA  
                                       _RC1STA 019D                                         u110_20 0C16  
                                       u110_21 0C15                        TMR1_WriteTimer@timerVal 0070  
                                       _RC4PPS 0EA4                                         i1l3003 04A5  
                                       i1l3013 04AB                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _ODCONC 028E  
                                       i1l3411 0E9C                                         i1l3413 0EA2  
                                       i1l3181 0BE4                                         i1l3415 0EA7  
                                       i1l3431 0EE1                                         i1l3191 0D21  
                                       i1l3407 0B74                                         u106_20 0D2B  
                                       u130_20 0F9F                                         i1l3409 0E9B  
                                       i1l3425 0ED5                                         i1l3441 0F0F  
                                       u106_21 0D2A                                         i1l3193 0D25  
                                       u130_21 0F9E                                         i1l3185 0BDA  
                                       i1l3419 0EB9                                         i1l3427 0ED6  
                                       i1l3435 0EF3                                         i1l3443 0F10  
                                       i1l3451 0F2D                                         i1l3195 0D2B  
                                       i1l3429 0EDC                                         i1l3445 0F16  
                                       i1l3197 0D2C                                         i1l3189 0D17  
                                       i1l3701 0FAB                                         i1l3461 0C17  
                                       i1l3631 0C5D                                         i1l3447 0F1B  
                                       i1l3471 0B66                                         i1l3703 0FB5  
                                       i1l3623 0C9F                                         i1l3463 0C19  
                                       u131_20 0FB5                                         i1l3633 0C5F  
                                       i1l3641 0C7E                                         i1l3473 0B62  
                                       i1l3705 0FBC                                         u131_21 0FB4  
                                       i1l3625 0CA1                                         i1l3465 0C1B  
                                       i1l3457 0C11                                         i1l3635 0C68  
                                       i1l3643 0C89                                         i1l3627 0CAF  
                                       i1l3459 0C16                                         i1l3467 0C1D  
                                       i1l3651 0BF0                                         i1l2933 0456  
                                       i1l3637 0C73                                         i1l3645 0C8B  
                                       i1l3629 0CB2                                         i1l3469 0C1F  
                                       i1l2951 0467                                         i1l2943 0460  
                                       i1l2935 0457                                         i1l3639 0C75  
                                       i1l3647 0C94                                         i1l3751 000B  
                                       u124_20 0CAF                                         u140_20 0022  
                                       i1l2929 0B5F                                         i1l3681 0D9C  
                                       u124_21 0CAE                                         i1l3649 0BEE  
                                       i1l3761 002B                                         u140_21 0021  
                                       i1l3753 0010                                         i1l2971 0482  
                                       i1l2963 0478                                         i1l2955 046B  
                                       i1l2947 0462                                         i1l2939 045C  
                                       i1l3691 0F8E                                         i1l3683 0DA2  
                                       i1l3675 0D88                                         i1l3771 004C  
                                       i1l3763 0030                                         i1l3755 0018  
                                       i1l3693 0F94                                         i1l3685 0DA3  
                                       i1l3677 0D8F                                         i1l3773 0055  
                                       i1l3765 0039                                         i1l3757 001D  
                                       i1l3749 0006                                         i1l2991 0497  
                                       i1l2983 048F                                         i1l2975 0486  
                                       i1l2967 047D                                         i1l2959 0472  
                                       i1l3695 0F9A                                         i1l3687 0F83  
                                       i1l3679 0D97                                         i1l3775 005A  
                                       i1l3767 003E                                         i1l3759 0022  
                                       u141_20 002B                                         i1l3697 0F9F  
                                       i1l3689 0F89                                         i1l3777 0066  
                                       i1l3769 0047                                         u141_21 002A  
                                       i1l2995 049C                                         i1l2987 0493  
                                       i1l2979 048A                                         i1l3699 0FA5  
                                       i1l3779 006B                                         i1l2999 04A0  
                                       i1l3991 0F06                                         u150_20 006B  
                                       u142_20 0030                                         i1l3993 0ECC  
                                       u150_21 006A                                         u142_21 002F  
                                       i1l3995 04B3                                         i1l3989 0F40  
                                       u127_20 0D8F                                         u143_20 0039  
                                       u127_21 0D8E                                         u143_21 0038  
                                       u128_20 0DA2                                         u144_20 003E  
                                       u136_20 000B                                         u128_21 0DA1  
                                       u144_21 003D                                         u136_21 000A  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u129_20 0F8E  
                                       u145_20 0047                                         u137_20 0010  
                                       u129_21 0F8D                                         u145_21 0046  
                                       u137_21 000F                                         u146_20 004C  
                                       u138_20 0018                                         u146_21 004B  
                                       u138_21 0017                                         u147_20 0055  
                                       u139_20 001D                                         u147_21 0054  
                                       u139_21 001C                                         u148_20 005A  
                                       u148_21 0059                                         u149_20 0066  
                                       u149_21 0065                                  main@currMilli 00E9  
                                       _OSCFRQ 091F                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                             ?_CCP2_Initialize 0070                              ??_JSN_Sensor_Init 0026  
                                    ??_ReadPin 0070                              ??_JSN_Sensor_Trig 0026  
                                _CCP1_CallBack 00CE                       __end_of_CCP3_SetCallBack 0BA4  
                                       _SetPin 02FA                   _TMR1_DefaultInterruptHandler 0000  
                                _CCP2_CallBack 00C8                                   vfprintf@cfmt 006A  
                                       ___lmul 0E31                                      ??___lldiv 0034  
                                    ??___lodiv 0030                                      ??___lomod 0030  
                                _CCP3_CallBack 00C2                            _EUSART_Transmit_ISR 0D88  
                             ?_TMR0_Initialize 0070                                         _micros 00A4  
                                       _millis 00A0                                         _printf 0C48  
                                       pad@buf 0033                                  main@prevMilli 00E5  
                             ?_CCP3_Initialize 0070                                         _strlen 0D32  
                                       fputc@c 0023                                 _PMD_Initialize 0C05  
                                       fputs@c 002F                                         fputs@i 0030  
                                       fputs@s 0032              CCP2_DefaultCallBack@capturedValue 0073  
                              ?_WDT_Initialize 0070                          __end_of_TMR0_CallBack 0B7B  
                             __end_of_vfprintf 0E31                                         utoa@fp 0047  
     TMR1_SetInterruptHandler@InterruptHandler 0020       TMR0_SetInterruptHandler@InterruptHandler 0020  
                      __end_of_TMR1_WriteTimer 0C22                           ?_EUSART_Transmit_ISR 0070  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 0D69  
                      __end_of__initialization 0089                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0BD1                   _EUSART_SetTxInterruptHandler 0BC8  
                                 ??_PIC16_Init 0023                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0070  
                                    ?_TMR1_ISR 0070                                  __end_of_fputc 07F7  
                                __end_of_fputs 0DD3                                  __end_of_putch 0B89  
                       __end_of_PMD_Initialize 0C11                        __end_of_JSN_GetLastTrig 0B62  
                        CCP3_CaptureISR@module 0079                          TMR0_ISR@CountCallBack 00D0  
                         _eusartRxStatusBuffer 0120                 CCP3_SetCallBack@customCallBack 0020  
              ??_EUSART_SetOverrunErrorHandler 0022                             __end_of_PIC16_Init 0F83  
                                      ??_fputc 0026                      __end_of_SYSTEM_Initialize 0D88  
                                      ??_fputs 002C                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0022                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                           __end_of_EUSART_Write 0E00  
                     ??_JSN_Sensor_GetDistance 003C                                        ?_SetPin 0020  
                            ?_CCP1_SetCallBack 0020                                     __pmaintext 03B5  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 00B8  
             __end_of_TMR0_SetInterruptHandler 0BDA                                        ?___lmul 0020  
                                _FRT_GetMicros 0D4D                                     ??_TMR0_ISR 0070  
                                   ??_TMR1_ISR 0072                                  _FRT_GetMillis 0C22  
                           ??_CCP1_SetCallBack 0022                                     __pintentry 0004  
                                      _CCP1CAP 0294                                        _CCP2CAP 0298  
                                      _CCP3CAP 0314                                        _CCP1CON 0293  
                                      _CCP2CON 0297                                        _CCP3CON 0313  
                                      _CCP1PPS 0E14                                        _CCP2PPS 0E15  
                                      _CCP3PPS 0E16                                 ___lmul@product 0028  
                                _FRT_IncMicros 0BDA                   ??_EUSART_DefaultErrorHandler 0071  
                                _FRT_IncMillis 0BE4                                        ?_printf 006C  
                              ?_PMD_Initialize 0070                                      ?_WritePin 0020  
                                      ?_strlen 0020                                  _eusartRxCount 00D5  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                      _OSCTUNE 091E                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0022                               ?_TMR1_WriteTimer 0070  
                             ___lomod@dividend 0028              CCP1_DefaultCallBack@capturedValue 0073  
                             _micros@FRT$F1501 0144                                        _ReadPin 0455  
                            ?_CCP2_SetCallBack 0020                                 ?_FRT_GetMicros 0022  
                               ?_FRT_GetMillis 0020                                        ___lldiv 0663  
                                      ___lodiv 04EC                             ??_CCP2_SetCallBack 0022  
                                      ___lomod 05F2                                      ?_vfprintf 0064  
                               ?_FRT_IncMicros 0070                                 ?_FRT_IncMillis 0070  
                                   ??_WritePin 0021                                        __ptext1 0C48  
                                      __ptext2 0E00                                        __ptext3 017C  
                                      __ptext4 008D                                        __ptext5 06BE  
                                      __ptext6 0D32                                        __ptext7 0DAA  
                                      __ptext8 07B4                                        __ptext9 0B82  
                             ?_JSN_GetLastTrig 0070                                      _T1CONbits 001B  
                        _OSCILLATOR_Initialize 0BF9                       ??_PIN_MANAGER_Initialize 0020  
                    ?_TMR1_SetInterruptHandler 0020                                        _ticksUp 00CC  
                              _JSN_Sensor_Init 0570                                _JSN_Sensor_Trig 0717  
                                      clrloop0 0B6F                           end_of_initialization 0089  
        __end_of_EUSART_SetOverrunErrorHandler 0BBF                  _EUSART_SetOverrunErrorHandler 0BB6  
                                      fputc@fp 0025                                        fputs@fp 002B  
                            _EUSART_Initialize 076E                                ___lldiv@divisor 002C  
                              ___lldiv@counter 0039                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 023F                              ?_CCP3_SetCallBack 0020  
                        TMR0_ReadTimer@readVal 0021                   __end_of_CCP1_DefaultCallBack 0ED5  
                           ??_CCP3_SetCallBack 0022                                     ??_vfprintf 0067  
                               _TMR0_ReadTimer 0B7B                                        strlen@a 0023  
                                      strlen@s 0024                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
                     _TMR0_SetInterruptHandler 0BD1                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                      _PORTCbits 000E  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                    _TRISCbits 008E                      __end_of_EUSART_Initialize 07B4  
                              ??_FRT_GetMicros 0026                                ??_FRT_GetMillis 0024  
                       __end_of_TMR0_ReadTimer 0B82                                ??_FRT_IncMicros 0070  
                               __end_of_SetPin 03B5                                ??_FRT_IncMillis 0070  
                               __end_of___lmul 0E65             __end_of_EUSART_DefaultErrorHandler 0B66  
                   _EUSART_DefaultErrorHandler 0B62                                    vfpfcnvrt@ap 0055  
                                  vfpfcnvrt@fp 0063                                   _EUSART_Write 0DD3  
                      __end_of_JSN_Sensor_Init 05F2                         _JSN_Sensor_GetDistance 0FC0  
                       ?_OSCILLATOR_Initialize 0070                        __end_of_JSN_Sensor_Trig 076E  
                 __end_of_CCP2_DefaultCallBack 0F0F                                 __end_of_printf 0C5D  
                               __end_of_strlen 0D4D                            start_initialization 0076  
                              ___lodiv@divisor 0020                                ___lodiv@counter 0039  
               CCP2_SetCallBack@customCallBack 0020                                      SetPin@pin 0023  
                                  __end_of_pad 0717                              ??_CCP1_CaptureISR 0078  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
                                  putch@txData 0022                              _ticksUp@ccp2$F860 00C6  
                            _ticksUp@ccp3$F975 00C0                 ?_EUSART_SetOverrunErrorHandler 0020  
                                     ??_SetPin 0021                                    vfprintf@fmt 0064  
                   _EUSART_FramingErrorHandler 00B4                               ??_PMD_Initialize 0020  
                              ?_TMR0_ReadTimer 0070                                       ??___lmul 0028  
                            ??_CCP2_CaptureISR 0078                         _EUSART_SetErrorHandler 0BA4  
                       JSN_Sensor_Init@echoPin 0025                                    _CCPTMRSbits 029F  
                                     ??_printf 00DF                                       ??_strlen 0022  
                        CCP1_CaptureISR@module 0079                    __end_of_EUSART_Transmit_ISR 0DAA  
                                  __pbssCOMMON 007B                                      ___latbits 0002  
                       JSN_Sensor_Init@trigPin 0024                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00DF                              ??_CCP3_CaptureISR 0078  
                 __end_of_CCP3_DefaultCallBack 0F49                           _CCP1_DefaultCallBack 0E9B  
                   __end_of_EUSART_Receive_ISR 0FC0               _EUSART_RxDefaultInterruptHandler 00B6  
                        _TMR0_InterruptHandler 00D2                              ??_CCP1_Initialize 0022  
                                     ?_ReadPin 0070                                    WritePin@pin 0023  
                                  WritePin@val 0020                   __end_of_EUSART_RxDataHandler 0D32  
                       _PIN_MANAGER_Initialize 0E65               __end_of_TMR1_SetInterruptHandler 0800  
            CCP3_DefaultCallBack@capturedValue 0073                                       ?___lldiv 002C  
                                     ?___lodiv 0020                                       ?___lomod 0020  
                                 _eusartRxHead 007C                                   _eusartTxHead 007D  
                                 _eusartRxTail 007B                                   _eusartTxTail 00D7  
                 ??_INTERRUPT_InterruptManager 007B                               ?_JSN_Sensor_Init 0024  
                             ?_JSN_Sensor_Trig 0070                        _eusartTxBufferRemaining 00D6  
                              ___lomod@divisor 0020                                       _BAUD1CON 019F  
                            ??_CCP2_Initialize 0022                                ___lomod@counter 0031  
                                _TMR0_CallBack 0B74                          ?_CCP1_DefaultCallBack 0073  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 0022  
                               _eusartTxBuffer 0130                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                     _LATCbits 010E                                      clear_ram0 0B6E  
                            ??_CCP3_Initialize 0022                                       _PIE0bits 0090  
                                     _PIE1bits 0091                                       _PIE4bits 0094  
                            _eusartRxLastError 00D4                           _CCP2_DefaultCallBack 0ED5  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR0bits 0010  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                                    _ticksDown 00CA                                       _PIR4bits 0014  
                                     _TMR0_ISR 0C9F      __end_of_EUSART_DefaultOverrunErrorHandler 0B6A  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0B66                                       _TMR1_ISR 0BEE  
                                    _vfpfcnvrt 017C                              ??_TMR1_Initialize 0022  
                               ?_TMR0_CallBack 0070                              ___lmul@multiplier 0020  
                                     SetPin@io 0020                          ?_CCP2_DefaultCallBack 0073  
                        JSN_Sensor_Init@Sensor 0028                                     vfprintf@ap 0066  
                                   vfprintf@fp 0069                        ?_JSN_Sensor_GetDistance 003A  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 00B0  
                         _CCP3_DefaultCallBack 0F0F                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 0054                                _CCP1_CaptureISR 0C5D  
                                     _WritePin 023F                       _TMR1_SetInterruptHandler 07F7  
                        _TMR1_InterruptHandler 00BA                                     _T0CON0bits 0017  
                             _CCP1_SetCallBack 0B89                           _EUSART_RxDataHandler 0D17  
               CCP1_SetCallBack@customCallBack 0020                                       __ptext10 0DD3  
                                     __ptext11 05F2                                       __ptext20 0C05  
                                     __ptext12 04EC                                       __ptext21 0E65  
                                     __ptext13 0F49                                     _T1GCONbits 001C  
                                     __ptext30 0B9B                                       __ptext22 0BF9  
                                     __ptext14 0D69                                       __ptext31 0CCE  
                                     __ptext23 076E                                       __ptext15 0B6A  
                                     __ptext40 02FA                                       __ptext32 0B92  
                                     __ptext24 0BC8                                       __ptext16 0CFE  
                                     __ptext41 0FC0                                       __ptext33 0CB6  
                                     __ptext25 0BBF                                       __ptext17 07F7  
                                     __ptext50 0BE4                                       __ptext42 0E31  
                                     __ptext34 0B89                                       __ptext26 0BB6  
                                     __ptext18 0C33                                       __ptext51 0BDA  
                                     __ptext43 0663                                       __ptext35 0717  
                                     __ptext27 0BAD                                       __ptext19 0BD1  
                                     __ptext60 0C73                                       __ptext52 0D88  
                                     __ptext44 0C22                                       __ptext36 0D4D  
                                     __ptext28 0BA4                                       __ptext61 0ED5  
                                     __ptext53 0F83                                       __ptext37 0B7B  
                                     __ptext29 0CE6                                       __ptext62 0C5D  
                                     __ptext54 0B66                                       __ptext46 0BEE  
                                     __ptext38 0570                                       __ptext63 0E9B  
                                     __ptext55 0003                                       __ptext47 0C11  
                                     __ptext39 023F                                       __ptext64 0455  
                                     __ptext56 0B62                                       __ptext48 0C9F  
                                     __ptext65 0B5F                                       __ptext57 0D17  
                                     __ptext49 0B74                                       __ptext58 0C89  
                                     __ptext59 0F0F                         ??_CCP1_DefaultCallBack 0075  
                                     _lastTrig 00D8                                _CCP2_CaptureISR 0C73  
                             ??_TMR0_ReadTimer 0020                   _TMR0_DefaultInterruptHandler 0000  
                      ?_EUSART_SetErrorHandler 0020                            _ticksDown@ccp2$F861 00C4  
                          _ticksDown@ccp3$F976 00BE                                     _PIC16_Init 0F49  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0020  
               __end_of_JSN_Sensor_GetDistance 1000                          __end_of_FRT_GetMicros 0D69  
                        __end_of_FRT_GetMillis 0C33                                       int$flags 007E  
                        ?_CCP3_DefaultCallBack 0073                                       _vfprintf 0E00  
           __end_of_INTERRUPT_InterruptManager 0074                     _INTERRUPT_InterruptManager 0004  
                        __end_of_FRT_IncMicros 0BE4                          __end_of_FRT_IncMillis 0BEE  
                                    printf@fmt 006C          __end_of_EUSART_SetFramingErrorHandler 0BB6  
                _EUSART_SetFramingErrorHandler 0BAD                              ??_TMR1_WriteTimer 0072  
                              _CCP3_CaptureISR 0C89                                     _INTCONbits 000B  
                              ??_TMR0_CallBack 0070                               _CCP2_SetCallBack 0B92  
                        ?_EUSART_RxDataHandler 0070                                _CCP1_Initialize 0CB6  
                                     intlevel1 0000                               ___lldiv@dividend 0030  
                      ?_PIN_MANAGER_Initialize 0070                         ??_CCP2_DefaultCallBack 0075  
               __end_of_EUSART_SetErrorHandler 0BAD                              ??_JSN_GetLastTrig 0070  
         __end_of_EUSART_SetRxInterruptHandler 0BC8                   _EUSART_SetRxInterruptHandler 0BBF  
                      __end_of_CCP1_CaptureISR 0C73                                _CCP2_Initialize 0CCE  
                                     printf@ap 00E0                             _EUSART_Receive_ISR 0F83  
EUSART_SetFramingErrorHandler@interruptHandler 0020                                    ??_vfpfcnvrt 0056  
                                __pstringtext1 1000                                  __pstringtext2 0000  
                        CCP2_CaptureISR@module 0079                            ?_EUSART_Receive_ISR 0070  
                             ___lldiv@quotient 0035                                _TMR0_Initialize 0C33  
                             _CCP3_SetCallBack 0B9B                        __end_of_CCP2_CaptureISR 0C89  
                              _CCP3_Initialize 0CE6                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0021                 __end_of_PIN_MANAGER_Initialize 0E9B  
                         ??_EUSART_Receive_ISR 0071                          JSN_Sensor_Trig@Sensor 002A  
                              _TMR1_Initialize 0CFE                                    ?_PIC16_Init 0070  
                      __end_of_CCP3_CaptureISR 0C9F  
