

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Jan 27 17:30:24 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.40
    53                           ; Generated 19/01/2022 GMT
    54                           ; 
    55                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F18345 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0097                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  0111                     	;# 
   140  0112                     	;# 
   141  0113                     	;# 
   142  0114                     	;# 
   143  0115                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0118                     	;# 
   147  0119                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0197                     	;# 
   152  0199                     	;# 
   153  0199                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019A                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019C                     	;# 
   166  019D                     	;# 
   167  019D                     	;# 
   168  019D                     	;# 
   169  019E                     	;# 
   170  019E                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  019F                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  020C                     	;# 
   178  020D                     	;# 
   179  020E                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  0212                     	;# 
   183  0212                     	;# 
   184  0213                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0216                     	;# 
   193  0216                     	;# 
   194  0217                     	;# 
   195  0217                     	;# 
   196  0219                     	;# 
   197  021A                     	;# 
   198  021B                     	;# 
   199  021C                     	;# 
   200  021D                     	;# 
   201  021D                     	;# 
   202  021E                     	;# 
   203  021F                     	;# 
   204  028C                     	;# 
   205  028D                     	;# 
   206  028E                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0295                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0297                     	;# 
   216  0298                     	;# 
   217  029F                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  030E                     	;# 
   221  0311                     	;# 
   222  0311                     	;# 
   223  0312                     	;# 
   224  0313                     	;# 
   225  0314                     	;# 
   226  0315                     	;# 
   227  0315                     	;# 
   228  0316                     	;# 
   229  0317                     	;# 
   230  0318                     	;# 
   231  038C                     	;# 
   232  038D                     	;# 
   233  038E                     	;# 
   234  0391                     	;# 
   235  0392                     	;# 
   236  0393                     	;# 
   237  0394                     	;# 
   238  0395                     	;# 
   239  0396                     	;# 
   240  0397                     	;# 
   241  0398                     	;# 
   242  0399                     	;# 
   243  039A                     	;# 
   244  039C                     	;# 
   245  039D                     	;# 
   246  039E                     	;# 
   247  039F                     	;# 
   248  0411                     	;# 
   249  0411                     	;# 
   250  0412                     	;# 
   251  0413                     	;# 
   252  0414                     	;# 
   253  0415                     	;# 
   254  0416                     	;# 
   255  0417                     	;# 
   256  0418                     	;# 
   257  0418                     	;# 
   258  0419                     	;# 
   259  041A                     	;# 
   260  041B                     	;# 
   261  041C                     	;# 
   262  041D                     	;# 
   263  041E                     	;# 
   264  041F                     	;# 
   265  0498                     	;# 
   266  0498                     	;# 
   267  0499                     	;# 
   268  049A                     	;# 
   269  049B                     	;# 
   270  049B                     	;# 
   271  049C                     	;# 
   272  049D                     	;# 
   273  049E                     	;# 
   274  049F                     	;# 
   275  0617                     	;# 
   276  0618                     	;# 
   277  0619                     	;# 
   278  0619                     	;# 
   279  061A                     	;# 
   280  061B                     	;# 
   281  061C                     	;# 
   282  061C                     	;# 
   283  061F                     	;# 
   284  0691                     	;# 
   285  0692                     	;# 
   286  0693                     	;# 
   287  0694                     	;# 
   288  0695                     	;# 
   289  0696                     	;# 
   290  0697                     	;# 
   291  0698                     	;# 
   292  0699                     	;# 
   293  0711                     	;# 
   294  0712                     	;# 
   295  0713                     	;# 
   296  0714                     	;# 
   297  0715                     	;# 
   298  0716                     	;# 
   299  0717                     	;# 
   300  0718                     	;# 
   301  0719                     	;# 
   302  0891                     	;# 
   303  0891                     	;# 
   304  0891                     	;# 
   305  0891                     	;# 
   306  0891                     	;# 
   307  0891                     	;# 
   308  0892                     	;# 
   309  0892                     	;# 
   310  0892                     	;# 
   311  0893                     	;# 
   312  0893                     	;# 
   313  0893                     	;# 
   314  0893                     	;# 
   315  0893                     	;# 
   316  0893                     	;# 
   317  0894                     	;# 
   318  0894                     	;# 
   319  0894                     	;# 
   320  0895                     	;# 
   321  0895                     	;# 
   322  0895                     	;# 
   323  0896                     	;# 
   324  0896                     	;# 
   325  0896                     	;# 
   326  089B                     	;# 
   327  0911                     	;# 
   328  0912                     	;# 
   329  0913                     	;# 
   330  0914                     	;# 
   331  0915                     	;# 
   332  0916                     	;# 
   333  0918                     	;# 
   334  0919                     	;# 
   335  091A                     	;# 
   336  091B                     	;# 
   337  091C                     	;# 
   338  091D                     	;# 
   339  091E                     	;# 
   340  091F                     	;# 
   341  0E0F                     	;# 
   342  0E10                     	;# 
   343  0E11                     	;# 
   344  0E12                     	;# 
   345  0E13                     	;# 
   346  0E14                     	;# 
   347  0E15                     	;# 
   348  0E16                     	;# 
   349  0E17                     	;# 
   350  0E18                     	;# 
   351  0E19                     	;# 
   352  0E1A                     	;# 
   353  0E1B                     	;# 
   354  0E1C                     	;# 
   355  0E1D                     	;# 
   356  0E1E                     	;# 
   357  0E1F                     	;# 
   358  0E20                     	;# 
   359  0E21                     	;# 
   360  0E22                     	;# 
   361  0E24                     	;# 
   362  0E25                     	;# 
   363  0E28                     	;# 
   364  0E29                     	;# 
   365  0E2A                     	;# 
   366  0E2B                     	;# 
   367  0E2C                     	;# 
   368  0E2D                     	;# 
   369  0E2E                     	;# 
   370  0E2F                     	;# 
   371  0E90                     	;# 
   372  0E91                     	;# 
   373  0E92                     	;# 
   374  0E94                     	;# 
   375  0E95                     	;# 
   376  0E9C                     	;# 
   377  0E9D                     	;# 
   378  0E9E                     	;# 
   379  0E9F                     	;# 
   380  0EA0                     	;# 
   381  0EA1                     	;# 
   382  0EA2                     	;# 
   383  0EA3                     	;# 
   384  0EA4                     	;# 
   385  0EA5                     	;# 
   386  0EA6                     	;# 
   387  0EA7                     	;# 
   388  0F0F                     	;# 
   389  0F10                     	;# 
   390  0F11                     	;# 
   391  0F12                     	;# 
   392  0F13                     	;# 
   393  0F14                     	;# 
   394  0F15                     	;# 
   395  0F16                     	;# 
   396  0F17                     	;# 
   397  0F18                     	;# 
   398  0F19                     	;# 
   399  0F1A                     	;# 
   400  0F1B                     	;# 
   401  0F1C                     	;# 
   402  0F1D                     	;# 
   403  0F1E                     	;# 
   404  0F1F                     	;# 
   405  0F20                     	;# 
   406  0F21                     	;# 
   407  0F22                     	;# 
   408  0F23                     	;# 
   409  0F24                     	;# 
   410  0F25                     	;# 
   411  0F26                     	;# 
   412  0F27                     	;# 
   413  0F28                     	;# 
   414  0F29                     	;# 
   415  0F2A                     	;# 
   416  0F2B                     	;# 
   417  0F2C                     	;# 
   418  0F2D                     	;# 
   419  0F2E                     	;# 
   420  0F2F                     	;# 
   421  0F30                     	;# 
   422  0F31                     	;# 
   423  0F32                     	;# 
   424  0F33                     	;# 
   425  0F34                     	;# 
   426  0F35                     	;# 
   427  0F36                     	;# 
   428  0F37                     	;# 
   429  0FE4                     	;# 
   430  0FE5                     	;# 
   431  0FE6                     	;# 
   432  0FE7                     	;# 
   433  0FE8                     	;# 
   434  0FE9                     	;# 
   435  0FEA                     	;# 
   436  0FEB                     	;# 
   437  0FED                     	;# 
   438  0FEE                     	;# 
   439  0FEF                     	;# 
   440  0000                     	;# 
   441  0001                     	;# 
   442  0002                     	;# 
   443  0003                     	;# 
   444  0004                     	;# 
   445  0005                     	;# 
   446  0006                     	;# 
   447  0007                     	;# 
   448  0008                     	;# 
   449  0009                     	;# 
   450  000A                     	;# 
   451  000B                     	;# 
   452  000C                     	;# 
   453  000D                     	;# 
   454  000E                     	;# 
   455  0010                     	;# 
   456  0011                     	;# 
   457  0012                     	;# 
   458  0013                     	;# 
   459  0014                     	;# 
   460  0015                     	;# 
   461  0015                     	;# 
   462  0016                     	;# 
   463  0016                     	;# 
   464  0017                     	;# 
   465  0018                     	;# 
   466  0019                     	;# 
   467  0019                     	;# 
   468  001A                     	;# 
   469  001B                     	;# 
   470  001C                     	;# 
   471  001D                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008D                     	;# 
   476  008E                     	;# 
   477  0090                     	;# 
   478  0091                     	;# 
   479  0092                     	;# 
   480  0093                     	;# 
   481  0094                     	;# 
   482  0097                     	;# 
   483  009B                     	;# 
   484  009B                     	;# 
   485  009C                     	;# 
   486  009D                     	;# 
   487  009E                     	;# 
   488  009F                     	;# 
   489  010C                     	;# 
   490  010D                     	;# 
   491  010E                     	;# 
   492  0111                     	;# 
   493  0112                     	;# 
   494  0113                     	;# 
   495  0114                     	;# 
   496  0115                     	;# 
   497  0116                     	;# 
   498  0117                     	;# 
   499  0118                     	;# 
   500  0119                     	;# 
   501  018C                     	;# 
   502  018D                     	;# 
   503  018E                     	;# 
   504  0197                     	;# 
   505  0199                     	;# 
   506  0199                     	;# 
   507  0199                     	;# 
   508  019A                     	;# 
   509  019A                     	;# 
   510  019A                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019B                     	;# 
   514  019B                     	;# 
   515  019B                     	;# 
   516  019C                     	;# 
   517  019C                     	;# 
   518  019C                     	;# 
   519  019D                     	;# 
   520  019D                     	;# 
   521  019D                     	;# 
   522  019E                     	;# 
   523  019E                     	;# 
   524  019E                     	;# 
   525  019F                     	;# 
   526  019F                     	;# 
   527  019F                     	;# 
   528  019F                     	;# 
   529  019F                     	;# 
   530  020C                     	;# 
   531  020D                     	;# 
   532  020E                     	;# 
   533  0211                     	;# 
   534  0211                     	;# 
   535  0212                     	;# 
   536  0212                     	;# 
   537  0213                     	;# 
   538  0213                     	;# 
   539  0214                     	;# 
   540  0214                     	;# 
   541  0215                     	;# 
   542  0215                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0216                     	;# 
   546  0216                     	;# 
   547  0217                     	;# 
   548  0217                     	;# 
   549  0219                     	;# 
   550  021A                     	;# 
   551  021B                     	;# 
   552  021C                     	;# 
   553  021D                     	;# 
   554  021D                     	;# 
   555  021E                     	;# 
   556  021F                     	;# 
   557  028C                     	;# 
   558  028D                     	;# 
   559  028E                     	;# 
   560  0291                     	;# 
   561  0291                     	;# 
   562  0292                     	;# 
   563  0293                     	;# 
   564  0294                     	;# 
   565  0295                     	;# 
   566  0295                     	;# 
   567  0296                     	;# 
   568  0297                     	;# 
   569  0298                     	;# 
   570  029F                     	;# 
   571  030C                     	;# 
   572  030D                     	;# 
   573  030E                     	;# 
   574  0311                     	;# 
   575  0311                     	;# 
   576  0312                     	;# 
   577  0313                     	;# 
   578  0314                     	;# 
   579  0315                     	;# 
   580  0315                     	;# 
   581  0316                     	;# 
   582  0317                     	;# 
   583  0318                     	;# 
   584  038C                     	;# 
   585  038D                     	;# 
   586  038E                     	;# 
   587  0391                     	;# 
   588  0392                     	;# 
   589  0393                     	;# 
   590  0394                     	;# 
   591  0395                     	;# 
   592  0396                     	;# 
   593  0397                     	;# 
   594  0398                     	;# 
   595  0399                     	;# 
   596  039A                     	;# 
   597  039C                     	;# 
   598  039D                     	;# 
   599  039E                     	;# 
   600  039F                     	;# 
   601  0411                     	;# 
   602  0411                     	;# 
   603  0412                     	;# 
   604  0413                     	;# 
   605  0414                     	;# 
   606  0415                     	;# 
   607  0416                     	;# 
   608  0417                     	;# 
   609  0418                     	;# 
   610  0418                     	;# 
   611  0419                     	;# 
   612  041A                     	;# 
   613  041B                     	;# 
   614  041C                     	;# 
   615  041D                     	;# 
   616  041E                     	;# 
   617  041F                     	;# 
   618  0498                     	;# 
   619  0498                     	;# 
   620  0499                     	;# 
   621  049A                     	;# 
   622  049B                     	;# 
   623  049B                     	;# 
   624  049C                     	;# 
   625  049D                     	;# 
   626  049E                     	;# 
   627  049F                     	;# 
   628  0617                     	;# 
   629  0618                     	;# 
   630  0619                     	;# 
   631  0619                     	;# 
   632  061A                     	;# 
   633  061B                     	;# 
   634  061C                     	;# 
   635  061C                     	;# 
   636  061F                     	;# 
   637  0691                     	;# 
   638  0692                     	;# 
   639  0693                     	;# 
   640  0694                     	;# 
   641  0695                     	;# 
   642  0696                     	;# 
   643  0697                     	;# 
   644  0698                     	;# 
   645  0699                     	;# 
   646  0711                     	;# 
   647  0712                     	;# 
   648  0713                     	;# 
   649  0714                     	;# 
   650  0715                     	;# 
   651  0716                     	;# 
   652  0717                     	;# 
   653  0718                     	;# 
   654  0719                     	;# 
   655  0891                     	;# 
   656  0891                     	;# 
   657  0891                     	;# 
   658  0891                     	;# 
   659  0891                     	;# 
   660  0891                     	;# 
   661  0892                     	;# 
   662  0892                     	;# 
   663  0892                     	;# 
   664  0893                     	;# 
   665  0893                     	;# 
   666  0893                     	;# 
   667  0893                     	;# 
   668  0893                     	;# 
   669  0893                     	;# 
   670  0894                     	;# 
   671  0894                     	;# 
   672  0894                     	;# 
   673  0895                     	;# 
   674  0895                     	;# 
   675  0895                     	;# 
   676  0896                     	;# 
   677  0896                     	;# 
   678  0896                     	;# 
   679  089B                     	;# 
   680  0911                     	;# 
   681  0912                     	;# 
   682  0913                     	;# 
   683  0914                     	;# 
   684  0915                     	;# 
   685  0916                     	;# 
   686  0918                     	;# 
   687  0919                     	;# 
   688  091A                     	;# 
   689  091B                     	;# 
   690  091C                     	;# 
   691  091D                     	;# 
   692  091E                     	;# 
   693  091F                     	;# 
   694  0E0F                     	;# 
   695  0E10                     	;# 
   696  0E11                     	;# 
   697  0E12                     	;# 
   698  0E13                     	;# 
   699  0E14                     	;# 
   700  0E15                     	;# 
   701  0E16                     	;# 
   702  0E17                     	;# 
   703  0E18                     	;# 
   704  0E19                     	;# 
   705  0E1A                     	;# 
   706  0E1B                     	;# 
   707  0E1C                     	;# 
   708  0E1D                     	;# 
   709  0E1E                     	;# 
   710  0E1F                     	;# 
   711  0E20                     	;# 
   712  0E21                     	;# 
   713  0E22                     	;# 
   714  0E24                     	;# 
   715  0E25                     	;# 
   716  0E28                     	;# 
   717  0E29                     	;# 
   718  0E2A                     	;# 
   719  0E2B                     	;# 
   720  0E2C                     	;# 
   721  0E2D                     	;# 
   722  0E2E                     	;# 
   723  0E2F                     	;# 
   724  0E90                     	;# 
   725  0E91                     	;# 
   726  0E92                     	;# 
   727  0E94                     	;# 
   728  0E95                     	;# 
   729  0E9C                     	;# 
   730  0E9D                     	;# 
   731  0E9E                     	;# 
   732  0E9F                     	;# 
   733  0EA0                     	;# 
   734  0EA1                     	;# 
   735  0EA2                     	;# 
   736  0EA3                     	;# 
   737  0EA4                     	;# 
   738  0EA5                     	;# 
   739  0EA6                     	;# 
   740  0EA7                     	;# 
   741  0F0F                     	;# 
   742  0F10                     	;# 
   743  0F11                     	;# 
   744  0F12                     	;# 
   745  0F13                     	;# 
   746  0F14                     	;# 
   747  0F15                     	;# 
   748  0F16                     	;# 
   749  0F17                     	;# 
   750  0F18                     	;# 
   751  0F19                     	;# 
   752  0F1A                     	;# 
   753  0F1B                     	;# 
   754  0F1C                     	;# 
   755  0F1D                     	;# 
   756  0F1E                     	;# 
   757  0F1F                     	;# 
   758  0F20                     	;# 
   759  0F21                     	;# 
   760  0F22                     	;# 
   761  0F23                     	;# 
   762  0F24                     	;# 
   763  0F25                     	;# 
   764  0F26                     	;# 
   765  0F27                     	;# 
   766  0F28                     	;# 
   767  0F29                     	;# 
   768  0F2A                     	;# 
   769  0F2B                     	;# 
   770  0F2C                     	;# 
   771  0F2D                     	;# 
   772  0F2E                     	;# 
   773  0F2F                     	;# 
   774  0F30                     	;# 
   775  0F31                     	;# 
   776  0F32                     	;# 
   777  0F33                     	;# 
   778  0F34                     	;# 
   779  0F35                     	;# 
   780  0F36                     	;# 
   781  0F37                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  0008                     	;# 
   802  0009                     	;# 
   803  000A                     	;# 
   804  000B                     	;# 
   805  000C                     	;# 
   806  000D                     	;# 
   807  000E                     	;# 
   808  0010                     	;# 
   809  0011                     	;# 
   810  0012                     	;# 
   811  0013                     	;# 
   812  0014                     	;# 
   813  0015                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  001D                     	;# 
   825  001E                     	;# 
   826  001F                     	;# 
   827  008C                     	;# 
   828  008D                     	;# 
   829  008E                     	;# 
   830  0090                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0093                     	;# 
   834  0094                     	;# 
   835  0097                     	;# 
   836  009B                     	;# 
   837  009B                     	;# 
   838  009C                     	;# 
   839  009D                     	;# 
   840  009E                     	;# 
   841  009F                     	;# 
   842  010C                     	;# 
   843  010D                     	;# 
   844  010E                     	;# 
   845  0111                     	;# 
   846  0112                     	;# 
   847  0113                     	;# 
   848  0114                     	;# 
   849  0115                     	;# 
   850  0116                     	;# 
   851  0117                     	;# 
   852  0118                     	;# 
   853  0119                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  018E                     	;# 
   857  0197                     	;# 
   858  0199                     	;# 
   859  0199                     	;# 
   860  0199                     	;# 
   861  019A                     	;# 
   862  019A                     	;# 
   863  019A                     	;# 
   864  019B                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019C                     	;# 
   871  019C                     	;# 
   872  019D                     	;# 
   873  019D                     	;# 
   874  019D                     	;# 
   875  019E                     	;# 
   876  019E                     	;# 
   877  019E                     	;# 
   878  019F                     	;# 
   879  019F                     	;# 
   880  019F                     	;# 
   881  019F                     	;# 
   882  019F                     	;# 
   883  020C                     	;# 
   884  020D                     	;# 
   885  020E                     	;# 
   886  0211                     	;# 
   887  0211                     	;# 
   888  0212                     	;# 
   889  0212                     	;# 
   890  0213                     	;# 
   891  0213                     	;# 
   892  0214                     	;# 
   893  0214                     	;# 
   894  0215                     	;# 
   895  0215                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0216                     	;# 
   899  0216                     	;# 
   900  0217                     	;# 
   901  0217                     	;# 
   902  0219                     	;# 
   903  021A                     	;# 
   904  021B                     	;# 
   905  021C                     	;# 
   906  021D                     	;# 
   907  021D                     	;# 
   908  021E                     	;# 
   909  021F                     	;# 
   910  028C                     	;# 
   911  028D                     	;# 
   912  028E                     	;# 
   913  0291                     	;# 
   914  0291                     	;# 
   915  0292                     	;# 
   916  0293                     	;# 
   917  0294                     	;# 
   918  0295                     	;# 
   919  0295                     	;# 
   920  0296                     	;# 
   921  0297                     	;# 
   922  0298                     	;# 
   923  029F                     	;# 
   924  030C                     	;# 
   925  030D                     	;# 
   926  030E                     	;# 
   927  0311                     	;# 
   928  0311                     	;# 
   929  0312                     	;# 
   930  0313                     	;# 
   931  0314                     	;# 
   932  0315                     	;# 
   933  0315                     	;# 
   934  0316                     	;# 
   935  0317                     	;# 
   936  0318                     	;# 
   937  038C                     	;# 
   938  038D                     	;# 
   939  038E                     	;# 
   940  0391                     	;# 
   941  0392                     	;# 
   942  0393                     	;# 
   943  0394                     	;# 
   944  0395                     	;# 
   945  0396                     	;# 
   946  0397                     	;# 
   947  0398                     	;# 
   948  0399                     	;# 
   949  039A                     	;# 
   950  039C                     	;# 
   951  039D                     	;# 
   952  039E                     	;# 
   953  039F                     	;# 
   954  0411                     	;# 
   955  0411                     	;# 
   956  0412                     	;# 
   957  0413                     	;# 
   958  0414                     	;# 
   959  0415                     	;# 
   960  0416                     	;# 
   961  0417                     	;# 
   962  0418                     	;# 
   963  0418                     	;# 
   964  0419                     	;# 
   965  041A                     	;# 
   966  041B                     	;# 
   967  041C                     	;# 
   968  041D                     	;# 
   969  041E                     	;# 
   970  041F                     	;# 
   971  0498                     	;# 
   972  0498                     	;# 
   973  0499                     	;# 
   974  049A                     	;# 
   975  049B                     	;# 
   976  049B                     	;# 
   977  049C                     	;# 
   978  049D                     	;# 
   979  049E                     	;# 
   980  049F                     	;# 
   981  0617                     	;# 
   982  0618                     	;# 
   983  0619                     	;# 
   984  0619                     	;# 
   985  061A                     	;# 
   986  061B                     	;# 
   987  061C                     	;# 
   988  061C                     	;# 
   989  061F                     	;# 
   990  0691                     	;# 
   991  0692                     	;# 
   992  0693                     	;# 
   993  0694                     	;# 
   994  0695                     	;# 
   995  0696                     	;# 
   996  0697                     	;# 
   997  0698                     	;# 
   998  0699                     	;# 
   999  0711                     	;# 
  1000  0712                     	;# 
  1001  0713                     	;# 
  1002  0714                     	;# 
  1003  0715                     	;# 
  1004  0716                     	;# 
  1005  0717                     	;# 
  1006  0718                     	;# 
  1007  0719                     	;# 
  1008  0891                     	;# 
  1009  0891                     	;# 
  1010  0891                     	;# 
  1011  0891                     	;# 
  1012  0891                     	;# 
  1013  0891                     	;# 
  1014  0892                     	;# 
  1015  0892                     	;# 
  1016  0892                     	;# 
  1017  0893                     	;# 
  1018  0893                     	;# 
  1019  0893                     	;# 
  1020  0893                     	;# 
  1021  0893                     	;# 
  1022  0893                     	;# 
  1023  0894                     	;# 
  1024  0894                     	;# 
  1025  0894                     	;# 
  1026  0895                     	;# 
  1027  0895                     	;# 
  1028  0895                     	;# 
  1029  0896                     	;# 
  1030  0896                     	;# 
  1031  0896                     	;# 
  1032  089B                     	;# 
  1033  0911                     	;# 
  1034  0912                     	;# 
  1035  0913                     	;# 
  1036  0914                     	;# 
  1037  0915                     	;# 
  1038  0916                     	;# 
  1039  0918                     	;# 
  1040  0919                     	;# 
  1041  091A                     	;# 
  1042  091B                     	;# 
  1043  091C                     	;# 
  1044  091D                     	;# 
  1045  091E                     	;# 
  1046  091F                     	;# 
  1047  0E0F                     	;# 
  1048  0E10                     	;# 
  1049  0E11                     	;# 
  1050  0E12                     	;# 
  1051  0E13                     	;# 
  1052  0E14                     	;# 
  1053  0E15                     	;# 
  1054  0E16                     	;# 
  1055  0E17                     	;# 
  1056  0E18                     	;# 
  1057  0E19                     	;# 
  1058  0E1A                     	;# 
  1059  0E1B                     	;# 
  1060  0E1C                     	;# 
  1061  0E1D                     	;# 
  1062  0E1E                     	;# 
  1063  0E1F                     	;# 
  1064  0E20                     	;# 
  1065  0E21                     	;# 
  1066  0E22                     	;# 
  1067  0E24                     	;# 
  1068  0E25                     	;# 
  1069  0E28                     	;# 
  1070  0E29                     	;# 
  1071  0E2A                     	;# 
  1072  0E2B                     	;# 
  1073  0E2C                     	;# 
  1074  0E2D                     	;# 
  1075  0E2E                     	;# 
  1076  0E2F                     	;# 
  1077  0E90                     	;# 
  1078  0E91                     	;# 
  1079  0E92                     	;# 
  1080  0E94                     	;# 
  1081  0E95                     	;# 
  1082  0E9C                     	;# 
  1083  0E9D                     	;# 
  1084  0E9E                     	;# 
  1085  0E9F                     	;# 
  1086  0EA0                     	;# 
  1087  0EA1                     	;# 
  1088  0EA2                     	;# 
  1089  0EA3                     	;# 
  1090  0EA4                     	;# 
  1091  0EA5                     	;# 
  1092  0EA6                     	;# 
  1093  0EA7                     	;# 
  1094  0F0F                     	;# 
  1095  0F10                     	;# 
  1096  0F11                     	;# 
  1097  0F12                     	;# 
  1098  0F13                     	;# 
  1099  0F14                     	;# 
  1100  0F15                     	;# 
  1101  0F16                     	;# 
  1102  0F17                     	;# 
  1103  0F18                     	;# 
  1104  0F19                     	;# 
  1105  0F1A                     	;# 
  1106  0F1B                     	;# 
  1107  0F1C                     	;# 
  1108  0F1D                     	;# 
  1109  0F1E                     	;# 
  1110  0F1F                     	;# 
  1111  0F20                     	;# 
  1112  0F21                     	;# 
  1113  0F22                     	;# 
  1114  0F23                     	;# 
  1115  0F24                     	;# 
  1116  0F25                     	;# 
  1117  0F26                     	;# 
  1118  0F27                     	;# 
  1119  0F28                     	;# 
  1120  0F29                     	;# 
  1121  0F2A                     	;# 
  1122  0F2B                     	;# 
  1123  0F2C                     	;# 
  1124  0F2D                     	;# 
  1125  0F2E                     	;# 
  1126  0F2F                     	;# 
  1127  0F30                     	;# 
  1128  0F31                     	;# 
  1129  0F32                     	;# 
  1130  0F33                     	;# 
  1131  0F34                     	;# 
  1132  0F35                     	;# 
  1133  0F36                     	;# 
  1134  0F37                     	;# 
  1135  0FE4                     	;# 
  1136  0FE5                     	;# 
  1137  0FE6                     	;# 
  1138  0FE7                     	;# 
  1139  0FE8                     	;# 
  1140  0FE9                     	;# 
  1141  0FEA                     	;# 
  1142  0FEB                     	;# 
  1143  0FED                     	;# 
  1144  0FEE                     	;# 
  1145  0FEF                     	;# 
  1146  0000                     	;# 
  1147  0001                     	;# 
  1148  0002                     	;# 
  1149  0003                     	;# 
  1150  0004                     	;# 
  1151  0005                     	;# 
  1152  0006                     	;# 
  1153  0007                     	;# 
  1154  0008                     	;# 
  1155  0009                     	;# 
  1156  000A                     	;# 
  1157  000B                     	;# 
  1158  000C                     	;# 
  1159  000D                     	;# 
  1160  000E                     	;# 
  1161  0010                     	;# 
  1162  0011                     	;# 
  1163  0012                     	;# 
  1164  0013                     	;# 
  1165  0014                     	;# 
  1166  0015                     	;# 
  1167  0015                     	;# 
  1168  0016                     	;# 
  1169  0016                     	;# 
  1170  0017                     	;# 
  1171  0018                     	;# 
  1172  0019                     	;# 
  1173  0019                     	;# 
  1174  001A                     	;# 
  1175  001B                     	;# 
  1176  001C                     	;# 
  1177  001D                     	;# 
  1178  001E                     	;# 
  1179  001F                     	;# 
  1180  008C                     	;# 
  1181  008D                     	;# 
  1182  008E                     	;# 
  1183  0090                     	;# 
  1184  0091                     	;# 
  1185  0092                     	;# 
  1186  0093                     	;# 
  1187  0094                     	;# 
  1188  0097                     	;# 
  1189  009B                     	;# 
  1190  009B                     	;# 
  1191  009C                     	;# 
  1192  009D                     	;# 
  1193  009E                     	;# 
  1194  009F                     	;# 
  1195  010C                     	;# 
  1196  010D                     	;# 
  1197  010E                     	;# 
  1198  0111                     	;# 
  1199  0112                     	;# 
  1200  0113                     	;# 
  1201  0114                     	;# 
  1202  0115                     	;# 
  1203  0116                     	;# 
  1204  0117                     	;# 
  1205  0118                     	;# 
  1206  0119                     	;# 
  1207  018C                     	;# 
  1208  018D                     	;# 
  1209  018E                     	;# 
  1210  0197                     	;# 
  1211  0199                     	;# 
  1212  0199                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019A                     	;# 
  1216  019A                     	;# 
  1217  019B                     	;# 
  1218  019B                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019C                     	;# 
  1223  019C                     	;# 
  1224  019C                     	;# 
  1225  019D                     	;# 
  1226  019D                     	;# 
  1227  019D                     	;# 
  1228  019E                     	;# 
  1229  019E                     	;# 
  1230  019E                     	;# 
  1231  019F                     	;# 
  1232  019F                     	;# 
  1233  019F                     	;# 
  1234  019F                     	;# 
  1235  019F                     	;# 
  1236  020C                     	;# 
  1237  020D                     	;# 
  1238  020E                     	;# 
  1239  0211                     	;# 
  1240  0211                     	;# 
  1241  0212                     	;# 
  1242  0212                     	;# 
  1243  0213                     	;# 
  1244  0213                     	;# 
  1245  0214                     	;# 
  1246  0214                     	;# 
  1247  0215                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0216                     	;# 
  1252  0216                     	;# 
  1253  0217                     	;# 
  1254  0217                     	;# 
  1255  0219                     	;# 
  1256  021A                     	;# 
  1257  021B                     	;# 
  1258  021C                     	;# 
  1259  021D                     	;# 
  1260  021D                     	;# 
  1261  021E                     	;# 
  1262  021F                     	;# 
  1263  028C                     	;# 
  1264  028D                     	;# 
  1265  028E                     	;# 
  1266  0291                     	;# 
  1267  0291                     	;# 
  1268  0292                     	;# 
  1269  0293                     	;# 
  1270  0294                     	;# 
  1271  0295                     	;# 
  1272  0295                     	;# 
  1273  0296                     	;# 
  1274  0297                     	;# 
  1275  0298                     	;# 
  1276  029F                     	;# 
  1277  030C                     	;# 
  1278  030D                     	;# 
  1279  030E                     	;# 
  1280  0311                     	;# 
  1281  0311                     	;# 
  1282  0312                     	;# 
  1283  0313                     	;# 
  1284  0314                     	;# 
  1285  0315                     	;# 
  1286  0315                     	;# 
  1287  0316                     	;# 
  1288  0317                     	;# 
  1289  0318                     	;# 
  1290  038C                     	;# 
  1291  038D                     	;# 
  1292  038E                     	;# 
  1293  0391                     	;# 
  1294  0392                     	;# 
  1295  0393                     	;# 
  1296  0394                     	;# 
  1297  0395                     	;# 
  1298  0396                     	;# 
  1299  0397                     	;# 
  1300  0398                     	;# 
  1301  0399                     	;# 
  1302  039A                     	;# 
  1303  039C                     	;# 
  1304  039D                     	;# 
  1305  039E                     	;# 
  1306  039F                     	;# 
  1307  0411                     	;# 
  1308  0411                     	;# 
  1309  0412                     	;# 
  1310  0413                     	;# 
  1311  0414                     	;# 
  1312  0415                     	;# 
  1313  0416                     	;# 
  1314  0417                     	;# 
  1315  0418                     	;# 
  1316  0418                     	;# 
  1317  0419                     	;# 
  1318  041A                     	;# 
  1319  041B                     	;# 
  1320  041C                     	;# 
  1321  041D                     	;# 
  1322  041E                     	;# 
  1323  041F                     	;# 
  1324  0498                     	;# 
  1325  0498                     	;# 
  1326  0499                     	;# 
  1327  049A                     	;# 
  1328  049B                     	;# 
  1329  049B                     	;# 
  1330  049C                     	;# 
  1331  049D                     	;# 
  1332  049E                     	;# 
  1333  049F                     	;# 
  1334  0617                     	;# 
  1335  0618                     	;# 
  1336  0619                     	;# 
  1337  0619                     	;# 
  1338  061A                     	;# 
  1339  061B                     	;# 
  1340  061C                     	;# 
  1341  061C                     	;# 
  1342  061F                     	;# 
  1343  0691                     	;# 
  1344  0692                     	;# 
  1345  0693                     	;# 
  1346  0694                     	;# 
  1347  0695                     	;# 
  1348  0696                     	;# 
  1349  0697                     	;# 
  1350  0698                     	;# 
  1351  0699                     	;# 
  1352  0711                     	;# 
  1353  0712                     	;# 
  1354  0713                     	;# 
  1355  0714                     	;# 
  1356  0715                     	;# 
  1357  0716                     	;# 
  1358  0717                     	;# 
  1359  0718                     	;# 
  1360  0719                     	;# 
  1361  0891                     	;# 
  1362  0891                     	;# 
  1363  0891                     	;# 
  1364  0891                     	;# 
  1365  0891                     	;# 
  1366  0891                     	;# 
  1367  0892                     	;# 
  1368  0892                     	;# 
  1369  0892                     	;# 
  1370  0893                     	;# 
  1371  0893                     	;# 
  1372  0893                     	;# 
  1373  0893                     	;# 
  1374  0893                     	;# 
  1375  0893                     	;# 
  1376  0894                     	;# 
  1377  0894                     	;# 
  1378  0894                     	;# 
  1379  0895                     	;# 
  1380  0895                     	;# 
  1381  0895                     	;# 
  1382  0896                     	;# 
  1383  0896                     	;# 
  1384  0896                     	;# 
  1385  089B                     	;# 
  1386  0911                     	;# 
  1387  0912                     	;# 
  1388  0913                     	;# 
  1389  0914                     	;# 
  1390  0915                     	;# 
  1391  0916                     	;# 
  1392  0918                     	;# 
  1393  0919                     	;# 
  1394  091A                     	;# 
  1395  091B                     	;# 
  1396  091C                     	;# 
  1397  091D                     	;# 
  1398  091E                     	;# 
  1399  091F                     	;# 
  1400  0E0F                     	;# 
  1401  0E10                     	;# 
  1402  0E11                     	;# 
  1403  0E12                     	;# 
  1404  0E13                     	;# 
  1405  0E14                     	;# 
  1406  0E15                     	;# 
  1407  0E16                     	;# 
  1408  0E17                     	;# 
  1409  0E18                     	;# 
  1410  0E19                     	;# 
  1411  0E1A                     	;# 
  1412  0E1B                     	;# 
  1413  0E1C                     	;# 
  1414  0E1D                     	;# 
  1415  0E1E                     	;# 
  1416  0E1F                     	;# 
  1417  0E20                     	;# 
  1418  0E21                     	;# 
  1419  0E22                     	;# 
  1420  0E24                     	;# 
  1421  0E25                     	;# 
  1422  0E28                     	;# 
  1423  0E29                     	;# 
  1424  0E2A                     	;# 
  1425  0E2B                     	;# 
  1426  0E2C                     	;# 
  1427  0E2D                     	;# 
  1428  0E2E                     	;# 
  1429  0E2F                     	;# 
  1430  0E90                     	;# 
  1431  0E91                     	;# 
  1432  0E92                     	;# 
  1433  0E94                     	;# 
  1434  0E95                     	;# 
  1435  0E9C                     	;# 
  1436  0E9D                     	;# 
  1437  0E9E                     	;# 
  1438  0E9F                     	;# 
  1439  0EA0                     	;# 
  1440  0EA1                     	;# 
  1441  0EA2                     	;# 
  1442  0EA3                     	;# 
  1443  0EA4                     	;# 
  1444  0EA5                     	;# 
  1445  0EA6                     	;# 
  1446  0EA7                     	;# 
  1447  0F0F                     	;# 
  1448  0F10                     	;# 
  1449  0F11                     	;# 
  1450  0F12                     	;# 
  1451  0F13                     	;# 
  1452  0F14                     	;# 
  1453  0F15                     	;# 
  1454  0F16                     	;# 
  1455  0F17                     	;# 
  1456  0F18                     	;# 
  1457  0F19                     	;# 
  1458  0F1A                     	;# 
  1459  0F1B                     	;# 
  1460  0F1C                     	;# 
  1461  0F1D                     	;# 
  1462  0F1E                     	;# 
  1463  0F1F                     	;# 
  1464  0F20                     	;# 
  1465  0F21                     	;# 
  1466  0F22                     	;# 
  1467  0F23                     	;# 
  1468  0F24                     	;# 
  1469  0F25                     	;# 
  1470  0F26                     	;# 
  1471  0F27                     	;# 
  1472  0F28                     	;# 
  1473  0F29                     	;# 
  1474  0F2A                     	;# 
  1475  0F2B                     	;# 
  1476  0F2C                     	;# 
  1477  0F2D                     	;# 
  1478  0F2E                     	;# 
  1479  0F2F                     	;# 
  1480  0F30                     	;# 
  1481  0F31                     	;# 
  1482  0F32                     	;# 
  1483  0F33                     	;# 
  1484  0F34                     	;# 
  1485  0F35                     	;# 
  1486  0F36                     	;# 
  1487  0F37                     	;# 
  1488  0FE4                     	;# 
  1489  0FE5                     	;# 
  1490  0FE6                     	;# 
  1491  0FE7                     	;# 
  1492  0FE8                     	;# 
  1493  0FE9                     	;# 
  1494  0FEA                     	;# 
  1495  0FEB                     	;# 
  1496  0FED                     	;# 
  1497  0FEE                     	;# 
  1498  0FEF                     	;# 
  1499  0000                     	;# 
  1500  0001                     	;# 
  1501  0002                     	;# 
  1502  0003                     	;# 
  1503  0004                     	;# 
  1504  0005                     	;# 
  1505  0006                     	;# 
  1506  0007                     	;# 
  1507  0008                     	;# 
  1508  0009                     	;# 
  1509  000A                     	;# 
  1510  000B                     	;# 
  1511  000C                     	;# 
  1512  000D                     	;# 
  1513  000E                     	;# 
  1514  0010                     	;# 
  1515  0011                     	;# 
  1516  0012                     	;# 
  1517  0013                     	;# 
  1518  0014                     	;# 
  1519  0015                     	;# 
  1520  0015                     	;# 
  1521  0016                     	;# 
  1522  0016                     	;# 
  1523  0017                     	;# 
  1524  0018                     	;# 
  1525  0019                     	;# 
  1526  0019                     	;# 
  1527  001A                     	;# 
  1528  001B                     	;# 
  1529  001C                     	;# 
  1530  001D                     	;# 
  1531  001E                     	;# 
  1532  001F                     	;# 
  1533  008C                     	;# 
  1534  008D                     	;# 
  1535  008E                     	;# 
  1536  0090                     	;# 
  1537  0091                     	;# 
  1538  0092                     	;# 
  1539  0093                     	;# 
  1540  0094                     	;# 
  1541  0097                     	;# 
  1542  009B                     	;# 
  1543  009B                     	;# 
  1544  009C                     	;# 
  1545  009D                     	;# 
  1546  009E                     	;# 
  1547  009F                     	;# 
  1548  010C                     	;# 
  1549  010D                     	;# 
  1550  010E                     	;# 
  1551  0111                     	;# 
  1552  0112                     	;# 
  1553  0113                     	;# 
  1554  0114                     	;# 
  1555  0115                     	;# 
  1556  0116                     	;# 
  1557  0117                     	;# 
  1558  0118                     	;# 
  1559  0119                     	;# 
  1560  018C                     	;# 
  1561  018D                     	;# 
  1562  018E                     	;# 
  1563  0197                     	;# 
  1564  0199                     	;# 
  1565  0199                     	;# 
  1566  0199                     	;# 
  1567  019A                     	;# 
  1568  019A                     	;# 
  1569  019A                     	;# 
  1570  019B                     	;# 
  1571  019B                     	;# 
  1572  019B                     	;# 
  1573  019B                     	;# 
  1574  019B                     	;# 
  1575  019C                     	;# 
  1576  019C                     	;# 
  1577  019C                     	;# 
  1578  019D                     	;# 
  1579  019D                     	;# 
  1580  019D                     	;# 
  1581  019E                     	;# 
  1582  019E                     	;# 
  1583  019E                     	;# 
  1584  019F                     	;# 
  1585  019F                     	;# 
  1586  019F                     	;# 
  1587  019F                     	;# 
  1588  019F                     	;# 
  1589  020C                     	;# 
  1590  020D                     	;# 
  1591  020E                     	;# 
  1592  0211                     	;# 
  1593  0211                     	;# 
  1594  0212                     	;# 
  1595  0212                     	;# 
  1596  0213                     	;# 
  1597  0213                     	;# 
  1598  0214                     	;# 
  1599  0214                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0216                     	;# 
  1605  0216                     	;# 
  1606  0217                     	;# 
  1607  0217                     	;# 
  1608  0219                     	;# 
  1609  021A                     	;# 
  1610  021B                     	;# 
  1611  021C                     	;# 
  1612  021D                     	;# 
  1613  021D                     	;# 
  1614  021E                     	;# 
  1615  021F                     	;# 
  1616  028C                     	;# 
  1617  028D                     	;# 
  1618  028E                     	;# 
  1619  0291                     	;# 
  1620  0291                     	;# 
  1621  0292                     	;# 
  1622  0293                     	;# 
  1623  0294                     	;# 
  1624  0295                     	;# 
  1625  0295                     	;# 
  1626  0296                     	;# 
  1627  0297                     	;# 
  1628  0298                     	;# 
  1629  029F                     	;# 
  1630  030C                     	;# 
  1631  030D                     	;# 
  1632  030E                     	;# 
  1633  0311                     	;# 
  1634  0311                     	;# 
  1635  0312                     	;# 
  1636  0313                     	;# 
  1637  0314                     	;# 
  1638  0315                     	;# 
  1639  0315                     	;# 
  1640  0316                     	;# 
  1641  0317                     	;# 
  1642  0318                     	;# 
  1643  038C                     	;# 
  1644  038D                     	;# 
  1645  038E                     	;# 
  1646  0391                     	;# 
  1647  0392                     	;# 
  1648  0393                     	;# 
  1649  0394                     	;# 
  1650  0395                     	;# 
  1651  0396                     	;# 
  1652  0397                     	;# 
  1653  0398                     	;# 
  1654  0399                     	;# 
  1655  039A                     	;# 
  1656  039C                     	;# 
  1657  039D                     	;# 
  1658  039E                     	;# 
  1659  039F                     	;# 
  1660  0411                     	;# 
  1661  0411                     	;# 
  1662  0412                     	;# 
  1663  0413                     	;# 
  1664  0414                     	;# 
  1665  0415                     	;# 
  1666  0416                     	;# 
  1667  0417                     	;# 
  1668  0418                     	;# 
  1669  0418                     	;# 
  1670  0419                     	;# 
  1671  041A                     	;# 
  1672  041B                     	;# 
  1673  041C                     	;# 
  1674  041D                     	;# 
  1675  041E                     	;# 
  1676  041F                     	;# 
  1677  0498                     	;# 
  1678  0498                     	;# 
  1679  0499                     	;# 
  1680  049A                     	;# 
  1681  049B                     	;# 
  1682  049B                     	;# 
  1683  049C                     	;# 
  1684  049D                     	;# 
  1685  049E                     	;# 
  1686  049F                     	;# 
  1687  0617                     	;# 
  1688  0618                     	;# 
  1689  0619                     	;# 
  1690  0619                     	;# 
  1691  061A                     	;# 
  1692  061B                     	;# 
  1693  061C                     	;# 
  1694  061C                     	;# 
  1695  061F                     	;# 
  1696  0691                     	;# 
  1697  0692                     	;# 
  1698  0693                     	;# 
  1699  0694                     	;# 
  1700  0695                     	;# 
  1701  0696                     	;# 
  1702  0697                     	;# 
  1703  0698                     	;# 
  1704  0699                     	;# 
  1705  0711                     	;# 
  1706  0712                     	;# 
  1707  0713                     	;# 
  1708  0714                     	;# 
  1709  0715                     	;# 
  1710  0716                     	;# 
  1711  0717                     	;# 
  1712  0718                     	;# 
  1713  0719                     	;# 
  1714  0891                     	;# 
  1715  0891                     	;# 
  1716  0891                     	;# 
  1717  0891                     	;# 
  1718  0891                     	;# 
  1719  0891                     	;# 
  1720  0892                     	;# 
  1721  0892                     	;# 
  1722  0892                     	;# 
  1723  0893                     	;# 
  1724  0893                     	;# 
  1725  0893                     	;# 
  1726  0893                     	;# 
  1727  0893                     	;# 
  1728  0893                     	;# 
  1729  0894                     	;# 
  1730  0894                     	;# 
  1731  0894                     	;# 
  1732  0895                     	;# 
  1733  0895                     	;# 
  1734  0895                     	;# 
  1735  0896                     	;# 
  1736  0896                     	;# 
  1737  0896                     	;# 
  1738  089B                     	;# 
  1739  0911                     	;# 
  1740  0912                     	;# 
  1741  0913                     	;# 
  1742  0914                     	;# 
  1743  0915                     	;# 
  1744  0916                     	;# 
  1745  0918                     	;# 
  1746  0919                     	;# 
  1747  091A                     	;# 
  1748  091B                     	;# 
  1749  091C                     	;# 
  1750  091D                     	;# 
  1751  091E                     	;# 
  1752  091F                     	;# 
  1753  0E0F                     	;# 
  1754  0E10                     	;# 
  1755  0E11                     	;# 
  1756  0E12                     	;# 
  1757  0E13                     	;# 
  1758  0E14                     	;# 
  1759  0E15                     	;# 
  1760  0E16                     	;# 
  1761  0E17                     	;# 
  1762  0E18                     	;# 
  1763  0E19                     	;# 
  1764  0E1A                     	;# 
  1765  0E1B                     	;# 
  1766  0E1C                     	;# 
  1767  0E1D                     	;# 
  1768  0E1E                     	;# 
  1769  0E1F                     	;# 
  1770  0E20                     	;# 
  1771  0E21                     	;# 
  1772  0E22                     	;# 
  1773  0E24                     	;# 
  1774  0E25                     	;# 
  1775  0E28                     	;# 
  1776  0E29                     	;# 
  1777  0E2A                     	;# 
  1778  0E2B                     	;# 
  1779  0E2C                     	;# 
  1780  0E2D                     	;# 
  1781  0E2E                     	;# 
  1782  0E2F                     	;# 
  1783  0E90                     	;# 
  1784  0E91                     	;# 
  1785  0E92                     	;# 
  1786  0E94                     	;# 
  1787  0E95                     	;# 
  1788  0E9C                     	;# 
  1789  0E9D                     	;# 
  1790  0E9E                     	;# 
  1791  0E9F                     	;# 
  1792  0EA0                     	;# 
  1793  0EA1                     	;# 
  1794  0EA2                     	;# 
  1795  0EA3                     	;# 
  1796  0EA4                     	;# 
  1797  0EA5                     	;# 
  1798  0EA6                     	;# 
  1799  0EA7                     	;# 
  1800  0F0F                     	;# 
  1801  0F10                     	;# 
  1802  0F11                     	;# 
  1803  0F12                     	;# 
  1804  0F13                     	;# 
  1805  0F14                     	;# 
  1806  0F15                     	;# 
  1807  0F16                     	;# 
  1808  0F17                     	;# 
  1809  0F18                     	;# 
  1810  0F19                     	;# 
  1811  0F1A                     	;# 
  1812  0F1B                     	;# 
  1813  0F1C                     	;# 
  1814  0F1D                     	;# 
  1815  0F1E                     	;# 
  1816  0F1F                     	;# 
  1817  0F20                     	;# 
  1818  0F21                     	;# 
  1819  0F22                     	;# 
  1820  0F23                     	;# 
  1821  0F24                     	;# 
  1822  0F25                     	;# 
  1823  0F26                     	;# 
  1824  0F27                     	;# 
  1825  0F28                     	;# 
  1826  0F29                     	;# 
  1827  0F2A                     	;# 
  1828  0F2B                     	;# 
  1829  0F2C                     	;# 
  1830  0F2D                     	;# 
  1831  0F2E                     	;# 
  1832  0F2F                     	;# 
  1833  0F30                     	;# 
  1834  0F31                     	;# 
  1835  0F32                     	;# 
  1836  0F33                     	;# 
  1837  0F34                     	;# 
  1838  0F35                     	;# 
  1839  0F36                     	;# 
  1840  0F37                     	;# 
  1841  0FE4                     	;# 
  1842  0FE5                     	;# 
  1843  0FE6                     	;# 
  1844  0FE7                     	;# 
  1845  0FE8                     	;# 
  1846  0FE9                     	;# 
  1847  0FEA                     	;# 
  1848  0FEB                     	;# 
  1849  0FED                     	;# 
  1850  0FEE                     	;# 
  1851  0FEF                     	;# 
  1852  0000                     	;# 
  1853  0001                     	;# 
  1854  0002                     	;# 
  1855  0003                     	;# 
  1856  0004                     	;# 
  1857  0005                     	;# 
  1858  0006                     	;# 
  1859  0007                     	;# 
  1860  0008                     	;# 
  1861  0009                     	;# 
  1862  000A                     	;# 
  1863  000B                     	;# 
  1864  000C                     	;# 
  1865  000D                     	;# 
  1866  000E                     	;# 
  1867  0010                     	;# 
  1868  0011                     	;# 
  1869  0012                     	;# 
  1870  0013                     	;# 
  1871  0014                     	;# 
  1872  0015                     	;# 
  1873  0015                     	;# 
  1874  0016                     	;# 
  1875  0016                     	;# 
  1876  0017                     	;# 
  1877  0018                     	;# 
  1878  0019                     	;# 
  1879  0019                     	;# 
  1880  001A                     	;# 
  1881  001B                     	;# 
  1882  001C                     	;# 
  1883  001D                     	;# 
  1884  001E                     	;# 
  1885  001F                     	;# 
  1886  008C                     	;# 
  1887  008D                     	;# 
  1888  008E                     	;# 
  1889  0090                     	;# 
  1890  0091                     	;# 
  1891  0092                     	;# 
  1892  0093                     	;# 
  1893  0094                     	;# 
  1894  0097                     	;# 
  1895  009B                     	;# 
  1896  009B                     	;# 
  1897  009C                     	;# 
  1898  009D                     	;# 
  1899  009E                     	;# 
  1900  009F                     	;# 
  1901  010C                     	;# 
  1902  010D                     	;# 
  1903  010E                     	;# 
  1904  0111                     	;# 
  1905  0112                     	;# 
  1906  0113                     	;# 
  1907  0114                     	;# 
  1908  0115                     	;# 
  1909  0116                     	;# 
  1910  0117                     	;# 
  1911  0118                     	;# 
  1912  0119                     	;# 
  1913  018C                     	;# 
  1914  018D                     	;# 
  1915  018E                     	;# 
  1916  0197                     	;# 
  1917  0199                     	;# 
  1918  0199                     	;# 
  1919  0199                     	;# 
  1920  019A                     	;# 
  1921  019A                     	;# 
  1922  019A                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019C                     	;# 
  1929  019C                     	;# 
  1930  019C                     	;# 
  1931  019D                     	;# 
  1932  019D                     	;# 
  1933  019D                     	;# 
  1934  019E                     	;# 
  1935  019E                     	;# 
  1936  019E                     	;# 
  1937  019F                     	;# 
  1938  019F                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  020C                     	;# 
  1943  020D                     	;# 
  1944  020E                     	;# 
  1945  0211                     	;# 
  1946  0211                     	;# 
  1947  0212                     	;# 
  1948  0212                     	;# 
  1949  0213                     	;# 
  1950  0213                     	;# 
  1951  0214                     	;# 
  1952  0214                     	;# 
  1953  0215                     	;# 
  1954  0215                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0216                     	;# 
  1958  0216                     	;# 
  1959  0217                     	;# 
  1960  0217                     	;# 
  1961  0219                     	;# 
  1962  021A                     	;# 
  1963  021B                     	;# 
  1964  021C                     	;# 
  1965  021D                     	;# 
  1966  021D                     	;# 
  1967  021E                     	;# 
  1968  021F                     	;# 
  1969  028C                     	;# 
  1970  028D                     	;# 
  1971  028E                     	;# 
  1972  0291                     	;# 
  1973  0291                     	;# 
  1974  0292                     	;# 
  1975  0293                     	;# 
  1976  0294                     	;# 
  1977  0295                     	;# 
  1978  0295                     	;# 
  1979  0296                     	;# 
  1980  0297                     	;# 
  1981  0298                     	;# 
  1982  029F                     	;# 
  1983  030C                     	;# 
  1984  030D                     	;# 
  1985  030E                     	;# 
  1986  0311                     	;# 
  1987  0311                     	;# 
  1988  0312                     	;# 
  1989  0313                     	;# 
  1990  0314                     	;# 
  1991  0315                     	;# 
  1992  0315                     	;# 
  1993  0316                     	;# 
  1994  0317                     	;# 
  1995  0318                     	;# 
  1996  038C                     	;# 
  1997  038D                     	;# 
  1998  038E                     	;# 
  1999  0391                     	;# 
  2000  0392                     	;# 
  2001  0393                     	;# 
  2002  0394                     	;# 
  2003  0395                     	;# 
  2004  0396                     	;# 
  2005  0397                     	;# 
  2006  0398                     	;# 
  2007  0399                     	;# 
  2008  039A                     	;# 
  2009  039C                     	;# 
  2010  039D                     	;# 
  2011  039E                     	;# 
  2012  039F                     	;# 
  2013  0411                     	;# 
  2014  0411                     	;# 
  2015  0412                     	;# 
  2016  0413                     	;# 
  2017  0414                     	;# 
  2018  0415                     	;# 
  2019  0416                     	;# 
  2020  0417                     	;# 
  2021  0418                     	;# 
  2022  0418                     	;# 
  2023  0419                     	;# 
  2024  041A                     	;# 
  2025  041B                     	;# 
  2026  041C                     	;# 
  2027  041D                     	;# 
  2028  041E                     	;# 
  2029  041F                     	;# 
  2030  0498                     	;# 
  2031  0498                     	;# 
  2032  0499                     	;# 
  2033  049A                     	;# 
  2034  049B                     	;# 
  2035  049B                     	;# 
  2036  049C                     	;# 
  2037  049D                     	;# 
  2038  049E                     	;# 
  2039  049F                     	;# 
  2040  0617                     	;# 
  2041  0618                     	;# 
  2042  0619                     	;# 
  2043  0619                     	;# 
  2044  061A                     	;# 
  2045  061B                     	;# 
  2046  061C                     	;# 
  2047  061C                     	;# 
  2048  061F                     	;# 
  2049  0691                     	;# 
  2050  0692                     	;# 
  2051  0693                     	;# 
  2052  0694                     	;# 
  2053  0695                     	;# 
  2054  0696                     	;# 
  2055  0697                     	;# 
  2056  0698                     	;# 
  2057  0699                     	;# 
  2058  0711                     	;# 
  2059  0712                     	;# 
  2060  0713                     	;# 
  2061  0714                     	;# 
  2062  0715                     	;# 
  2063  0716                     	;# 
  2064  0717                     	;# 
  2065  0718                     	;# 
  2066  0719                     	;# 
  2067  0891                     	;# 
  2068  0891                     	;# 
  2069  0891                     	;# 
  2070  0891                     	;# 
  2071  0891                     	;# 
  2072  0891                     	;# 
  2073  0892                     	;# 
  2074  0892                     	;# 
  2075  0892                     	;# 
  2076  0893                     	;# 
  2077  0893                     	;# 
  2078  0893                     	;# 
  2079  0893                     	;# 
  2080  0893                     	;# 
  2081  0893                     	;# 
  2082  0894                     	;# 
  2083  0894                     	;# 
  2084  0894                     	;# 
  2085  0895                     	;# 
  2086  0895                     	;# 
  2087  0895                     	;# 
  2088  0896                     	;# 
  2089  0896                     	;# 
  2090  0896                     	;# 
  2091  089B                     	;# 
  2092  0911                     	;# 
  2093  0912                     	;# 
  2094  0913                     	;# 
  2095  0914                     	;# 
  2096  0915                     	;# 
  2097  0916                     	;# 
  2098  0918                     	;# 
  2099  0919                     	;# 
  2100  091A                     	;# 
  2101  091B                     	;# 
  2102  091C                     	;# 
  2103  091D                     	;# 
  2104  091E                     	;# 
  2105  091F                     	;# 
  2106  0E0F                     	;# 
  2107  0E10                     	;# 
  2108  0E11                     	;# 
  2109  0E12                     	;# 
  2110  0E13                     	;# 
  2111  0E14                     	;# 
  2112  0E15                     	;# 
  2113  0E16                     	;# 
  2114  0E17                     	;# 
  2115  0E18                     	;# 
  2116  0E19                     	;# 
  2117  0E1A                     	;# 
  2118  0E1B                     	;# 
  2119  0E1C                     	;# 
  2120  0E1D                     	;# 
  2121  0E1E                     	;# 
  2122  0E1F                     	;# 
  2123  0E20                     	;# 
  2124  0E21                     	;# 
  2125  0E22                     	;# 
  2126  0E24                     	;# 
  2127  0E25                     	;# 
  2128  0E28                     	;# 
  2129  0E29                     	;# 
  2130  0E2A                     	;# 
  2131  0E2B                     	;# 
  2132  0E2C                     	;# 
  2133  0E2D                     	;# 
  2134  0E2E                     	;# 
  2135  0E2F                     	;# 
  2136  0E90                     	;# 
  2137  0E91                     	;# 
  2138  0E92                     	;# 
  2139  0E94                     	;# 
  2140  0E95                     	;# 
  2141  0E9C                     	;# 
  2142  0E9D                     	;# 
  2143  0E9E                     	;# 
  2144  0E9F                     	;# 
  2145  0EA0                     	;# 
  2146  0EA1                     	;# 
  2147  0EA2                     	;# 
  2148  0EA3                     	;# 
  2149  0EA4                     	;# 
  2150  0EA5                     	;# 
  2151  0EA6                     	;# 
  2152  0EA7                     	;# 
  2153  0F0F                     	;# 
  2154  0F10                     	;# 
  2155  0F11                     	;# 
  2156  0F12                     	;# 
  2157  0F13                     	;# 
  2158  0F14                     	;# 
  2159  0F15                     	;# 
  2160  0F16                     	;# 
  2161  0F17                     	;# 
  2162  0F18                     	;# 
  2163  0F19                     	;# 
  2164  0F1A                     	;# 
  2165  0F1B                     	;# 
  2166  0F1C                     	;# 
  2167  0F1D                     	;# 
  2168  0F1E                     	;# 
  2169  0F1F                     	;# 
  2170  0F20                     	;# 
  2171  0F21                     	;# 
  2172  0F22                     	;# 
  2173  0F23                     	;# 
  2174  0F24                     	;# 
  2175  0F25                     	;# 
  2176  0F26                     	;# 
  2177  0F27                     	;# 
  2178  0F28                     	;# 
  2179  0F29                     	;# 
  2180  0F2A                     	;# 
  2181  0F2B                     	;# 
  2182  0F2C                     	;# 
  2183  0F2D                     	;# 
  2184  0F2E                     	;# 
  2185  0F2F                     	;# 
  2186  0F30                     	;# 
  2187  0F31                     	;# 
  2188  0F32                     	;# 
  2189  0F33                     	;# 
  2190  0F34                     	;# 
  2191  0F35                     	;# 
  2192  0F36                     	;# 
  2193  0F37                     	;# 
  2194  0FE4                     	;# 
  2195  0FE5                     	;# 
  2196  0FE6                     	;# 
  2197  0FE7                     	;# 
  2198  0FE8                     	;# 
  2199  0FE9                     	;# 
  2200  0FEA                     	;# 
  2201  0FEB                     	;# 
  2202  0FED                     	;# 
  2203  0FEE                     	;# 
  2204  0FEF                     	;# 
  2205  0000                     	;# 
  2206  0001                     	;# 
  2207  0002                     	;# 
  2208  0003                     	;# 
  2209  0004                     	;# 
  2210  0005                     	;# 
  2211  0006                     	;# 
  2212  0007                     	;# 
  2213  0008                     	;# 
  2214  0009                     	;# 
  2215  000A                     	;# 
  2216  000B                     	;# 
  2217  000C                     	;# 
  2218  000D                     	;# 
  2219  000E                     	;# 
  2220  0010                     	;# 
  2221  0011                     	;# 
  2222  0012                     	;# 
  2223  0013                     	;# 
  2224  0014                     	;# 
  2225  0015                     	;# 
  2226  0015                     	;# 
  2227  0016                     	;# 
  2228  0016                     	;# 
  2229  0017                     	;# 
  2230  0018                     	;# 
  2231  0019                     	;# 
  2232  0019                     	;# 
  2233  001A                     	;# 
  2234  001B                     	;# 
  2235  001C                     	;# 
  2236  001D                     	;# 
  2237  001E                     	;# 
  2238  001F                     	;# 
  2239  008C                     	;# 
  2240  008D                     	;# 
  2241  008E                     	;# 
  2242  0090                     	;# 
  2243  0091                     	;# 
  2244  0092                     	;# 
  2245  0093                     	;# 
  2246  0094                     	;# 
  2247  0097                     	;# 
  2248  009B                     	;# 
  2249  009B                     	;# 
  2250  009C                     	;# 
  2251  009D                     	;# 
  2252  009E                     	;# 
  2253  009F                     	;# 
  2254  010C                     	;# 
  2255  010D                     	;# 
  2256  010E                     	;# 
  2257  0111                     	;# 
  2258  0112                     	;# 
  2259  0113                     	;# 
  2260  0114                     	;# 
  2261  0115                     	;# 
  2262  0116                     	;# 
  2263  0117                     	;# 
  2264  0118                     	;# 
  2265  0119                     	;# 
  2266  018C                     	;# 
  2267  018D                     	;# 
  2268  018E                     	;# 
  2269  0197                     	;# 
  2270  0199                     	;# 
  2271  0199                     	;# 
  2272  0199                     	;# 
  2273  019A                     	;# 
  2274  019A                     	;# 
  2275  019A                     	;# 
  2276  019B                     	;# 
  2277  019B                     	;# 
  2278  019B                     	;# 
  2279  019B                     	;# 
  2280  019B                     	;# 
  2281  019C                     	;# 
  2282  019C                     	;# 
  2283  019C                     	;# 
  2284  019D                     	;# 
  2285  019D                     	;# 
  2286  019D                     	;# 
  2287  019E                     	;# 
  2288  019E                     	;# 
  2289  019E                     	;# 
  2290  019F                     	;# 
  2291  019F                     	;# 
  2292  019F                     	;# 
  2293  019F                     	;# 
  2294  019F                     	;# 
  2295  020C                     	;# 
  2296  020D                     	;# 
  2297  020E                     	;# 
  2298  0211                     	;# 
  2299  0211                     	;# 
  2300  0212                     	;# 
  2301  0212                     	;# 
  2302  0213                     	;# 
  2303  0213                     	;# 
  2304  0214                     	;# 
  2305  0214                     	;# 
  2306  0215                     	;# 
  2307  0215                     	;# 
  2308  0215                     	;# 
  2309  0215                     	;# 
  2310  0216                     	;# 
  2311  0216                     	;# 
  2312  0217                     	;# 
  2313  0217                     	;# 
  2314  0219                     	;# 
  2315  021A                     	;# 
  2316  021B                     	;# 
  2317  021C                     	;# 
  2318  021D                     	;# 
  2319  021D                     	;# 
  2320  021E                     	;# 
  2321  021F                     	;# 
  2322  028C                     	;# 
  2323  028D                     	;# 
  2324  028E                     	;# 
  2325  0291                     	;# 
  2326  0291                     	;# 
  2327  0292                     	;# 
  2328  0293                     	;# 
  2329  0294                     	;# 
  2330  0295                     	;# 
  2331  0295                     	;# 
  2332  0296                     	;# 
  2333  0297                     	;# 
  2334  0298                     	;# 
  2335  029F                     	;# 
  2336  030C                     	;# 
  2337  030D                     	;# 
  2338  030E                     	;# 
  2339  0311                     	;# 
  2340  0311                     	;# 
  2341  0312                     	;# 
  2342  0313                     	;# 
  2343  0314                     	;# 
  2344  0315                     	;# 
  2345  0315                     	;# 
  2346  0316                     	;# 
  2347  0317                     	;# 
  2348  0318                     	;# 
  2349  038C                     	;# 
  2350  038D                     	;# 
  2351  038E                     	;# 
  2352  0391                     	;# 
  2353  0392                     	;# 
  2354  0393                     	;# 
  2355  0394                     	;# 
  2356  0395                     	;# 
  2357  0396                     	;# 
  2358  0397                     	;# 
  2359  0398                     	;# 
  2360  0399                     	;# 
  2361  039A                     	;# 
  2362  039C                     	;# 
  2363  039D                     	;# 
  2364  039E                     	;# 
  2365  039F                     	;# 
  2366  0411                     	;# 
  2367  0411                     	;# 
  2368  0412                     	;# 
  2369  0413                     	;# 
  2370  0414                     	;# 
  2371  0415                     	;# 
  2372  0416                     	;# 
  2373  0417                     	;# 
  2374  0418                     	;# 
  2375  0418                     	;# 
  2376  0419                     	;# 
  2377  041A                     	;# 
  2378  041B                     	;# 
  2379  041C                     	;# 
  2380  041D                     	;# 
  2381  041E                     	;# 
  2382  041F                     	;# 
  2383  0498                     	;# 
  2384  0498                     	;# 
  2385  0499                     	;# 
  2386  049A                     	;# 
  2387  049B                     	;# 
  2388  049B                     	;# 
  2389  049C                     	;# 
  2390  049D                     	;# 
  2391  049E                     	;# 
  2392  049F                     	;# 
  2393  0617                     	;# 
  2394  0618                     	;# 
  2395  0619                     	;# 
  2396  0619                     	;# 
  2397  061A                     	;# 
  2398  061B                     	;# 
  2399  061C                     	;# 
  2400  061C                     	;# 
  2401  061F                     	;# 
  2402  0691                     	;# 
  2403  0692                     	;# 
  2404  0693                     	;# 
  2405  0694                     	;# 
  2406  0695                     	;# 
  2407  0696                     	;# 
  2408  0697                     	;# 
  2409  0698                     	;# 
  2410  0699                     	;# 
  2411  0711                     	;# 
  2412  0712                     	;# 
  2413  0713                     	;# 
  2414  0714                     	;# 
  2415  0715                     	;# 
  2416  0716                     	;# 
  2417  0717                     	;# 
  2418  0718                     	;# 
  2419  0719                     	;# 
  2420  0891                     	;# 
  2421  0891                     	;# 
  2422  0891                     	;# 
  2423  0891                     	;# 
  2424  0891                     	;# 
  2425  0891                     	;# 
  2426  0892                     	;# 
  2427  0892                     	;# 
  2428  0892                     	;# 
  2429  0893                     	;# 
  2430  0893                     	;# 
  2431  0893                     	;# 
  2432  0893                     	;# 
  2433  0893                     	;# 
  2434  0893                     	;# 
  2435  0894                     	;# 
  2436  0894                     	;# 
  2437  0894                     	;# 
  2438  0895                     	;# 
  2439  0895                     	;# 
  2440  0895                     	;# 
  2441  0896                     	;# 
  2442  0896                     	;# 
  2443  0896                     	;# 
  2444  089B                     	;# 
  2445  0911                     	;# 
  2446  0912                     	;# 
  2447  0913                     	;# 
  2448  0914                     	;# 
  2449  0915                     	;# 
  2450  0916                     	;# 
  2451  0918                     	;# 
  2452  0919                     	;# 
  2453  091A                     	;# 
  2454  091B                     	;# 
  2455  091C                     	;# 
  2456  091D                     	;# 
  2457  091E                     	;# 
  2458  091F                     	;# 
  2459  0E0F                     	;# 
  2460  0E10                     	;# 
  2461  0E11                     	;# 
  2462  0E12                     	;# 
  2463  0E13                     	;# 
  2464  0E14                     	;# 
  2465  0E15                     	;# 
  2466  0E16                     	;# 
  2467  0E17                     	;# 
  2468  0E18                     	;# 
  2469  0E19                     	;# 
  2470  0E1A                     	;# 
  2471  0E1B                     	;# 
  2472  0E1C                     	;# 
  2473  0E1D                     	;# 
  2474  0E1E                     	;# 
  2475  0E1F                     	;# 
  2476  0E20                     	;# 
  2477  0E21                     	;# 
  2478  0E22                     	;# 
  2479  0E24                     	;# 
  2480  0E25                     	;# 
  2481  0E28                     	;# 
  2482  0E29                     	;# 
  2483  0E2A                     	;# 
  2484  0E2B                     	;# 
  2485  0E2C                     	;# 
  2486  0E2D                     	;# 
  2487  0E2E                     	;# 
  2488  0E2F                     	;# 
  2489  0E90                     	;# 
  2490  0E91                     	;# 
  2491  0E92                     	;# 
  2492  0E94                     	;# 
  2493  0E95                     	;# 
  2494  0E9C                     	;# 
  2495  0E9D                     	;# 
  2496  0E9E                     	;# 
  2497  0E9F                     	;# 
  2498  0EA0                     	;# 
  2499  0EA1                     	;# 
  2500  0EA2                     	;# 
  2501  0EA3                     	;# 
  2502  0EA4                     	;# 
  2503  0EA5                     	;# 
  2504  0EA6                     	;# 
  2505  0EA7                     	;# 
  2506  0F0F                     	;# 
  2507  0F10                     	;# 
  2508  0F11                     	;# 
  2509  0F12                     	;# 
  2510  0F13                     	;# 
  2511  0F14                     	;# 
  2512  0F15                     	;# 
  2513  0F16                     	;# 
  2514  0F17                     	;# 
  2515  0F18                     	;# 
  2516  0F19                     	;# 
  2517  0F1A                     	;# 
  2518  0F1B                     	;# 
  2519  0F1C                     	;# 
  2520  0F1D                     	;# 
  2521  0F1E                     	;# 
  2522  0F1F                     	;# 
  2523  0F20                     	;# 
  2524  0F21                     	;# 
  2525  0F22                     	;# 
  2526  0F23                     	;# 
  2527  0F24                     	;# 
  2528  0F25                     	;# 
  2529  0F26                     	;# 
  2530  0F27                     	;# 
  2531  0F28                     	;# 
  2532  0F29                     	;# 
  2533  0F2A                     	;# 
  2534  0F2B                     	;# 
  2535  0F2C                     	;# 
  2536  0F2D                     	;# 
  2537  0F2E                     	;# 
  2538  0F2F                     	;# 
  2539  0F30                     	;# 
  2540  0F31                     	;# 
  2541  0F32                     	;# 
  2542  0F33                     	;# 
  2543  0F34                     	;# 
  2544  0F35                     	;# 
  2545  0F36                     	;# 
  2546  0F37                     	;# 
  2547  0FE4                     	;# 
  2548  0FE5                     	;# 
  2549  0FE6                     	;# 
  2550  0FE7                     	;# 
  2551  0FE8                     	;# 
  2552  0FE9                     	;# 
  2553  0FEA                     	;# 
  2554  0FEB                     	;# 
  2555  0FED                     	;# 
  2556  0FEE                     	;# 
  2557  0FEF                     	;# 
  2558  0000                     	;# 
  2559  0001                     	;# 
  2560  0002                     	;# 
  2561  0003                     	;# 
  2562  0004                     	;# 
  2563  0005                     	;# 
  2564  0006                     	;# 
  2565  0007                     	;# 
  2566  0008                     	;# 
  2567  0009                     	;# 
  2568  000A                     	;# 
  2569  000B                     	;# 
  2570  000C                     	;# 
  2571  000D                     	;# 
  2572  000E                     	;# 
  2573  0010                     	;# 
  2574  0011                     	;# 
  2575  0012                     	;# 
  2576  0013                     	;# 
  2577  0014                     	;# 
  2578  0015                     	;# 
  2579  0015                     	;# 
  2580  0016                     	;# 
  2581  0016                     	;# 
  2582  0017                     	;# 
  2583  0018                     	;# 
  2584  0019                     	;# 
  2585  0019                     	;# 
  2586  001A                     	;# 
  2587  001B                     	;# 
  2588  001C                     	;# 
  2589  001D                     	;# 
  2590  001E                     	;# 
  2591  001F                     	;# 
  2592  008C                     	;# 
  2593  008D                     	;# 
  2594  008E                     	;# 
  2595  0090                     	;# 
  2596  0091                     	;# 
  2597  0092                     	;# 
  2598  0093                     	;# 
  2599  0094                     	;# 
  2600  0097                     	;# 
  2601  009B                     	;# 
  2602  009B                     	;# 
  2603  009C                     	;# 
  2604  009D                     	;# 
  2605  009E                     	;# 
  2606  009F                     	;# 
  2607  010C                     	;# 
  2608  010D                     	;# 
  2609  010E                     	;# 
  2610  0111                     	;# 
  2611  0112                     	;# 
  2612  0113                     	;# 
  2613  0114                     	;# 
  2614  0115                     	;# 
  2615  0116                     	;# 
  2616  0117                     	;# 
  2617  0118                     	;# 
  2618  0119                     	;# 
  2619  018C                     	;# 
  2620  018D                     	;# 
  2621  018E                     	;# 
  2622  0197                     	;# 
  2623  0199                     	;# 
  2624  0199                     	;# 
  2625  0199                     	;# 
  2626  019A                     	;# 
  2627  019A                     	;# 
  2628  019A                     	;# 
  2629  019B                     	;# 
  2630  019B                     	;# 
  2631  019B                     	;# 
  2632  019B                     	;# 
  2633  019B                     	;# 
  2634  019C                     	;# 
  2635  019C                     	;# 
  2636  019C                     	;# 
  2637  019D                     	;# 
  2638  019D                     	;# 
  2639  019D                     	;# 
  2640  019E                     	;# 
  2641  019E                     	;# 
  2642  019E                     	;# 
  2643  019F                     	;# 
  2644  019F                     	;# 
  2645  019F                     	;# 
  2646  019F                     	;# 
  2647  019F                     	;# 
  2648  020C                     	;# 
  2649  020D                     	;# 
  2650  020E                     	;# 
  2651  0211                     	;# 
  2652  0211                     	;# 
  2653  0212                     	;# 
  2654  0212                     	;# 
  2655  0213                     	;# 
  2656  0213                     	;# 
  2657  0214                     	;# 
  2658  0214                     	;# 
  2659  0215                     	;# 
  2660  0215                     	;# 
  2661  0215                     	;# 
  2662  0215                     	;# 
  2663  0216                     	;# 
  2664  0216                     	;# 
  2665  0217                     	;# 
  2666  0217                     	;# 
  2667  0219                     	;# 
  2668  021A                     	;# 
  2669  021B                     	;# 
  2670  021C                     	;# 
  2671  021D                     	;# 
  2672  021D                     	;# 
  2673  021E                     	;# 
  2674  021F                     	;# 
  2675  028C                     	;# 
  2676  028D                     	;# 
  2677  028E                     	;# 
  2678  0291                     	;# 
  2679  0291                     	;# 
  2680  0292                     	;# 
  2681  0293                     	;# 
  2682  0294                     	;# 
  2683  0295                     	;# 
  2684  0295                     	;# 
  2685  0296                     	;# 
  2686  0297                     	;# 
  2687  0298                     	;# 
  2688  029F                     	;# 
  2689  030C                     	;# 
  2690  030D                     	;# 
  2691  030E                     	;# 
  2692  0311                     	;# 
  2693  0311                     	;# 
  2694  0312                     	;# 
  2695  0313                     	;# 
  2696  0314                     	;# 
  2697  0315                     	;# 
  2698  0315                     	;# 
  2699  0316                     	;# 
  2700  0317                     	;# 
  2701  0318                     	;# 
  2702  038C                     	;# 
  2703  038D                     	;# 
  2704  038E                     	;# 
  2705  0391                     	;# 
  2706  0392                     	;# 
  2707  0393                     	;# 
  2708  0394                     	;# 
  2709  0395                     	;# 
  2710  0396                     	;# 
  2711  0397                     	;# 
  2712  0398                     	;# 
  2713  0399                     	;# 
  2714  039A                     	;# 
  2715  039C                     	;# 
  2716  039D                     	;# 
  2717  039E                     	;# 
  2718  039F                     	;# 
  2719  0411                     	;# 
  2720  0411                     	;# 
  2721  0412                     	;# 
  2722  0413                     	;# 
  2723  0414                     	;# 
  2724  0415                     	;# 
  2725  0416                     	;# 
  2726  0417                     	;# 
  2727  0418                     	;# 
  2728  0418                     	;# 
  2729  0419                     	;# 
  2730  041A                     	;# 
  2731  041B                     	;# 
  2732  041C                     	;# 
  2733  041D                     	;# 
  2734  041E                     	;# 
  2735  041F                     	;# 
  2736  0498                     	;# 
  2737  0498                     	;# 
  2738  0499                     	;# 
  2739  049A                     	;# 
  2740  049B                     	;# 
  2741  049B                     	;# 
  2742  049C                     	;# 
  2743  049D                     	;# 
  2744  049E                     	;# 
  2745  049F                     	;# 
  2746  0617                     	;# 
  2747  0618                     	;# 
  2748  0619                     	;# 
  2749  0619                     	;# 
  2750  061A                     	;# 
  2751  061B                     	;# 
  2752  061C                     	;# 
  2753  061C                     	;# 
  2754  061F                     	;# 
  2755  0691                     	;# 
  2756  0692                     	;# 
  2757  0693                     	;# 
  2758  0694                     	;# 
  2759  0695                     	;# 
  2760  0696                     	;# 
  2761  0697                     	;# 
  2762  0698                     	;# 
  2763  0699                     	;# 
  2764  0711                     	;# 
  2765  0712                     	;# 
  2766  0713                     	;# 
  2767  0714                     	;# 
  2768  0715                     	;# 
  2769  0716                     	;# 
  2770  0717                     	;# 
  2771  0718                     	;# 
  2772  0719                     	;# 
  2773  0891                     	;# 
  2774  0891                     	;# 
  2775  0891                     	;# 
  2776  0891                     	;# 
  2777  0891                     	;# 
  2778  0891                     	;# 
  2779  0892                     	;# 
  2780  0892                     	;# 
  2781  0892                     	;# 
  2782  0893                     	;# 
  2783  0893                     	;# 
  2784  0893                     	;# 
  2785  0893                     	;# 
  2786  0893                     	;# 
  2787  0893                     	;# 
  2788  0894                     	;# 
  2789  0894                     	;# 
  2790  0894                     	;# 
  2791  0895                     	;# 
  2792  0895                     	;# 
  2793  0895                     	;# 
  2794  0896                     	;# 
  2795  0896                     	;# 
  2796  0896                     	;# 
  2797  089B                     	;# 
  2798  0911                     	;# 
  2799  0912                     	;# 
  2800  0913                     	;# 
  2801  0914                     	;# 
  2802  0915                     	;# 
  2803  0916                     	;# 
  2804  0918                     	;# 
  2805  0919                     	;# 
  2806  091A                     	;# 
  2807  091B                     	;# 
  2808  091C                     	;# 
  2809  091D                     	;# 
  2810  091E                     	;# 
  2811  091F                     	;# 
  2812  0E0F                     	;# 
  2813  0E10                     	;# 
  2814  0E11                     	;# 
  2815  0E12                     	;# 
  2816  0E13                     	;# 
  2817  0E14                     	;# 
  2818  0E15                     	;# 
  2819  0E16                     	;# 
  2820  0E17                     	;# 
  2821  0E18                     	;# 
  2822  0E19                     	;# 
  2823  0E1A                     	;# 
  2824  0E1B                     	;# 
  2825  0E1C                     	;# 
  2826  0E1D                     	;# 
  2827  0E1E                     	;# 
  2828  0E1F                     	;# 
  2829  0E20                     	;# 
  2830  0E21                     	;# 
  2831  0E22                     	;# 
  2832  0E24                     	;# 
  2833  0E25                     	;# 
  2834  0E28                     	;# 
  2835  0E29                     	;# 
  2836  0E2A                     	;# 
  2837  0E2B                     	;# 
  2838  0E2C                     	;# 
  2839  0E2D                     	;# 
  2840  0E2E                     	;# 
  2841  0E2F                     	;# 
  2842  0E90                     	;# 
  2843  0E91                     	;# 
  2844  0E92                     	;# 
  2845  0E94                     	;# 
  2846  0E95                     	;# 
  2847  0E9C                     	;# 
  2848  0E9D                     	;# 
  2849  0E9E                     	;# 
  2850  0E9F                     	;# 
  2851  0EA0                     	;# 
  2852  0EA1                     	;# 
  2853  0EA2                     	;# 
  2854  0EA3                     	;# 
  2855  0EA4                     	;# 
  2856  0EA5                     	;# 
  2857  0EA6                     	;# 
  2858  0EA7                     	;# 
  2859  0F0F                     	;# 
  2860  0F10                     	;# 
  2861  0F11                     	;# 
  2862  0F12                     	;# 
  2863  0F13                     	;# 
  2864  0F14                     	;# 
  2865  0F15                     	;# 
  2866  0F16                     	;# 
  2867  0F17                     	;# 
  2868  0F18                     	;# 
  2869  0F19                     	;# 
  2870  0F1A                     	;# 
  2871  0F1B                     	;# 
  2872  0F1C                     	;# 
  2873  0F1D                     	;# 
  2874  0F1E                     	;# 
  2875  0F1F                     	;# 
  2876  0F20                     	;# 
  2877  0F21                     	;# 
  2878  0F22                     	;# 
  2879  0F23                     	;# 
  2880  0F24                     	;# 
  2881  0F25                     	;# 
  2882  0F26                     	;# 
  2883  0F27                     	;# 
  2884  0F28                     	;# 
  2885  0F29                     	;# 
  2886  0F2A                     	;# 
  2887  0F2B                     	;# 
  2888  0F2C                     	;# 
  2889  0F2D                     	;# 
  2890  0F2E                     	;# 
  2891  0F2F                     	;# 
  2892  0F30                     	;# 
  2893  0F31                     	;# 
  2894  0F32                     	;# 
  2895  0F33                     	;# 
  2896  0F34                     	;# 
  2897  0F35                     	;# 
  2898  0F36                     	;# 
  2899  0F37                     	;# 
  2900  0FE4                     	;# 
  2901  0FE5                     	;# 
  2902  0FE6                     	;# 
  2903  0FE7                     	;# 
  2904  0FE8                     	;# 
  2905  0FE9                     	;# 
  2906  0FEA                     	;# 
  2907  0FEB                     	;# 
  2908  0FED                     	;# 
  2909  0FEE                     	;# 
  2910  0FEF                     	;# 
  2911  0000                     	;# 
  2912  0001                     	;# 
  2913  0002                     	;# 
  2914  0003                     	;# 
  2915  0004                     	;# 
  2916  0005                     	;# 
  2917  0006                     	;# 
  2918  0007                     	;# 
  2919  0008                     	;# 
  2920  0009                     	;# 
  2921  000A                     	;# 
  2922  000B                     	;# 
  2923  000C                     	;# 
  2924  000D                     	;# 
  2925  000E                     	;# 
  2926  0010                     	;# 
  2927  0011                     	;# 
  2928  0012                     	;# 
  2929  0013                     	;# 
  2930  0014                     	;# 
  2931  0015                     	;# 
  2932  0015                     	;# 
  2933  0016                     	;# 
  2934  0016                     	;# 
  2935  0017                     	;# 
  2936  0018                     	;# 
  2937  0019                     	;# 
  2938  0019                     	;# 
  2939  001A                     	;# 
  2940  001B                     	;# 
  2941  001C                     	;# 
  2942  001D                     	;# 
  2943  001E                     	;# 
  2944  001F                     	;# 
  2945  008C                     	;# 
  2946  008D                     	;# 
  2947  008E                     	;# 
  2948  0090                     	;# 
  2949  0091                     	;# 
  2950  0092                     	;# 
  2951  0093                     	;# 
  2952  0094                     	;# 
  2953  0097                     	;# 
  2954  009B                     	;# 
  2955  009B                     	;# 
  2956  009C                     	;# 
  2957  009D                     	;# 
  2958  009E                     	;# 
  2959  009F                     	;# 
  2960  010C                     	;# 
  2961  010D                     	;# 
  2962  010E                     	;# 
  2963  0111                     	;# 
  2964  0112                     	;# 
  2965  0113                     	;# 
  2966  0114                     	;# 
  2967  0115                     	;# 
  2968  0116                     	;# 
  2969  0117                     	;# 
  2970  0118                     	;# 
  2971  0119                     	;# 
  2972  018C                     	;# 
  2973  018D                     	;# 
  2974  018E                     	;# 
  2975  0197                     	;# 
  2976  0199                     	;# 
  2977  0199                     	;# 
  2978  0199                     	;# 
  2979  019A                     	;# 
  2980  019A                     	;# 
  2981  019A                     	;# 
  2982  019B                     	;# 
  2983  019B                     	;# 
  2984  019B                     	;# 
  2985  019B                     	;# 
  2986  019B                     	;# 
  2987  019C                     	;# 
  2988  019C                     	;# 
  2989  019C                     	;# 
  2990  019D                     	;# 
  2991  019D                     	;# 
  2992  019D                     	;# 
  2993  019E                     	;# 
  2994  019E                     	;# 
  2995  019E                     	;# 
  2996  019F                     	;# 
  2997  019F                     	;# 
  2998  019F                     	;# 
  2999  019F                     	;# 
  3000  019F                     	;# 
  3001  020C                     	;# 
  3002  020D                     	;# 
  3003  020E                     	;# 
  3004  0211                     	;# 
  3005  0211                     	;# 
  3006  0212                     	;# 
  3007  0212                     	;# 
  3008  0213                     	;# 
  3009  0213                     	;# 
  3010  0214                     	;# 
  3011  0214                     	;# 
  3012  0215                     	;# 
  3013  0215                     	;# 
  3014  0215                     	;# 
  3015  0215                     	;# 
  3016  0216                     	;# 
  3017  0216                     	;# 
  3018  0217                     	;# 
  3019  0217                     	;# 
  3020  0219                     	;# 
  3021  021A                     	;# 
  3022  021B                     	;# 
  3023  021C                     	;# 
  3024  021D                     	;# 
  3025  021D                     	;# 
  3026  021E                     	;# 
  3027  021F                     	;# 
  3028  028C                     	;# 
  3029  028D                     	;# 
  3030  028E                     	;# 
  3031  0291                     	;# 
  3032  0291                     	;# 
  3033  0292                     	;# 
  3034  0293                     	;# 
  3035  0294                     	;# 
  3036  0295                     	;# 
  3037  0295                     	;# 
  3038  0296                     	;# 
  3039  0297                     	;# 
  3040  0298                     	;# 
  3041  029F                     	;# 
  3042  030C                     	;# 
  3043  030D                     	;# 
  3044  030E                     	;# 
  3045  0311                     	;# 
  3046  0311                     	;# 
  3047  0312                     	;# 
  3048  0313                     	;# 
  3049  0314                     	;# 
  3050  0315                     	;# 
  3051  0315                     	;# 
  3052  0316                     	;# 
  3053  0317                     	;# 
  3054  0318                     	;# 
  3055  038C                     	;# 
  3056  038D                     	;# 
  3057  038E                     	;# 
  3058  0391                     	;# 
  3059  0392                     	;# 
  3060  0393                     	;# 
  3061  0394                     	;# 
  3062  0395                     	;# 
  3063  0396                     	;# 
  3064  0397                     	;# 
  3065  0398                     	;# 
  3066  0399                     	;# 
  3067  039A                     	;# 
  3068  039C                     	;# 
  3069  039D                     	;# 
  3070  039E                     	;# 
  3071  039F                     	;# 
  3072  0411                     	;# 
  3073  0411                     	;# 
  3074  0412                     	;# 
  3075  0413                     	;# 
  3076  0414                     	;# 
  3077  0415                     	;# 
  3078  0416                     	;# 
  3079  0417                     	;# 
  3080  0418                     	;# 
  3081  0418                     	;# 
  3082  0419                     	;# 
  3083  041A                     	;# 
  3084  041B                     	;# 
  3085  041C                     	;# 
  3086  041D                     	;# 
  3087  041E                     	;# 
  3088  041F                     	;# 
  3089  0498                     	;# 
  3090  0498                     	;# 
  3091  0499                     	;# 
  3092  049A                     	;# 
  3093  049B                     	;# 
  3094  049B                     	;# 
  3095  049C                     	;# 
  3096  049D                     	;# 
  3097  049E                     	;# 
  3098  049F                     	;# 
  3099  0617                     	;# 
  3100  0618                     	;# 
  3101  0619                     	;# 
  3102  0619                     	;# 
  3103  061A                     	;# 
  3104  061B                     	;# 
  3105  061C                     	;# 
  3106  061C                     	;# 
  3107  061F                     	;# 
  3108  0691                     	;# 
  3109  0692                     	;# 
  3110  0693                     	;# 
  3111  0694                     	;# 
  3112  0695                     	;# 
  3113  0696                     	;# 
  3114  0697                     	;# 
  3115  0698                     	;# 
  3116  0699                     	;# 
  3117  0711                     	;# 
  3118  0712                     	;# 
  3119  0713                     	;# 
  3120  0714                     	;# 
  3121  0715                     	;# 
  3122  0716                     	;# 
  3123  0717                     	;# 
  3124  0718                     	;# 
  3125  0719                     	;# 
  3126  0891                     	;# 
  3127  0891                     	;# 
  3128  0891                     	;# 
  3129  0891                     	;# 
  3130  0891                     	;# 
  3131  0891                     	;# 
  3132  0892                     	;# 
  3133  0892                     	;# 
  3134  0892                     	;# 
  3135  0893                     	;# 
  3136  0893                     	;# 
  3137  0893                     	;# 
  3138  0893                     	;# 
  3139  0893                     	;# 
  3140  0893                     	;# 
  3141  0894                     	;# 
  3142  0894                     	;# 
  3143  0894                     	;# 
  3144  0895                     	;# 
  3145  0895                     	;# 
  3146  0895                     	;# 
  3147  0896                     	;# 
  3148  0896                     	;# 
  3149  0896                     	;# 
  3150  089B                     	;# 
  3151  0911                     	;# 
  3152  0912                     	;# 
  3153  0913                     	;# 
  3154  0914                     	;# 
  3155  0915                     	;# 
  3156  0916                     	;# 
  3157  0918                     	;# 
  3158  0919                     	;# 
  3159  091A                     	;# 
  3160  091B                     	;# 
  3161  091C                     	;# 
  3162  091D                     	;# 
  3163  091E                     	;# 
  3164  091F                     	;# 
  3165  0E0F                     	;# 
  3166  0E10                     	;# 
  3167  0E11                     	;# 
  3168  0E12                     	;# 
  3169  0E13                     	;# 
  3170  0E14                     	;# 
  3171  0E15                     	;# 
  3172  0E16                     	;# 
  3173  0E17                     	;# 
  3174  0E18                     	;# 
  3175  0E19                     	;# 
  3176  0E1A                     	;# 
  3177  0E1B                     	;# 
  3178  0E1C                     	;# 
  3179  0E1D                     	;# 
  3180  0E1E                     	;# 
  3181  0E1F                     	;# 
  3182  0E20                     	;# 
  3183  0E21                     	;# 
  3184  0E22                     	;# 
  3185  0E24                     	;# 
  3186  0E25                     	;# 
  3187  0E28                     	;# 
  3188  0E29                     	;# 
  3189  0E2A                     	;# 
  3190  0E2B                     	;# 
  3191  0E2C                     	;# 
  3192  0E2D                     	;# 
  3193  0E2E                     	;# 
  3194  0E2F                     	;# 
  3195  0E90                     	;# 
  3196  0E91                     	;# 
  3197  0E92                     	;# 
  3198  0E94                     	;# 
  3199  0E95                     	;# 
  3200  0E9C                     	;# 
  3201  0E9D                     	;# 
  3202  0E9E                     	;# 
  3203  0E9F                     	;# 
  3204  0EA0                     	;# 
  3205  0EA1                     	;# 
  3206  0EA2                     	;# 
  3207  0EA3                     	;# 
  3208  0EA4                     	;# 
  3209  0EA5                     	;# 
  3210  0EA6                     	;# 
  3211  0EA7                     	;# 
  3212  0F0F                     	;# 
  3213  0F10                     	;# 
  3214  0F11                     	;# 
  3215  0F12                     	;# 
  3216  0F13                     	;# 
  3217  0F14                     	;# 
  3218  0F15                     	;# 
  3219  0F16                     	;# 
  3220  0F17                     	;# 
  3221  0F18                     	;# 
  3222  0F19                     	;# 
  3223  0F1A                     	;# 
  3224  0F1B                     	;# 
  3225  0F1C                     	;# 
  3226  0F1D                     	;# 
  3227  0F1E                     	;# 
  3228  0F1F                     	;# 
  3229  0F20                     	;# 
  3230  0F21                     	;# 
  3231  0F22                     	;# 
  3232  0F23                     	;# 
  3233  0F24                     	;# 
  3234  0F25                     	;# 
  3235  0F26                     	;# 
  3236  0F27                     	;# 
  3237  0F28                     	;# 
  3238  0F29                     	;# 
  3239  0F2A                     	;# 
  3240  0F2B                     	;# 
  3241  0F2C                     	;# 
  3242  0F2D                     	;# 
  3243  0F2E                     	;# 
  3244  0F2F                     	;# 
  3245  0F30                     	;# 
  3246  0F31                     	;# 
  3247  0F32                     	;# 
  3248  0F33                     	;# 
  3249  0F34                     	;# 
  3250  0F35                     	;# 
  3251  0F36                     	;# 
  3252  0F37                     	;# 
  3253  0FE4                     	;# 
  3254  0FE5                     	;# 
  3255  0FE6                     	;# 
  3256  0FE7                     	;# 
  3257  0FE8                     	;# 
  3258  0FE9                     	;# 
  3259  0FEA                     	;# 
  3260  0FEB                     	;# 
  3261  0FED                     	;# 
  3262  0FEE                     	;# 
  3263  0FEF                     	;# 
  3264  0000                     	;# 
  3265  0001                     	;# 
  3266  0002                     	;# 
  3267  0003                     	;# 
  3268  0004                     	;# 
  3269  0005                     	;# 
  3270  0006                     	;# 
  3271  0007                     	;# 
  3272  0008                     	;# 
  3273  0009                     	;# 
  3274  000A                     	;# 
  3275  000B                     	;# 
  3276  000C                     	;# 
  3277  000D                     	;# 
  3278  000E                     	;# 
  3279  0010                     	;# 
  3280  0011                     	;# 
  3281  0012                     	;# 
  3282  0013                     	;# 
  3283  0014                     	;# 
  3284  0015                     	;# 
  3285  0015                     	;# 
  3286  0016                     	;# 
  3287  0016                     	;# 
  3288  0017                     	;# 
  3289  0018                     	;# 
  3290  0019                     	;# 
  3291  0019                     	;# 
  3292  001A                     	;# 
  3293  001B                     	;# 
  3294  001C                     	;# 
  3295  001D                     	;# 
  3296  001E                     	;# 
  3297  001F                     	;# 
  3298  008C                     	;# 
  3299  008D                     	;# 
  3300  008E                     	;# 
  3301  0090                     	;# 
  3302  0091                     	;# 
  3303  0092                     	;# 
  3304  0093                     	;# 
  3305  0094                     	;# 
  3306  0097                     	;# 
  3307  009B                     	;# 
  3308  009B                     	;# 
  3309  009C                     	;# 
  3310  009D                     	;# 
  3311  009E                     	;# 
  3312  009F                     	;# 
  3313  010C                     	;# 
  3314  010D                     	;# 
  3315  010E                     	;# 
  3316  0111                     	;# 
  3317  0112                     	;# 
  3318  0113                     	;# 
  3319  0114                     	;# 
  3320  0115                     	;# 
  3321  0116                     	;# 
  3322  0117                     	;# 
  3323  0118                     	;# 
  3324  0119                     	;# 
  3325  018C                     	;# 
  3326  018D                     	;# 
  3327  018E                     	;# 
  3328  0197                     	;# 
  3329  0199                     	;# 
  3330  0199                     	;# 
  3331  0199                     	;# 
  3332  019A                     	;# 
  3333  019A                     	;# 
  3334  019A                     	;# 
  3335  019B                     	;# 
  3336  019B                     	;# 
  3337  019B                     	;# 
  3338  019B                     	;# 
  3339  019B                     	;# 
  3340  019C                     	;# 
  3341  019C                     	;# 
  3342  019C                     	;# 
  3343  019D                     	;# 
  3344  019D                     	;# 
  3345  019D                     	;# 
  3346  019E                     	;# 
  3347  019E                     	;# 
  3348  019E                     	;# 
  3349  019F                     	;# 
  3350  019F                     	;# 
  3351  019F                     	;# 
  3352  019F                     	;# 
  3353  019F                     	;# 
  3354  020C                     	;# 
  3355  020D                     	;# 
  3356  020E                     	;# 
  3357  0211                     	;# 
  3358  0211                     	;# 
  3359  0212                     	;# 
  3360  0212                     	;# 
  3361  0213                     	;# 
  3362  0213                     	;# 
  3363  0214                     	;# 
  3364  0214                     	;# 
  3365  0215                     	;# 
  3366  0215                     	;# 
  3367  0215                     	;# 
  3368  0215                     	;# 
  3369  0216                     	;# 
  3370  0216                     	;# 
  3371  0217                     	;# 
  3372  0217                     	;# 
  3373  0219                     	;# 
  3374  021A                     	;# 
  3375  021B                     	;# 
  3376  021C                     	;# 
  3377  021D                     	;# 
  3378  021D                     	;# 
  3379  021E                     	;# 
  3380  021F                     	;# 
  3381  028C                     	;# 
  3382  028D                     	;# 
  3383  028E                     	;# 
  3384  0291                     	;# 
  3385  0291                     	;# 
  3386  0292                     	;# 
  3387  0293                     	;# 
  3388  0294                     	;# 
  3389  0295                     	;# 
  3390  0295                     	;# 
  3391  0296                     	;# 
  3392  0297                     	;# 
  3393  0298                     	;# 
  3394  029F                     	;# 
  3395  030C                     	;# 
  3396  030D                     	;# 
  3397  030E                     	;# 
  3398  0311                     	;# 
  3399  0311                     	;# 
  3400  0312                     	;# 
  3401  0313                     	;# 
  3402  0314                     	;# 
  3403  0315                     	;# 
  3404  0315                     	;# 
  3405  0316                     	;# 
  3406  0317                     	;# 
  3407  0318                     	;# 
  3408  038C                     	;# 
  3409  038D                     	;# 
  3410  038E                     	;# 
  3411  0391                     	;# 
  3412  0392                     	;# 
  3413  0393                     	;# 
  3414  0394                     	;# 
  3415  0395                     	;# 
  3416  0396                     	;# 
  3417  0397                     	;# 
  3418  0398                     	;# 
  3419  0399                     	;# 
  3420  039A                     	;# 
  3421  039C                     	;# 
  3422  039D                     	;# 
  3423  039E                     	;# 
  3424  039F                     	;# 
  3425  0411                     	;# 
  3426  0411                     	;# 
  3427  0412                     	;# 
  3428  0413                     	;# 
  3429  0414                     	;# 
  3430  0415                     	;# 
  3431  0416                     	;# 
  3432  0417                     	;# 
  3433  0418                     	;# 
  3434  0418                     	;# 
  3435  0419                     	;# 
  3436  041A                     	;# 
  3437  041B                     	;# 
  3438  041C                     	;# 
  3439  041D                     	;# 
  3440  041E                     	;# 
  3441  041F                     	;# 
  3442  0498                     	;# 
  3443  0498                     	;# 
  3444  0499                     	;# 
  3445  049A                     	;# 
  3446  049B                     	;# 
  3447  049B                     	;# 
  3448  049C                     	;# 
  3449  049D                     	;# 
  3450  049E                     	;# 
  3451  049F                     	;# 
  3452  0617                     	;# 
  3453  0618                     	;# 
  3454  0619                     	;# 
  3455  0619                     	;# 
  3456  061A                     	;# 
  3457  061B                     	;# 
  3458  061C                     	;# 
  3459  061C                     	;# 
  3460  061F                     	;# 
  3461  0691                     	;# 
  3462  0692                     	;# 
  3463  0693                     	;# 
  3464  0694                     	;# 
  3465  0695                     	;# 
  3466  0696                     	;# 
  3467  0697                     	;# 
  3468  0698                     	;# 
  3469  0699                     	;# 
  3470  0711                     	;# 
  3471  0712                     	;# 
  3472  0713                     	;# 
  3473  0714                     	;# 
  3474  0715                     	;# 
  3475  0716                     	;# 
  3476  0717                     	;# 
  3477  0718                     	;# 
  3478  0719                     	;# 
  3479  0891                     	;# 
  3480  0891                     	;# 
  3481  0891                     	;# 
  3482  0891                     	;# 
  3483  0891                     	;# 
  3484  0891                     	;# 
  3485  0892                     	;# 
  3486  0892                     	;# 
  3487  0892                     	;# 
  3488  0893                     	;# 
  3489  0893                     	;# 
  3490  0893                     	;# 
  3491  0893                     	;# 
  3492  0893                     	;# 
  3493  0893                     	;# 
  3494  0894                     	;# 
  3495  0894                     	;# 
  3496  0894                     	;# 
  3497  0895                     	;# 
  3498  0895                     	;# 
  3499  0895                     	;# 
  3500  0896                     	;# 
  3501  0896                     	;# 
  3502  0896                     	;# 
  3503  089B                     	;# 
  3504  0911                     	;# 
  3505  0912                     	;# 
  3506  0913                     	;# 
  3507  0914                     	;# 
  3508  0915                     	;# 
  3509  0916                     	;# 
  3510  0918                     	;# 
  3511  0919                     	;# 
  3512  091A                     	;# 
  3513  091B                     	;# 
  3514  091C                     	;# 
  3515  091D                     	;# 
  3516  091E                     	;# 
  3517  091F                     	;# 
  3518  0E0F                     	;# 
  3519  0E10                     	;# 
  3520  0E11                     	;# 
  3521  0E12                     	;# 
  3522  0E13                     	;# 
  3523  0E14                     	;# 
  3524  0E15                     	;# 
  3525  0E16                     	;# 
  3526  0E17                     	;# 
  3527  0E18                     	;# 
  3528  0E19                     	;# 
  3529  0E1A                     	;# 
  3530  0E1B                     	;# 
  3531  0E1C                     	;# 
  3532  0E1D                     	;# 
  3533  0E1E                     	;# 
  3534  0E1F                     	;# 
  3535  0E20                     	;# 
  3536  0E21                     	;# 
  3537  0E22                     	;# 
  3538  0E24                     	;# 
  3539  0E25                     	;# 
  3540  0E28                     	;# 
  3541  0E29                     	;# 
  3542  0E2A                     	;# 
  3543  0E2B                     	;# 
  3544  0E2C                     	;# 
  3545  0E2D                     	;# 
  3546  0E2E                     	;# 
  3547  0E2F                     	;# 
  3548  0E90                     	;# 
  3549  0E91                     	;# 
  3550  0E92                     	;# 
  3551  0E94                     	;# 
  3552  0E95                     	;# 
  3553  0E9C                     	;# 
  3554  0E9D                     	;# 
  3555  0E9E                     	;# 
  3556  0E9F                     	;# 
  3557  0EA0                     	;# 
  3558  0EA1                     	;# 
  3559  0EA2                     	;# 
  3560  0EA3                     	;# 
  3561  0EA4                     	;# 
  3562  0EA5                     	;# 
  3563  0EA6                     	;# 
  3564  0EA7                     	;# 
  3565  0F0F                     	;# 
  3566  0F10                     	;# 
  3567  0F11                     	;# 
  3568  0F12                     	;# 
  3569  0F13                     	;# 
  3570  0F14                     	;# 
  3571  0F15                     	;# 
  3572  0F16                     	;# 
  3573  0F17                     	;# 
  3574  0F18                     	;# 
  3575  0F19                     	;# 
  3576  0F1A                     	;# 
  3577  0F1B                     	;# 
  3578  0F1C                     	;# 
  3579  0F1D                     	;# 
  3580  0F1E                     	;# 
  3581  0F1F                     	;# 
  3582  0F20                     	;# 
  3583  0F21                     	;# 
  3584  0F22                     	;# 
  3585  0F23                     	;# 
  3586  0F24                     	;# 
  3587  0F25                     	;# 
  3588  0F26                     	;# 
  3589  0F27                     	;# 
  3590  0F28                     	;# 
  3591  0F29                     	;# 
  3592  0F2A                     	;# 
  3593  0F2B                     	;# 
  3594  0F2C                     	;# 
  3595  0F2D                     	;# 
  3596  0F2E                     	;# 
  3597  0F2F                     	;# 
  3598  0F30                     	;# 
  3599  0F31                     	;# 
  3600  0F32                     	;# 
  3601  0F33                     	;# 
  3602  0F34                     	;# 
  3603  0F35                     	;# 
  3604  0F36                     	;# 
  3605  0F37                     	;# 
  3606  0FE4                     	;# 
  3607  0FE5                     	;# 
  3608  0FE6                     	;# 
  3609  0FE7                     	;# 
  3610  0FE8                     	;# 
  3611  0FE9                     	;# 
  3612  0FEA                     	;# 
  3613  0FEB                     	;# 
  3614  0FED                     	;# 
  3615  0FEE                     	;# 
  3616  0FEF                     	;# 
  3617  001C                     _T1GCONbits	set	28
  3618  001B                     _T1CONbits	set	27
  3619  001B                     _T1CON	set	27
  3620  0019                     _TMR1L	set	25
  3621  001A                     _TMR1H	set	26
  3622  001C                     _T1GCON	set	28
  3623  0017                     _T0CON0bits	set	23
  3624  0017                     _T0CON0	set	23
  3625  0015                     _TMR0L	set	21
  3626  0016                     _TMR0H	set	22
  3627  0018                     _T0CON1	set	24
  3628  0011                     _PIR1bits	set	17
  3629  0014                     _PIR4bits	set	20
  3630  0010                     _PIR0bits	set	16
  3631  000D                     _PORTBbits	set	13
  3632  000E                     _PORTCbits	set	14
  3633  000C                     _PORTAbits	set	12
  3634  000B                     _INTCONbits	set	11
  3635  0014                     _PIR4	set	20
  3636  0013                     _PIR3	set	19
  3637  0012                     _PIR2	set	18
  3638  0011                     _PIR1	set	17
  3639  0010                     _PIR0	set	16
  3640  0097                     _WDTCON	set	151
  3641  0091                     _PIE1bits	set	145
  3642  0094                     _PIE4bits	set	148
  3643  0090                     _PIE0bits	set	144
  3644  008D                     _TRISBbits	set	141
  3645  008E                     _TRISCbits	set	142
  3646  008C                     _TRISAbits	set	140
  3647  008E                     _TRISC	set	142
  3648  008D                     _TRISB	set	141
  3649  008C                     _TRISA	set	140
  3650  0094                     _PIE4	set	148
  3651  0093                     _PIE3	set	147
  3652  0092                     _PIE2	set	146
  3653  0091                     _PIE1	set	145
  3654  0090                     _PIE0	set	144
  3655  010D                     _LATBbits	set	269
  3656  010C                     _LATAbits	set	268
  3657  010E                     _LATC	set	270
  3658  010D                     _LATB	set	269
  3659  010C                     _LATA	set	268
  3660  010E                     _LATCbits	set	270
  3661  018C                     _ANSELA	set	396
  3662  018D                     _ANSELB	set	397
  3663  018E                     _ANSELC	set	398
  3664  020E                     _WPUC	set	526
  3665  020C                     _WPUA	set	524
  3666  020D                     _WPUB	set	525
  3667  0295                     _CCPR2L	set	661
  3668  0296                     _CCPR2H	set	662
  3669  0298                     _CCP2CAP	set	664
  3670  0297                     _CCP2CON	set	663
  3671  029F                     _CCPTMRSbits	set	671
  3672  0291                     _CCPR1L	set	657
  3673  0292                     _CCPR1H	set	658
  3674  0294                     _CCP1CAP	set	660
  3675  0293                     _CCP1CON	set	659
  3676  028E                     _ODCONC	set	654
  3677  028D                     _ODCONB	set	653
  3678  028C                     _ODCONA	set	652
  3679  0311                     _CCPR3L	set	785
  3680  0312                     _CCPR3H	set	786
  3681  0314                     _CCP3CAP	set	788
  3682  0313                     _CCP3CON	set	787
  3683  030E                     _SLRCONC	set	782
  3684  030D                     _SLRCONB	set	781
  3685  030C                     _SLRCONA	set	780
  3686  038E                     _INLVLC	set	910
  3687  038D                     _INLVLB	set	909
  3688  038C                     _INLVLA	set	908
  3689  0916                     _PMD5	set	2326
  3690  0915                     _PMD4	set	2325
  3691  0914                     _PMD3	set	2324
  3692  0913                     _PMD2	set	2323
  3693  0912                     _PMD1	set	2322
  3694  0911                     _PMD0	set	2321
  3695  091E                     _OSCTUNE	set	2334
  3696  091F                     _OSCFRQ	set	2335
  3697  091D                     _OSCEN	set	2333
  3698  091B                     _OSCCON3	set	2331
  3699  0919                     _OSCCON1	set	2329
  3700  48E0                     _PLLR	set	18656
  3701                           
  3702                           	psect	cinit
  3703  0060                     start_initialization:	
  3704                           ; #config settings
  3705                           
  3706  0060                     __initialization:
  3707                           
  3708                           ; Clear objects allocated to COMMON
  3709  0060  01F7               	clrf	__pbssCOMMON& (0+127)
  3710  0061  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
  3711  0062  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
  3712  0063  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
  3713  0064  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
  3714  0065  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
  3715                           
  3716                           ; Clear objects allocated to BANK0
  3717  0066  3020               	movlw	low __pbssBANK0
  3718  0067  0084               	movwf	4
  3719  0068  3000               	movlw	high __pbssBANK0
  3720  0069  0085               	movwf	5
  3721  006A  302B               	movlw	43
  3722  006B  3184  24CF  3180   	fcall	clear_ram0
  3723  006E                     end_of_initialization:	
  3724                           ;End of C runtime variable initialization code
  3725                           
  3726  006E                     __end_of__initialization:
  3727  006E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3728  006F  0020               	movlb	0
  3729  0070  3182  2A69         	ljmp	_main	;jump to C main() function
  3730                           
  3731                           	psect	bssCOMMON
  3732  0077                     __pbssCOMMON:
  3733  0077                     _timer1ReloadVal:
  3734  0077                     	ds	2
  3735  0079                     _CCP1_CallBack:
  3736  0079                     	ds	2
  3737  007B                     TMR0_ISR@CountCallBack:
  3738  007B                     	ds	2
  3739                           
  3740                           	psect	bssBANK0
  3741  0020                     __pbssBANK0:
  3742  0020                     _Sens3:
  3743  0020                     	ds	6
  3744  0026                     _Sens2:
  3745  0026                     	ds	6
  3746  002C                     _micros@FR_Timer$F186:
  3747  002C                     	ds	4
  3748  0030                     _millis:
  3749  0030                     	ds	4
  3750  0034                     _micros:
  3751  0034                     	ds	4
  3752  0038                     _TMR1_InterruptHandler:
  3753  0038                     	ds	2
  3754  003A                     _CCP3_CallBack:
  3755  003A                     	ds	2
  3756  003C                     _CCP2_CallBack:
  3757  003C                     	ds	2
  3758  003E                     _ticksDown:
  3759  003E                     	ds	2
  3760  0040                     _ticksUp:
  3761  0040                     	ds	2
  3762  0042                     _TMR0_InterruptHandler:
  3763  0042                     	ds	2
  3764  0044                     _lastTrig:
  3765  0044                     	ds	1
  3766  0045                     _Sens1:
  3767  0045                     	ds	6
  3768                           
  3769                           	psect	clrtext
  3770  04CF                     clear_ram0:	
  3771                           ;	Called with FSR0 containing the base address, and
  3772                           ;	WREG with the size to clear
  3773                           
  3774  04CF  0064               	clrwdt	;clear the watchdog before getting into this loop
  3775  04D0                     clrloop0:
  3776  04D0  0180               	clrf	0	;clear RAM location pointed to by FSR
  3777  04D1  3101               	addfsr 0,1
  3778  04D2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3779  04D3  2CD0               	goto	clrloop0	;have we reached the end yet?
  3780  04D4  3400               	retlw	0	;all done for this memory range, return
  3781                           
  3782                           	psect	cstackCOMMON
  3783  0070                     __pcstackCOMMON:
  3784  0070                     ?_TMR1_Initialize:
  3785  0070                     ?_CCP1_Initialize:	
  3786                           ; 1 bytes @ 0x0
  3787                           
  3788  0070                     ?_PIC16_Init:	
  3789                           ; 1 bytes @ 0x0
  3790                           
  3791  0070                     ?_FR_Timer_Init:	
  3792                           ; 1 bytes @ 0x0
  3793                           
  3794  0070                     ?_JSN_GetLastTrig:	
  3795                           ; 1 bytes @ 0x0
  3796                           
  3797  0070                     ??_JSN_GetLastTrig:	
  3798                           ; 1 bytes @ 0x0
  3799                           
  3800  0070                     ?_TMR0_Initialize:	
  3801                           ; 1 bytes @ 0x0
  3802                           
  3803  0070                     ?_TMR0_ReadTimer:	
  3804                           ; 1 bytes @ 0x0
  3805                           
  3806  0070                     ?_SYSTEM_Initialize:	
  3807                           ; 1 bytes @ 0x0
  3808                           
  3809  0070                     ?_TMR0_ISR:	
  3810                           ; 1 bytes @ 0x0
  3811                           
  3812  0070                     ??_TMR0_ISR:	
  3813                           ; 1 bytes @ 0x0
  3814                           
  3815  0070                     ?_CCP3_CaptureISR:	
  3816                           ; 1 bytes @ 0x0
  3817                           
  3818  0070                     ?_CCP2_CaptureISR:	
  3819                           ; 1 bytes @ 0x0
  3820                           
  3821  0070                     ?_CCP1_CaptureISR:	
  3822                           ; 1 bytes @ 0x0
  3823                           
  3824  0070                     ?_TMR1_ISR:	
  3825                           ; 1 bytes @ 0x0
  3826                           
  3827  0070                     ?_PMD_Initialize:	
  3828                           ; 1 bytes @ 0x0
  3829                           
  3830  0070                     ?_OSCILLATOR_Initialize:	
  3831                           ; 1 bytes @ 0x0
  3832                           
  3833  0070                     ?_WDT_Initialize:	
  3834                           ; 1 bytes @ 0x0
  3835                           
  3836  0070                     ?_TMR0_DefaultInterruptHandler:	
  3837                           ; 1 bytes @ 0x0
  3838                           
  3839  0070                     ??_TMR0_DefaultInterruptHandler:	
  3840                           ; 1 bytes @ 0x0
  3841                           
  3842  0070                     ?_TMR0_CallBack:	
  3843                           ; 1 bytes @ 0x0
  3844                           
  3845  0070                     ??_TMR0_CallBack:	
  3846                           ; 1 bytes @ 0x0
  3847                           
  3848  0070                     ?_TMR1_DefaultInterruptHandler:	
  3849                           ; 1 bytes @ 0x0
  3850                           
  3851  0070                     ??_TMR1_DefaultInterruptHandler:	
  3852                           ; 1 bytes @ 0x0
  3853                           
  3854  0070                     ?_TMR1_CallBack:	
  3855                           ; 1 bytes @ 0x0
  3856                           
  3857  0070                     ??_TMR1_CallBack:	
  3858                           ; 1 bytes @ 0x0
  3859                           
  3860  0070                     ?_JSN_Library_Init:	
  3861                           ; 1 bytes @ 0x0
  3862                           
  3863  0070                     ?_JSN_Sensor_Trig:	
  3864                           ; 1 bytes @ 0x0
  3865                           
  3866  0070                     ?_FR_Timer_IncMillis:	
  3867                           ; 1 bytes @ 0x0
  3868                           
  3869  0070                     ??_FR_Timer_IncMillis:	
  3870                           ; 1 bytes @ 0x0
  3871                           
  3872  0070                     ?_FR_Timer_IncMicros:	
  3873                           ; 1 bytes @ 0x0
  3874                           
  3875  0070                     ??_FR_Timer_IncMicros:	
  3876                           ; 1 bytes @ 0x0
  3877                           
  3878  0070                     ?_InterruptManager:	
  3879                           ; 1 bytes @ 0x0
  3880                           
  3881  0070                     ?_CCP1_DefaultCallBack:	
  3882                           ; 1 bytes @ 0x0
  3883                           
  3884  0070                     ?_CCP2_DefaultCallBack:	
  3885                           ; 1 bytes @ 0x0
  3886                           
  3887  0070                     ?_CCP3_DefaultCallBack:	
  3888                           ; 1 bytes @ 0x0
  3889                           
  3890  0070                     ?_TMR1_WriteTimer:	
  3891                           ; 1 bytes @ 0x0
  3892                           
  3893  0070                     ?_main:	
  3894                           ; 1 bytes @ 0x0
  3895                           
  3896  0070                     CCP1_DefaultCallBack@capturedValue:	
  3897                           ; 2 bytes @ 0x0
  3898                           
  3899  0070                     CCP2_DefaultCallBack@capturedValue:	
  3900                           ; 2 bytes @ 0x0
  3901                           
  3902  0070                     CCP3_DefaultCallBack@capturedValue:	
  3903                           ; 2 bytes @ 0x0
  3904                           
  3905  0070                     TMR1_WriteTimer@timerVal:	
  3906                           ; 2 bytes @ 0x0
  3907                           
  3908                           
  3909                           ; 2 bytes @ 0x0
  3910  0070                     	ds	2
  3911  0072                     ??_CCP3_CaptureISR:
  3912  0072                     ??_CCP2_CaptureISR:	
  3913                           ; 1 bytes @ 0x2
  3914                           
  3915  0072                     ??_TMR1_ISR:	
  3916                           ; 1 bytes @ 0x2
  3917                           
  3918  0072                     ??_CCP1_DefaultCallBack:	
  3919                           ; 1 bytes @ 0x2
  3920                           
  3921  0072                     ??_CCP2_DefaultCallBack:	
  3922                           ; 1 bytes @ 0x2
  3923                           
  3924  0072                     ??_CCP3_DefaultCallBack:	
  3925                           ; 1 bytes @ 0x2
  3926                           
  3927  0072                     ??_TMR1_WriteTimer:	
  3928                           ; 1 bytes @ 0x2
  3929                           
  3930                           
  3931                           ; 1 bytes @ 0x2
  3932  0072                     	ds	1
  3933  0073                     CCP2_CaptureISR@module:
  3934  0073                     CCP3_CaptureISR@module:	
  3935                           ; 2 bytes @ 0x3
  3936                           
  3937                           
  3938                           ; 2 bytes @ 0x3
  3939  0073                     	ds	1
  3940  0074                     ??_CCP1_CaptureISR:
  3941                           
  3942                           ; 1 bytes @ 0x4
  3943  0074                     	ds	1
  3944  0075                     CCP1_CaptureISR@module:
  3945                           
  3946                           ; 2 bytes @ 0x5
  3947  0075                     	ds	2
  3948  0077                     ??_InterruptManager:
  3949                           
  3950                           	psect	cstackBANK0
  3951  004B                     __pcstackBANK0:	
  3952                           ; 1 bytes @ 0x7
  3953                           
  3954  004B                     ?_SetPin:
  3955  004B                     ?_WritePin:	
  3956                           ; 1 bytes @ 0x0
  3957                           
  3958  004B                     ??_PIC16_Init:	
  3959                           ; 1 bytes @ 0x0
  3960                           
  3961  004B                     ??_TMR0_ReadTimer:	
  3962                           ; 1 bytes @ 0x0
  3963                           
  3964  004B                     ??_SYSTEM_Initialize:	
  3965                           ; 1 bytes @ 0x0
  3966                           
  3967  004B                     ??_PMD_Initialize:	
  3968                           ; 1 bytes @ 0x0
  3969                           
  3970  004B                     ??_OSCILLATOR_Initialize:	
  3971                           ; 1 bytes @ 0x0
  3972                           
  3973  004B                     ??_WDT_Initialize:	
  3974                           ; 1 bytes @ 0x0
  3975                           
  3976  004B                     ?_TMR0_SetInterruptHandler:	
  3977                           ; 1 bytes @ 0x0
  3978                           
  3979  004B                     ?_CCP1_SetCallBack:	
  3980                           ; 1 bytes @ 0x0
  3981                           
  3982  004B                     ?_TMR1_SetInterruptHandler:	
  3983                           ; 1 bytes @ 0x0
  3984                           
  3985  004B                     ?_FR_Timer_GetMillis:	
  3986                           ; 1 bytes @ 0x0
  3987                           
  3988  004B                     SetPin@io:	
  3989                           ; 4 bytes @ 0x0
  3990                           
  3991  004B                     WritePin@val:	
  3992                           ; 1 bytes @ 0x0
  3993                           
  3994  004B                     TMR0_SetInterruptHandler@InterruptHandler:	
  3995                           ; 1 bytes @ 0x0
  3996                           
  3997  004B                     CCP1_SetCallBack@customCallBack:	
  3998                           ; 2 bytes @ 0x0
  3999                           
  4000  004B                     TMR1_SetInterruptHandler@InterruptHandler:	
  4001                           ; 2 bytes @ 0x0
  4002                           
  4003                           
  4004                           ; 2 bytes @ 0x0
  4005  004B                     	ds	1
  4006  004C                     ??_SetPin:
  4007  004C                     ??_WritePin:	
  4008                           ; 1 bytes @ 0x1
  4009                           
  4010  004C                     TMR0_ReadTimer@readVal:	
  4011                           ; 1 bytes @ 0x1
  4012                           
  4013                           
  4014                           ; 1 bytes @ 0x1
  4015  004C                     	ds	1
  4016  004D                     ??_TMR1_Initialize:
  4017  004D                     ??_CCP1_Initialize:	
  4018                           ; 1 bytes @ 0x2
  4019                           
  4020  004D                     ??_FR_Timer_Init:	
  4021                           ; 1 bytes @ 0x2
  4022                           
  4023  004D                     ??_TMR0_Initialize:	
  4024                           ; 1 bytes @ 0x2
  4025                           
  4026  004D                     ??_TMR0_SetInterruptHandler:	
  4027                           ; 1 bytes @ 0x2
  4028                           
  4029  004D                     ??_CCP1_SetCallBack:	
  4030                           ; 1 bytes @ 0x2
  4031                           
  4032  004D                     ??_TMR1_SetInterruptHandler:	
  4033                           ; 1 bytes @ 0x2
  4034                           
  4035  004D                     ?_FR_Timer_GetMicros:	
  4036                           ; 1 bytes @ 0x2
  4037                           
  4038                           
  4039                           ; 4 bytes @ 0x2
  4040  004D                     	ds	1
  4041  004E                     SetPin@pin:
  4042  004E                     WritePin@pin:	
  4043                           ; 1 bytes @ 0x3
  4044                           
  4045                           
  4046                           ; 1 bytes @ 0x3
  4047  004E                     	ds	1
  4048  004F                     ?_JSN_Sensor_Init:
  4049  004F                     ??_FR_Timer_GetMillis:	
  4050                           ; 1 bytes @ 0x4
  4051                           
  4052  004F                     JSN_Sensor_Init@trigPin:	
  4053                           ; 1 bytes @ 0x4
  4054                           
  4055                           
  4056                           ; 1 bytes @ 0x4
  4057  004F                     	ds	1
  4058  0050                     JSN_Sensor_Init@echoPin:
  4059                           
  4060                           ; 1 bytes @ 0x5
  4061  0050                     	ds	1
  4062  0051                     ??_JSN_Sensor_Init:
  4063  0051                     ??_FR_Timer_GetMicros:	
  4064                           ; 1 bytes @ 0x6
  4065                           
  4066  0051                     ??_JSN_Sensor_Trig:	
  4067                           ; 1 bytes @ 0x6
  4068                           
  4069                           
  4070                           ; 1 bytes @ 0x6
  4071  0051                     	ds	2
  4072  0053                     JSN_Sensor_Init@Sensor:
  4073                           
  4074                           ; 1 bytes @ 0x8
  4075  0053                     	ds	1
  4076  0054                     ??_JSN_Library_Init:
  4077                           
  4078                           ; 1 bytes @ 0x9
  4079  0054                     	ds	1
  4080  0055                     JSN_Sensor_Trig@Sensor:
  4081                           
  4082                           ; 1 bytes @ 0xA
  4083  0055                     	ds	1
  4084  0056                     ??_main:
  4085                           
  4086                           ; 1 bytes @ 0xB
  4087  0056                     	ds	4
  4088  005A                     main@prevMilli:
  4089                           
  4090                           ; 4 bytes @ 0xF
  4091  005A                     	ds	4
  4092  005E                     main@currMilli:
  4093                           
  4094                           ; 4 bytes @ 0x13
  4095  005E                     	ds	4
  4096                           
  4097                           	psect	maintext
  4098  0269                     __pmaintext:	
  4099 ;;
  4100 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4101 ;;
  4102 ;; *************** function _main *****************
  4103 ;; Defined at:
  4104 ;;		line 130 in file "JSN_Sensor.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  currMilli       4   19[BANK0 ] unsigned long 
  4109 ;;  prevMilli       4   15[BANK0 ] unsigned long 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  2   75[None  ] int 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : B1F/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;Total ram usage:       12 bytes
  4124 ;; Hardware stack levels required when called: 7
  4125 ;; This function calls:
  4126 ;;		_FR_Timer_GetMillis
  4127 ;;		_FR_Timer_Init
  4128 ;;		_JSN_Library_Init
  4129 ;;		_JSN_Sensor_Trig
  4130 ;;		_PIC16_Init
  4131 ;;		_SetPin
  4132 ;;		_WritePin
  4133 ;; This function is called by:
  4134 ;;		Startup code after reset
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138  0269                     _main:	
  4139                           ;psect for function _main
  4140                           
  4141  0269                     l2710:	
  4142                           ;incstack = 0
  4143                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4144                           
  4145                           
  4146                           ;JSN_Sensor.c: 132:     PIC16_Init();
  4147  0269  3183  231D  3182   	fcall	_PIC16_Init
  4148                           
  4149                           ;JSN_Sensor.c: 133:     FR_Timer_Init();
  4150  026C  3184  24EB  3182   	fcall	_FR_Timer_Init
  4151  026F                     l2712:
  4152                           
  4153                           ;JSN_Sensor.c: 134:     JSN_Library_Init();
  4154  026F  3184  2436  3182   	fcall	_JSN_Library_Init
  4155  0272                     l2714:
  4156  0272                     l2716:
  4157                           
  4158                           ;JSN_Sensor.c: 138:     unsigned long prevMilli = 0;
  4159  0272  3000               	movlw	0
  4160  0273  0020               	movlb	0	; select bank0
  4161  0274  00DD               	movwf	main@prevMilli+3
  4162  0275  3000               	movlw	0
  4163  0276  00DC               	movwf	main@prevMilli+2
  4164  0277  3000               	movlw	0
  4165  0278  00DB               	movwf	main@prevMilli+1
  4166  0279  3000               	movlw	0
  4167  027A  00DA               	movwf	main@prevMilli
  4168  027B                     l2718:
  4169                           
  4170                           ;JSN_Sensor.c: 139:     SetPin(C0, 0);
  4171  027B  01CB               	clrf	SetPin@io
  4172  027C  300C               	movlw	12
  4173  027D  3181  212D  3182   	fcall	_SetPin
  4174  0280                     l2720:
  4175                           
  4176                           ;JSN_Sensor.c: 140:     WritePin(C0, 0);
  4177  0280  0020               	movlb	0	; select bank0
  4178  0281  01CB               	clrf	WritePin@val
  4179  0282  300C               	movlw	12
  4180  0283  3180  2072  3182   	fcall	_WritePin
  4181  0286                     l2722:
  4182                           
  4183                           ;JSN_Sensor.c: 142:     JSN_Sensor_Trig(&Sens1);
  4184  0286  3045               	movlw	(low (_Sens1| 0))& (0+255)
  4185  0287  3182  22D6  3182   	fcall	_JSN_Sensor_Trig
  4186  028A                     l2724:
  4187                           
  4188                           ;JSN_Sensor.c: 144:         currMilli = FR_Timer_GetMillis();
  4189  028A  3184  24AA  3182   	fcall	_FR_Timer_GetMillis
  4190  028D  0020               	movlb	0	; select bank0
  4191  028E  084E               	movf	?_FR_Timer_GetMillis+3,w
  4192  028F  00E1               	movwf	main@currMilli+3
  4193  0290  084D               	movf	?_FR_Timer_GetMillis+2,w
  4194  0291  00E0               	movwf	main@currMilli+2
  4195  0292  084C               	movf	?_FR_Timer_GetMillis+1,w
  4196  0293  00DF               	movwf	main@currMilli+1
  4197  0294  084B               	movf	?_FR_Timer_GetMillis,w
  4198  0295  00DE               	movwf	main@currMilli
  4199  0296                     l2726:
  4200                           
  4201                           ;JSN_Sensor.c: 147:         if((currMilli - prevMilli) >= 500) {
  4202  0296  085A               	movf	main@prevMilli,w
  4203  0297  025E               	subwf	main@currMilli,w
  4204  0298  00D6               	movwf	??_main
  4205  0299  085B               	movf	main@prevMilli+1,w
  4206  029A  3B5F               	subwfb	main@currMilli+1,w
  4207  029B  00D7               	movwf	??_main+1
  4208  029C  085C               	movf	main@prevMilli+2,w
  4209  029D  3B60               	subwfb	main@currMilli+2,w
  4210  029E  00D8               	movwf	??_main+2
  4211  029F  085D               	movf	main@prevMilli+3,w
  4212  02A0  3B61               	subwfb	main@currMilli+3,w
  4213  02A1  00D9               	movwf	??_main+3
  4214  02A2  0859               	movf	??_main+3,w
  4215  02A3  1D03               	btfss	3,2
  4216  02A4  2AB0               	goto	u450
  4217  02A5  0858               	movf	??_main+2,w
  4218  02A6  1D03               	btfss	3,2
  4219  02A7  2AB0               	goto	u450
  4220  02A8  30F4               	movlw	244
  4221  02A9  0256               	subwf	??_main,w
  4222  02AA  3001               	movlw	1
  4223  02AB  3B57               	subwfb	??_main+1,w
  4224  02AC  1C03               	btfss	3,0
  4225  02AD  2AAF               	goto	u451
  4226  02AE  2AB0               	goto	u450
  4227  02AF                     u451:
  4228  02AF  2A8A               	goto	l2724
  4229  02B0                     u450:
  4230  02B0                     l2728:
  4231                           
  4232                           ;JSN_Sensor.c: 149:             if(Sens1.echoHighTime == 0)
  4233  02B0  0020               	movlb	0	; select bank0
  4234  02B1  0845               	movf	_Sens1,w
  4235  02B2  0446               	iorwf	_Sens1+1,w
  4236  02B3  1D03               	btfss	3,2
  4237  02B4  2AB6               	goto	u461
  4238  02B5  2AB7               	goto	u460
  4239  02B6                     u461:
  4240  02B6  2AC6               	goto	l2732
  4241  02B7                     u460:
  4242  02B7                     l2730:
  4243                           
  4244                           ;JSN_Sensor.c: 150:                 LATCbits.LATC0 ^= 1;
  4245  02B7  0022               	movlb	2	; select bank2
  4246  02B8  080E               	movf	14,w	;volatile
  4247  02B9  3901               	andlw	1
  4248  02BA  0020               	movlb	0	; select bank0
  4249  02BB  00D6               	movwf	??_main
  4250  02BC  3001               	movlw	1
  4251  02BD  06D6               	xorwf	??_main,f
  4252  02BE  0022               	movlb	2	; select bank2
  4253  02BF  080E               	movf	14,w	;volatile
  4254  02C0  0020               	movlb	0	; select bank0
  4255  02C1  0656               	xorwf	??_main,w
  4256  02C2  39FE               	andlw	-2
  4257  02C3  0656               	xorwf	??_main,w
  4258  02C4  0022               	movlb	2	; select bank2
  4259  02C5  008E               	movwf	14	;volatile
  4260  02C6                     l2732:
  4261                           
  4262                           ;JSN_Sensor.c: 155:             JSN_Sensor_Trig(&Sens1);
  4263  02C6  3045               	movlw	(low (_Sens1| 0))& (0+255)
  4264  02C7  3182  22D6  3182   	fcall	_JSN_Sensor_Trig
  4265  02CA                     l2734:
  4266                           
  4267                           ;JSN_Sensor.c: 156:             prevMilli = currMilli;
  4268  02CA  0020               	movlb	0	; select bank0
  4269  02CB  0861               	movf	main@currMilli+3,w
  4270  02CC  00DD               	movwf	main@prevMilli+3
  4271  02CD  0860               	movf	main@currMilli+2,w
  4272  02CE  00DC               	movwf	main@prevMilli+2
  4273  02CF  085F               	movf	main@currMilli+1,w
  4274  02D0  00DB               	movwf	main@prevMilli+1
  4275  02D1  085E               	movf	main@currMilli,w
  4276  02D2  00DA               	movwf	main@prevMilli
  4277  02D3  2A8A               	goto	l2724
  4278  02D4  3180  285E         	ljmp	start
  4279  02D6                     __end_of_main:
  4280                           
  4281                           	psect	text1
  4282  031D                     __ptext1:	
  4283 ;; *************** function _PIC16_Init *****************
  4284 ;; Defined at:
  4285 ;;		line 16 in file "PIC16Xpress_DevBoard.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;Total ram usage:        0 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 6
  4306 ;; This function calls:
  4307 ;;		_SYSTEM_Initialize
  4308 ;; This function is called by:
  4309 ;;		_main
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313  031D                     _PIC16_Init:	
  4314                           ;psect for function _PIC16_Init
  4315                           
  4316  031D                     l2636:	
  4317                           ;incstack = 0
  4318                           ; Regs used in _PIC16_Init: [wreg+status,2+status,0+pclath+cstack]
  4319                           
  4320                           
  4321                           ;PIC16Xpress_DevBoard.c: 18:     SYSTEM_Initialize();
  4322  031D  3184  24A0  3183   	fcall	_SYSTEM_Initialize
  4323  0320                     l2638:
  4324                           
  4325                           ;PIC16Xpress_DevBoard.c: 21:     PIE0 = 0x00;
  4326  0320  0021               	movlb	1	; select bank1
  4327  0321  0190               	clrf	16	;volatile
  4328  0322                     l2640:
  4329                           
  4330                           ;PIC16Xpress_DevBoard.c: 22:     PIE1 = 0x00;
  4331  0322  0191               	clrf	17	;volatile
  4332  0323                     l2642:
  4333                           
  4334                           ;PIC16Xpress_DevBoard.c: 23:     PIE2 = 0x00;
  4335  0323  0192               	clrf	18	;volatile
  4336  0324                     l2644:
  4337                           
  4338                           ;PIC16Xpress_DevBoard.c: 24:     PIE3 = 0x00;
  4339  0324  0193               	clrf	19	;volatile
  4340  0325                     l2646:
  4341                           
  4342                           ;PIC16Xpress_DevBoard.c: 25:     PIE4 = 0x00;
  4343  0325  0194               	clrf	20	;volatile
  4344  0326                     l2648:
  4345                           
  4346                           ;PIC16Xpress_DevBoard.c: 28:     LATA = 0x00;
  4347  0326  0022               	movlb	2	; select bank2
  4348  0327  018C               	clrf	12	;volatile
  4349  0328                     l2650:
  4350                           
  4351                           ;PIC16Xpress_DevBoard.c: 29:     LATB = 0x00;
  4352  0328  018D               	clrf	13	;volatile
  4353  0329                     l2652:
  4354                           
  4355                           ;PIC16Xpress_DevBoard.c: 30:     LATC = 0x00;
  4356  0329  018E               	clrf	14	;volatile
  4357  032A                     l2654:
  4358                           
  4359                           ;PIC16Xpress_DevBoard.c: 32:     TRISA = 0x37;
  4360  032A  3037               	movlw	55
  4361  032B  0021               	movlb	1	; select bank1
  4362  032C  008C               	movwf	12	;volatile
  4363  032D                     l2656:
  4364                           
  4365                           ;PIC16Xpress_DevBoard.c: 33:     TRISB = 0xF0;
  4366  032D  30F0               	movlw	240
  4367  032E  008D               	movwf	13	;volatile
  4368  032F                     l2658:
  4369                           
  4370                           ;PIC16Xpress_DevBoard.c: 34:     TRISC = 0xFF;
  4371  032F  30FF               	movlw	255
  4372  0330  008E               	movwf	14	;volatile
  4373  0331                     l2660:
  4374                           
  4375                           ;PIC16Xpress_DevBoard.c: 36:     ANSELC = 0xFF;
  4376  0331  30FF               	movlw	255
  4377  0332  0023               	movlb	3	; select bank3
  4378  0333  008E               	movwf	14	;volatile
  4379  0334                     l2662:
  4380                           
  4381                           ;PIC16Xpress_DevBoard.c: 37:     ANSELB = 0xF0;
  4382  0334  30F0               	movlw	240
  4383  0335  008D               	movwf	13	;volatile
  4384  0336                     l2664:
  4385                           
  4386                           ;PIC16Xpress_DevBoard.c: 38:     ANSELA = 0x37;
  4387  0336  3037               	movlw	55
  4388  0337  008C               	movwf	12	;volatile
  4389  0338                     l2666:
  4390                           
  4391                           ;PIC16Xpress_DevBoard.c: 40:     WPUB = 0x00;
  4392  0338  0024               	movlb	4	; select bank4
  4393  0339  018D               	clrf	13	;volatile
  4394  033A                     l2668:
  4395                           
  4396                           ;PIC16Xpress_DevBoard.c: 41:     WPUA = 0x00;
  4397  033A  018C               	clrf	12	;volatile
  4398  033B                     l2670:
  4399                           
  4400                           ;PIC16Xpress_DevBoard.c: 42:     WPUC = 0x00;
  4401  033B  018E               	clrf	14	;volatile
  4402  033C                     l2672:
  4403                           
  4404                           ;PIC16Xpress_DevBoard.c: 44:     ODCONA = 0x00;
  4405  033C  0025               	movlb	5	; select bank5
  4406  033D  018C               	clrf	12	;volatile
  4407  033E                     l2674:
  4408                           
  4409                           ;PIC16Xpress_DevBoard.c: 45:     ODCONB = 0x00;
  4410  033E  018D               	clrf	13	;volatile
  4411  033F                     l2676:
  4412                           
  4413                           ;PIC16Xpress_DevBoard.c: 46:     ODCONC = 0x00;
  4414  033F  018E               	clrf	14	;volatile
  4415  0340                     l2678:
  4416                           
  4417                           ;PIC16Xpress_DevBoard.c: 48:     SLRCONA = 0x37;
  4418  0340  3037               	movlw	55
  4419  0341  0026               	movlb	6	; select bank6
  4420  0342  008C               	movwf	12	;volatile
  4421  0343                     l2680:
  4422                           
  4423                           ;PIC16Xpress_DevBoard.c: 49:     SLRCONB = 0xF0;
  4424  0343  30F0               	movlw	240
  4425  0344  008D               	movwf	13	;volatile
  4426  0345                     l2682:
  4427                           
  4428                           ;PIC16Xpress_DevBoard.c: 50:     SLRCONC = 0xFF;
  4429  0345  30FF               	movlw	255
  4430  0346  008E               	movwf	14	;volatile
  4431  0347                     l2684:
  4432                           
  4433                           ;PIC16Xpress_DevBoard.c: 52:     INLVLA = 0x3F;
  4434  0347  303F               	movlw	63
  4435  0348  0027               	movlb	7	; select bank7
  4436  0349  008C               	movwf	12	;volatile
  4437  034A                     l2686:
  4438                           
  4439                           ;PIC16Xpress_DevBoard.c: 53:     INLVLB = 0xF0;
  4440  034A  30F0               	movlw	240
  4441  034B  008D               	movwf	13	;volatile
  4442  034C                     l2688:
  4443                           
  4444                           ;PIC16Xpress_DevBoard.c: 54:     INLVLC = 0xFF;
  4445  034C  30FF               	movlw	255
  4446  034D  008E               	movwf	14	;volatile
  4447  034E                     l2690:
  4448                           
  4449                           ;PIC16Xpress_DevBoard.c: 57:     PIR0 = 0x00;
  4450  034E  0020               	movlb	0	; select bank0
  4451  034F  0190               	clrf	16	;volatile
  4452  0350                     l2692:
  4453                           
  4454                           ;PIC16Xpress_DevBoard.c: 58:     PIR1 = 0x00;
  4455  0350  0191               	clrf	17	;volatile
  4456  0351                     l2694:
  4457                           
  4458                           ;PIC16Xpress_DevBoard.c: 59:     PIR2 = 0x00;
  4459  0351  0192               	clrf	18	;volatile
  4460  0352                     l2696:
  4461                           
  4462                           ;PIC16Xpress_DevBoard.c: 60:     PIR3 = 0x00;
  4463  0352  0193               	clrf	19	;volatile
  4464  0353                     l2698:
  4465                           
  4466                           ;PIC16Xpress_DevBoard.c: 61:     PIR4 = 0x00;
  4467  0353  0194               	clrf	20	;volatile
  4468  0354                     l2700:
  4469                           
  4470                           ;PIC16Xpress_DevBoard.c: 63:     INTCONbits.GIE = 1;
  4471  0354  178B               	bsf	11,7	;volatile
  4472  0355                     l213:
  4473  0355  0008               	return
  4474  0356                     __end_of_PIC16_Init:
  4475                           
  4476                           	psect	text2
  4477  04A0                     __ptext2:	
  4478 ;; *************** function _SYSTEM_Initialize *****************
  4479 ;; Defined at:
  4480 ;;		line 14 in file "mcc.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 5
  4501 ;; This function calls:
  4502 ;;		_OSCILLATOR_Initialize
  4503 ;;		_PMD_Initialize
  4504 ;;		_WDT_Initialize
  4505 ;; This function is called by:
  4506 ;;		_PIC16_Init
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510  04A0                     _SYSTEM_Initialize:	
  4511                           ;psect for function _SYSTEM_Initialize
  4512                           
  4513  04A0                     l2616:	
  4514                           ;incstack = 0
  4515                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4516                           
  4517                           
  4518                           ;mcc.c: 16:     PMD_Initialize();
  4519  04A0  3184  2488  3184   	fcall	_PMD_Initialize
  4520                           
  4521                           ;mcc.c: 17:     OSCILLATOR_Initialize();
  4522  04A3  3184  2494  3184   	fcall	_OSCILLATOR_Initialize
  4523                           
  4524                           ;mcc.c: 18:     WDT_Initialize();
  4525  04A6  3184  24E7  3184   	fcall	_WDT_Initialize
  4526  04A9                     l337:
  4527  04A9  0008               	return
  4528  04AA                     __end_of_SYSTEM_Initialize:
  4529                           
  4530                           	psect	text3
  4531  04E7                     __ptext3:	
  4532 ;; *************** function _WDT_Initialize *****************
  4533 ;; Defined at:
  4534 ;;		line 41 in file "mcc.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 4
  4555 ;; This function calls:
  4556 ;;		Nothing
  4557 ;; This function is called by:
  4558 ;;		_SYSTEM_Initialize
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562  04E7                     _WDT_Initialize:	
  4563                           ;psect for function _WDT_Initialize
  4564                           
  4565  04E7                     l2562:	
  4566                           ;incstack = 0
  4567                           ; Regs used in _WDT_Initialize: [wreg]
  4568                           
  4569                           
  4570                           ;mcc.c: 44:     WDTCON = 0x16;
  4571  04E7  3016               	movlw	22
  4572  04E8  0021               	movlb	1	; select bank1
  4573  04E9  0097               	movwf	23	;volatile
  4574  04EA                     l346:
  4575  04EA  0008               	return
  4576  04EB                     __end_of_WDT_Initialize:
  4577                           
  4578                           	psect	text4
  4579  0488                     __ptext4:	
  4580 ;; *************** function _PMD_Initialize *****************
  4581 ;; Defined at:
  4582 ;;		line 49 in file "mcc.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 4
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_SYSTEM_Initialize
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610  0488                     _PMD_Initialize:	
  4611                           ;psect for function _PMD_Initialize
  4612                           
  4613  0488                     l2546:	
  4614                           ;incstack = 0
  4615                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  4616                           
  4617                           
  4618                           ;mcc.c: 52:     PMD0 = 0x00;
  4619  0488  0032               	movlb	18	; select bank18
  4620  0489  0191               	clrf	17	;volatile
  4621  048A                     l2548:
  4622                           
  4623                           ;mcc.c: 54:     PMD1 = 0x7C;
  4624  048A  307C               	movlw	124
  4625  048B  0092               	movwf	18	;volatile
  4626  048C                     l2550:
  4627                           
  4628                           ;mcc.c: 56:     PMD2 = 0x66;
  4629  048C  3066               	movlw	102
  4630  048D  0093               	movwf	19	;volatile
  4631  048E                     l2552:
  4632                           
  4633                           ;mcc.c: 58:     PMD3 = 0xC8;
  4634  048E  30C8               	movlw	200
  4635  048F  0094               	movwf	20	;volatile
  4636  0490                     l2554:
  4637                           
  4638                           ;mcc.c: 60:     PMD4 = 0x00;
  4639  0490  0195               	clrf	21	;volatile
  4640                           
  4641                           ;mcc.c: 62:     PMD5 = 0x1F;
  4642  0491  301F               	movlw	31
  4643  0492  0096               	movwf	22	;volatile
  4644  0493                     l349:
  4645  0493  0008               	return
  4646  0494                     __end_of_PMD_Initialize:
  4647                           
  4648                           	psect	text5
  4649  0494                     __ptext5:	
  4650 ;; *************** function _OSCILLATOR_Initialize *****************
  4651 ;; Defined at:
  4652 ;;		line 23 in file "mcc.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 4
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_SYSTEM_Initialize
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680  0494                     _OSCILLATOR_Initialize:	
  4681                           ;psect for function _OSCILLATOR_Initialize
  4682                           
  4683  0494                     l2556:	
  4684                           ;incstack = 0
  4685                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4686                           
  4687                           
  4688                           ;mcc.c: 26:     OSCCON1 = 0x00;
  4689  0494  0032               	movlb	18	; select bank18
  4690  0495  0199               	clrf	25	;volatile
  4691                           
  4692                           ;mcc.c: 28:     OSCCON3 = 0x00;
  4693  0496  019B               	clrf	27	;volatile
  4694                           
  4695                           ;mcc.c: 30:     OSCEN = 0x00;
  4696  0497  019D               	clrf	29	;volatile
  4697  0498                     l2558:
  4698                           
  4699                           ;mcc.c: 32:     OSCFRQ = 0x04;
  4700  0498  3004               	movlw	4
  4701  0499  009F               	movwf	31	;volatile
  4702  049A                     l2560:
  4703                           
  4704                           ;mcc.c: 34:     OSCTUNE = 0x00;
  4705  049A  019E               	clrf	30	;volatile
  4706  049B                     l340:	
  4707                           ;mcc.c: 36:     while(PLLR == 0);
  4708                           
  4709  049B  1C1C               	btfss	28,0	;volatile
  4710  049C  2C9E               	goto	u431
  4711  049D  2C9F               	goto	u430
  4712  049E                     u431:
  4713  049E  2C9B               	goto	l340
  4714  049F                     u430:
  4715  049F                     l343:
  4716  049F  0008               	return
  4717  04A0                     __end_of_OSCILLATOR_Initialize:
  4718                           
  4719                           	psect	text6
  4720  02D6                     __ptext6:	
  4721 ;; *************** function _JSN_Sensor_Trig *****************
  4722 ;; Defined at:
  4723 ;;		line 93 in file "JSN_Sensor.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  Sensor          1    wreg     PTR struct .
  4726 ;;		 -> Sens1(6), 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  Sensor          1   10[BANK0 ] PTR struct .
  4729 ;;		 -> Sens1(6), 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;Total ram usage:        5 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 6
  4746 ;; This function calls:
  4747 ;;		_FR_Timer_GetMicros
  4748 ;;		_WritePin
  4749 ;; This function is called by:
  4750 ;;		_main
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754  02D6                     _JSN_Sensor_Trig:	
  4755                           ;psect for function _JSN_Sensor_Trig
  4756                           
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _JSN_Sensor_Trig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4760                           ;JSN_Sensor_Trig@Sensor stored from wreg
  4761  02D6  0020               	movlb	0	; select bank0
  4762  02D7  00D5               	movwf	JSN_Sensor_Trig@Sensor
  4763  02D8                     l2624:
  4764                           
  4765                           ;JSN_Sensor.c: 94:     micros = FR_Timer_GetMicros();
  4766  02D8  3183  23E2  3182   	fcall	_FR_Timer_GetMicros
  4767  02DB  0020               	movlb	0	; select bank0
  4768  02DC  0850               	movf	?_FR_Timer_GetMicros+3,w
  4769  02DD  00B7               	movwf	_micros+3
  4770  02DE  084F               	movf	?_FR_Timer_GetMicros+2,w
  4771  02DF  00B6               	movwf	_micros+2
  4772  02E0  084E               	movf	?_FR_Timer_GetMicros+1,w
  4773  02E1  00B5               	movwf	_micros+1
  4774  02E2  084D               	movf	?_FR_Timer_GetMicros,w
  4775  02E3  00B4               	movwf	_micros
  4776  02E4                     l2626:
  4777                           
  4778                           ;JSN_Sensor.c: 97:     WritePin(Sensor->trigPin, 1);
  4779  02E4  01CB               	clrf	WritePin@val
  4780  02E5  0ACB               	incf	WritePin@val,f
  4781  02E6  0855               	movf	JSN_Sensor_Trig@Sensor,w
  4782  02E7  3E04               	addlw	4
  4783  02E8  0086               	movwf	6
  4784  02E9  0187               	clrf	7
  4785  02EA  0801               	movf	1,w
  4786  02EB  3180  2072  3182   	fcall	_WritePin
  4787  02EE                     l2628:	
  4788                           ;JSN_Sensor.c: 100:     while((FR_Timer_GetMicros() - micros) < 11);
  4789                           
  4790  02EE  3183  23E2  3182   	fcall	_FR_Timer_GetMicros
  4791  02F1  0020               	movlb	0	; select bank0
  4792  02F2  0834               	movf	_micros,w
  4793  02F3  024D               	subwf	?_FR_Timer_GetMicros,w
  4794  02F4  00D1               	movwf	??_JSN_Sensor_Trig
  4795  02F5  0835               	movf	_micros+1,w
  4796  02F6  3B4E               	subwfb	?_FR_Timer_GetMicros+1,w
  4797  02F7  00D2               	movwf	??_JSN_Sensor_Trig+1
  4798  02F8  0836               	movf	_micros+2,w
  4799  02F9  3B4F               	subwfb	?_FR_Timer_GetMicros+2,w
  4800  02FA  00D3               	movwf	??_JSN_Sensor_Trig+2
  4801  02FB  0837               	movf	_micros+3,w
  4802  02FC  3B50               	subwfb	?_FR_Timer_GetMicros+3,w
  4803  02FD  00D4               	movwf	??_JSN_Sensor_Trig+3
  4804  02FE  0854               	movf	??_JSN_Sensor_Trig+3,w
  4805  02FF  1D03               	btfss	3,2
  4806  0300  2B0D               	goto	u440
  4807  0301  0853               	movf	??_JSN_Sensor_Trig+2,w
  4808  0302  1D03               	btfss	3,2
  4809  0303  2B0D               	goto	u440
  4810  0304  0852               	movf	??_JSN_Sensor_Trig+1,w
  4811  0305  1D03               	btfss	3,2
  4812  0306  2B0D               	goto	u440
  4813  0307  300B               	movlw	11
  4814  0308  0251               	subwf	??_JSN_Sensor_Trig,w
  4815  0309  1C03               	btfss	3,0
  4816  030A  2B0C               	goto	u441
  4817  030B  2B0D               	goto	u440
  4818  030C                     u441:
  4819  030C  2AEE               	goto	l2628
  4820  030D                     u440:
  4821  030D                     l2630:
  4822                           
  4823                           ;JSN_Sensor.c: 103:     WritePin(Sensor->trigPin, 0);
  4824  030D  0020               	movlb	0	; select bank0
  4825  030E  01CB               	clrf	WritePin@val
  4826  030F  0855               	movf	JSN_Sensor_Trig@Sensor,w
  4827  0310  3E04               	addlw	4
  4828  0311  0086               	movwf	6
  4829  0312  0187               	clrf	7
  4830  0313  0801               	movf	1,w
  4831  0314  3180  2072  3182   	fcall	_WritePin
  4832  0317                     l2632:
  4833                           
  4834                           ;JSN_Sensor.c: 106:     lastTrig = Sensor;
  4835  0317  0020               	movlb	0	; select bank0
  4836  0318  0855               	movf	JSN_Sensor_Trig@Sensor,w
  4837  0319  00D1               	movwf	??_JSN_Sensor_Trig
  4838  031A  0851               	movf	??_JSN_Sensor_Trig,w
  4839  031B  00C4               	movwf	_lastTrig
  4840  031C                     l65:
  4841  031C  0008               	return
  4842  031D                     __end_of_JSN_Sensor_Trig:
  4843                           
  4844                           	psect	text7
  4845  03E2                     __ptext7:	
  4846 ;; *************** function _FR_Timer_GetMicros *****************
  4847 ;; Defined at:
  4848 ;;		line 46 in file "FR_Timer.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  4    2[BANK0 ] unsigned long 
  4855 ;; Registers used:
  4856 ;;		wreg, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4862 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;Total ram usage:        4 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 5
  4869 ;; This function calls:
  4870 ;;		_TMR0_ReadTimer
  4871 ;; This function is called by:
  4872 ;;		_JSN_Sensor_Trig
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876  03E2                     _FR_Timer_GetMicros:	
  4877                           ;psect for function _FR_Timer_GetMicros
  4878                           
  4879  03E2                     l2600:	
  4880                           ;incstack = 0
  4881                           ; Regs used in _FR_Timer_GetMicros: [wreg+pclath+cstack]
  4882                           
  4883                           
  4884                           ;FR_Timer.c: 47:     return (micros + TMR0_ReadTimer());
  4885  03E2  3184  24C8  3183   	fcall	_TMR0_ReadTimer
  4886  03E5  0020               	movlb	0	; select bank0
  4887  03E6  072C               	addwf	_micros@FR_Timer$F186,w
  4888  03E7  00CD               	movwf	?_FR_Timer_GetMicros
  4889  03E8  082D               	movf	_micros@FR_Timer$F186+1,w
  4890  03E9  1803               	skipnc
  4891  03EA  0F2D               	incfsz	_micros@FR_Timer$F186+1,w
  4892  03EB  1003               	clrc
  4893  03EC  00CE               	movwf	?_FR_Timer_GetMicros+1
  4894  03ED  082E               	movf	_micros@FR_Timer$F186+2,w
  4895  03EE  1803               	skipnc
  4896  03EF  0F2E               	incfsz	_micros@FR_Timer$F186+2,w
  4897  03F0  1003               	clrc
  4898  03F1  00CF               	movwf	?_FR_Timer_GetMicros+2
  4899  03F2  082F               	movf	_micros@FR_Timer$F186+3,w
  4900  03F3  1803               	skipnc
  4901  03F4  0A2F               	incf	_micros@FR_Timer$F186+3,w
  4902  03F5  00D0               	movwf	?_FR_Timer_GetMicros+3
  4903  03F6                     l98:
  4904  03F6  0008               	return
  4905  03F7                     __end_of_FR_Timer_GetMicros:
  4906                           
  4907                           	psect	text8
  4908  04C8                     __ptext8:	
  4909 ;; *************** function _TMR0_ReadTimer *****************
  4910 ;; Defined at:
  4911 ;;		line 62 in file "tmr0.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;		None
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  readVal         1    1[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      unsigned char 
  4918 ;; Registers used:
  4919 ;;		wreg
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;Total ram usage:        2 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 4
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_FR_Timer_GetMicros
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939  04C8                     _TMR0_ReadTimer:	
  4940                           ;psect for function _TMR0_ReadTimer
  4941                           
  4942  04C8                     l2030:	
  4943                           ;incstack = 0
  4944                           ; Regs used in _TMR0_ReadTimer: [wreg]
  4945                           
  4946                           
  4947                           ;tmr0.c: 64:     uint8_t readVal;;tmr0.c: 67:     readVal = TMR0L;
  4948  04C8  0020               	movlb	0	; select bank0
  4949  04C9  0815               	movf	21,w	;volatile
  4950  04CA  00CB               	movwf	??_TMR0_ReadTimer
  4951  04CB  084B               	movf	??_TMR0_ReadTimer,w
  4952  04CC  00CC               	movwf	TMR0_ReadTimer@readVal
  4953                           
  4954                           ;tmr0.c: 69:     return readVal;
  4955  04CD  084C               	movf	TMR0_ReadTimer@readVal,w
  4956  04CE                     l387:
  4957  04CE  0008               	return
  4958  04CF                     __end_of_TMR0_ReadTimer:
  4959                           
  4960                           	psect	text9
  4961  0436                     __ptext9:	
  4962 ;; *************** function _JSN_Library_Init *****************
  4963 ;; Defined at:
  4964 ;;		line 32 in file "JSN_Sensor.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;Total ram usage:        2 bytes
  4983 ;; Hardware stack levels used: 1
  4984 ;; Hardware stack levels required when called: 6
  4985 ;; This function calls:
  4986 ;;		_CCP1_Initialize
  4987 ;;		_JSN_Sensor_Init
  4988 ;;		_TMR1_Initialize
  4989 ;; This function is called by:
  4990 ;;		_main
  4991 ;; This function uses a non-reentrant model
  4992 ;;
  4993                           
  4994  0436                     _JSN_Library_Init:	
  4995                           ;psect for function _JSN_Library_Init
  4996                           
  4997  0436                     l2618:	
  4998                           ;incstack = 0
  4999                           ; Regs used in _JSN_Library_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5000                           
  5001                           
  5002                           ;JSN_Sensor.c: 34:     TMR1_Initialize();
  5003  0436  3183  2386  3184   	fcall	_TMR1_Initialize
  5004                           
  5005                           ;JSN_Sensor.c: 35:     CCP1_Initialize();
  5006  0439  3183  239E  3184   	fcall	_CCP1_Initialize
  5007  043C                     l2620:
  5008                           
  5009                           ;JSN_Sensor.c: 36:     JSN_Sensor_Init(&Sens1, C4, C5);
  5010  043C  3004               	movlw	4
  5011  043D  0020               	movlb	0	; select bank0
  5012  043E  00D4               	movwf	??_JSN_Library_Init
  5013  043F  0854               	movf	??_JSN_Library_Init,w
  5014  0440  00CF               	movwf	JSN_Sensor_Init@trigPin
  5015  0441  3003               	movlw	3
  5016  0442  00D5               	movwf	??_JSN_Library_Init+1
  5017  0443  0855               	movf	??_JSN_Library_Init+1,w
  5018  0444  00D0               	movwf	JSN_Sensor_Init@echoPin
  5019  0445  3045               	movlw	(low (_Sens1| 0))& (0+255)
  5020  0446  3181  21E8  3184   	fcall	_JSN_Sensor_Init
  5021  0449                     l33:
  5022  0449  0008               	return
  5023  044A                     __end_of_JSN_Library_Init:
  5024                           
  5025                           	psect	text10
  5026  0386                     __ptext10:	
  5027 ;; *************** function _TMR1_Initialize *****************
  5028 ;; Defined at:
  5029 ;;		line 20 in file "tmr1.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, pclath, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 5
  5050 ;; This function calls:
  5051 ;;		_TMR1_SetInterruptHandler
  5052 ;; This function is called by:
  5053 ;;		_JSN_Library_Init
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057  0386                     _TMR1_Initialize:	
  5058                           ;psect for function _TMR1_Initialize
  5059                           
  5060  0386                     l2570:	
  5061                           ;incstack = 0
  5062                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5063                           
  5064                           
  5065                           ;tmr1.c: 25:     T1GCON = 0x00;
  5066  0386  0020               	movlb	0	; select bank0
  5067  0387  019C               	clrf	28	;volatile
  5068  0388                     l2572:
  5069                           
  5070                           ;tmr1.c: 28:     TMR1H = 0x80;
  5071  0388  3080               	movlw	128
  5072  0389  009A               	movwf	26	;volatile
  5073  038A                     l2574:
  5074                           
  5075                           ;tmr1.c: 31:     TMR1L = 0x00;
  5076  038A  0199               	clrf	25	;volatile
  5077  038B                     l2576:
  5078                           
  5079                           ;tmr1.c: 34:     PIR1bits.TMR1IF = 0;
  5080  038B  1011               	bcf	17,0	;volatile
  5081                           
  5082                           ;tmr1.c: 37:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5083  038C  081A               	movf	26,w	;volatile
  5084  038D  00F8               	movwf	_timer1ReloadVal+1	;volatile
  5085  038E  0819               	movf	25,w	;volatile
  5086  038F  00F7               	movwf	_timer1ReloadVal	;volatile
  5087  0390                     l2578:
  5088                           
  5089                           ;tmr1.c: 40:     PIE1bits.TMR1IE = 1;
  5090  0390  0021               	movlb	1	; select bank1
  5091  0391  1411               	bsf	17,0	;volatile
  5092  0392                     l2580:
  5093                           
  5094                           ;tmr1.c: 43:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5095  0392  30F2               	movlw	low _TMR1_DefaultInterruptHandler
  5096  0393  0020               	movlb	0	; select bank0
  5097  0394  00CB               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5098  0395  3004               	movlw	high _TMR1_DefaultInterruptHandler
  5099  0396  00CC               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5100  0397  3184  24D5  3183   	fcall	_TMR1_SetInterruptHandler
  5101  039A                     l2582:
  5102                           
  5103                           ;tmr1.c: 46:     T1CON = 0x11;
  5104  039A  3011               	movlw	17
  5105  039B  0020               	movlb	0	; select bank0
  5106  039C  009B               	movwf	27	;volatile
  5107  039D                     l540:
  5108  039D  0008               	return
  5109  039E                     __end_of_TMR1_Initialize:
  5110                           
  5111                           	psect	text11
  5112  04D5                     __ptext11:	
  5113 ;; *************** function _TMR1_SetInterruptHandler *****************
  5114 ;; Defined at:
  5115 ;;		line 154 in file "tmr1.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  5118 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5134 ;;Total ram usage:        2 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 4
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_TMR1_Initialize
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144  04D5                     _TMR1_SetInterruptHandler:	
  5145                           ;psect for function _TMR1_SetInterruptHandler
  5146                           
  5147  04D5                     l2568:	
  5148                           ;incstack = 0
  5149                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  5150                           
  5151                           
  5152                           ;tmr1.c: 155:     TMR1_InterruptHandler = InterruptHandler;
  5153  04D5  0020               	movlb	0	; select bank0
  5154  04D6  084C               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  5155  04D7  00B9               	movwf	_TMR1_InterruptHandler+1
  5156  04D8  084B               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  5157  04D9  00B8               	movwf	_TMR1_InterruptHandler
  5158  04DA                     l573:
  5159  04DA  0008               	return
  5160  04DB                     __end_of_TMR1_SetInterruptHandler:
  5161                           
  5162                           	psect	text12
  5163  01E8                     __ptext12:	
  5164 ;; *************** function _JSN_Sensor_Init *****************
  5165 ;; Defined at:
  5166 ;;		line 42 in file "JSN_Sensor.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  Sensor          1    wreg     PTR struct .
  5169 ;;		 -> Sens1(6), 
  5170 ;;  trigPin         1    4[BANK0 ] enum E7062
  5171 ;;  echoPin         1    5[BANK0 ] enum E7062
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  Sensor          1    8[BANK0 ] PTR struct .
  5174 ;;		 -> Sens1(6), 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      unsigned char 
  5177 ;; Registers used:
  5178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;Total ram usage:        5 bytes
  5189 ;; Hardware stack levels used: 1
  5190 ;; Hardware stack levels required when called: 5
  5191 ;; This function calls:
  5192 ;;		_SetPin
  5193 ;;		_WritePin
  5194 ;; This function is called by:
  5195 ;;		_JSN_Library_Init
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199  01E8                     _JSN_Sensor_Init:	
  5200                           ;psect for function _JSN_Sensor_Init
  5201                           
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _JSN_Sensor_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5205                           ;JSN_Sensor_Init@Sensor stored from wreg
  5206  01E8  0020               	movlb	0	; select bank0
  5207  01E9  00D3               	movwf	JSN_Sensor_Init@Sensor
  5208  01EA                     l2096:
  5209                           
  5210                           ;JSN_Sensor.c: 45:     switch(echoPin) {
  5211  01EA  29F2               	goto	l2102
  5212  01EB                     l39:	
  5213                           ;JSN_Sensor.c: 48:         case C3:
  5214                           
  5215  01EB                     l2098:
  5216                           
  5217                           ;JSN_Sensor.c: 50:             SetPin(echoPin, 1);
  5218  01EB  01CB               	clrf	SetPin@io
  5219  01EC  0ACB               	incf	SetPin@io,f
  5220  01ED  0850               	movf	JSN_Sensor_Init@echoPin,w
  5221  01EE  3181  212D  3181   	fcall	_SetPin
  5222                           
  5223                           ;JSN_Sensor.c: 51:             break;
  5224  01F1  2A14               	goto	l2108
  5225  01F2                     l2102:
  5226  01F2  0850               	movf	JSN_Sensor_Init@echoPin,w
  5227  01F3  00D1               	movwf	??_JSN_Sensor_Init
  5228  01F4  01D2               	clrf	??_JSN_Sensor_Init+1
  5229                           
  5230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5231                           ; Switch size 1, requested type "simple"
  5232                           ; Number of cases is 1, Range of values is 0 to 0
  5233                           ; switch strategies available:
  5234                           ; Name         Instructions Cycles
  5235                           ; simple_byte            4     3 (average)
  5236                           ; direct_byte            8     6 (fixed)
  5237                           ; jumptable            260     6 (fixed)
  5238                           ;	Chosen strategy is simple_byte
  5239  01F5  0852               	movf	??_JSN_Sensor_Init+1,w
  5240  01F6  3A00               	xorlw	0	; case 0
  5241  01F7  1903               	skipnz
  5242  01F8  29FA               	goto	l2876
  5243  01F9  2A68               	goto	l43
  5244  01FA                     l2876:
  5245                           
  5246                           ; Switch size 1, requested type "simple"
  5247                           ; Number of cases is 4, Range of values is 1 to 11
  5248                           ; switch strategies available:
  5249                           ; Name         Instructions Cycles
  5250                           ; simple_byte           13     7 (average)
  5251                           ; direct_byte           31     9 (fixed)
  5252                           ; jumptable            263     9 (fixed)
  5253                           ;	Chosen strategy is simple_byte
  5254  01FA  0851               	movf	??_JSN_Sensor_Init,w
  5255  01FB  3A01               	xorlw	1	; case 1
  5256  01FC  1903               	skipnz
  5257  01FD  29EB               	goto	l2098
  5258  01FE  3A02               	xorlw	2	; case 3
  5259  01FF  1903               	skipnz
  5260  0200  29EB               	goto	l2098
  5261  0201  3A06               	xorlw	6	; case 5
  5262  0202  1903               	skipnz
  5263  0203  29EB               	goto	l2098
  5264  0204  3A0E               	xorlw	14	; case 11
  5265  0205  1903               	skipnz
  5266  0206  29EB               	goto	l39
  5267  0207  2A68               	goto	l43
  5268  0208                     l48:	
  5269                           ;JSN_Sensor.c: 61:         case C7:
  5270                           
  5271  0208                     l2104:
  5272                           
  5273                           ;JSN_Sensor.c: 71:             SetPin(trigPin, 0);
  5274  0208  01CB               	clrf	SetPin@io
  5275  0209  084F               	movf	JSN_Sensor_Init@trigPin,w
  5276  020A  3181  212D  3181   	fcall	_SetPin
  5277                           
  5278                           ;JSN_Sensor.c: 72:             WritePin(trigPin, 0);
  5279  020D  0020               	movlb	0	; select bank0
  5280  020E  01CB               	clrf	WritePin@val
  5281  020F  084F               	movf	JSN_Sensor_Init@trigPin,w
  5282  0210  3180  2072  3181   	fcall	_WritePin
  5283                           
  5284                           ;JSN_Sensor.c: 73:             break;
  5285  0213  2A46               	goto	l2110
  5286  0214                     l2108:
  5287  0214  0020               	movlb	0	; select bank0
  5288  0215  084F               	movf	JSN_Sensor_Init@trigPin,w
  5289  0216  00D1               	movwf	??_JSN_Sensor_Init
  5290  0217  01D2               	clrf	??_JSN_Sensor_Init+1
  5291                           
  5292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5293                           ; Switch size 1, requested type "simple"
  5294                           ; Number of cases is 1, Range of values is 0 to 0
  5295                           ; switch strategies available:
  5296                           ; Name         Instructions Cycles
  5297                           ; simple_byte            4     3 (average)
  5298                           ; direct_byte            8     6 (fixed)
  5299                           ; jumptable            260     6 (fixed)
  5300                           ;	Chosen strategy is simple_byte
  5301  0218  0852               	movf	??_JSN_Sensor_Init+1,w
  5302  0219  3A00               	xorlw	0	; case 0
  5303  021A  1903               	skipnz
  5304  021B  2A1D               	goto	l2878
  5305  021C  2A68               	goto	l43
  5306  021D                     l2878:
  5307                           
  5308                           ; Switch size 1, requested type "simple"
  5309                           ; Number of cases is 13, Range of values is 0 to 17
  5310                           ; switch strategies available:
  5311                           ; Name         Instructions Cycles
  5312                           ; simple_byte           40    21 (average)
  5313                           ; direct_byte           42     6 (fixed)
  5314                           ; jumptable            260     6 (fixed)
  5315                           ;	Chosen strategy is simple_byte
  5316  021D  0851               	movf	??_JSN_Sensor_Init,w
  5317  021E  3A00               	xorlw	0	; case 0
  5318  021F  1903               	skipnz
  5319  0220  2A08               	goto	l48
  5320  0221  3A04               	xorlw	4	; case 4
  5321  0222  1903               	skipnz
  5322  0223  2A08               	goto	l48
  5323  0224  3A02               	xorlw	2	; case 6
  5324  0225  1903               	skipnz
  5325  0226  2A08               	goto	l48
  5326  0227  3A01               	xorlw	1	; case 7
  5327  0228  1903               	skipnz
  5328  0229  2A08               	goto	l2104
  5329  022A  3A0F               	xorlw	15	; case 8
  5330  022B  1903               	skipnz
  5331  022C  2A08               	goto	l2104
  5332  022D  3A01               	xorlw	1	; case 9
  5333  022E  1903               	skipnz
  5334  022F  2A08               	goto	l2104
  5335  0230  3A03               	xorlw	3	; case 10
  5336  0231  1903               	skipnz
  5337  0232  2A08               	goto	l2104
  5338  0233  3A06               	xorlw	6	; case 12
  5339  0234  1903               	skipnz
  5340  0235  2A08               	goto	l2104
  5341  0236  3A01               	xorlw	1	; case 13
  5342  0237  1903               	skipnz
  5343  0238  2A08               	goto	l2104
  5344  0239  3A03               	xorlw	3	; case 14
  5345  023A  1903               	skipnz
  5346  023B  2A08               	goto	l2104
  5347  023C  3A01               	xorlw	1	; case 15
  5348  023D  1903               	skipnz
  5349  023E  2A08               	goto	l2104
  5350  023F  3A1F               	xorlw	31	; case 16
  5351  0240  1903               	skipnz
  5352  0241  2A08               	goto	l2104
  5353  0242  3A01               	xorlw	1	; case 17
  5354  0243  1903               	skipnz
  5355  0244  2A08               	goto	l2104
  5356  0245  2A68               	goto	l43
  5357  0246                     l2110:
  5358                           
  5359                           ;JSN_Sensor.c: 79:     Sensor->distance = 0;
  5360  0246  0020               	movlb	0	; select bank0
  5361  0247  0853               	movf	JSN_Sensor_Init@Sensor,w
  5362  0248  3E02               	addlw	2
  5363  0249  0086               	movwf	6
  5364  024A  0187               	clrf	7
  5365  024B  3000               	movlw	0
  5366  024C  3FC0               	movwi [0]fsr1
  5367  024D  3FC1               	movwi [1]fsr1
  5368  024E                     l2112:
  5369                           
  5370                           ;JSN_Sensor.c: 80:     Sensor->echoHighTime = 0;
  5371  024E  0853               	movf	JSN_Sensor_Init@Sensor,w
  5372  024F  0086               	movwf	6
  5373  0250  0187               	clrf	7
  5374  0251  3000               	movlw	0
  5375  0252  3FC0               	movwi [0]fsr1
  5376  0253  3FC1               	movwi [1]fsr1
  5377  0254                     l2114:
  5378                           
  5379                           ;JSN_Sensor.c: 81:     Sensor->echoPin = echoPin;
  5380  0254  0850               	movf	JSN_Sensor_Init@echoPin,w
  5381  0255  00D1               	movwf	??_JSN_Sensor_Init
  5382  0256  0853               	movf	JSN_Sensor_Init@Sensor,w
  5383  0257  3E05               	addlw	5
  5384  0258  0086               	movwf	6
  5385  0259  0187               	clrf	7
  5386  025A  0851               	movf	??_JSN_Sensor_Init,w
  5387  025B  0081               	movwf	1
  5388  025C                     l2116:
  5389                           
  5390                           ;JSN_Sensor.c: 82:     Sensor->trigPin = trigPin;
  5391  025C  084F               	movf	JSN_Sensor_Init@trigPin,w
  5392  025D  00D1               	movwf	??_JSN_Sensor_Init
  5393  025E  0853               	movf	JSN_Sensor_Init@Sensor,w
  5394  025F  3E04               	addlw	4
  5395  0260  0086               	movwf	6
  5396  0261  0187               	clrf	7
  5397  0262  0851               	movf	??_JSN_Sensor_Init,w
  5398  0263  0081               	movwf	1
  5399  0264                     l2118:
  5400                           
  5401                           ;JSN_Sensor.c: 84:     lastTrig = Sensor;
  5402  0264  0853               	movf	JSN_Sensor_Init@Sensor,w
  5403  0265  00D1               	movwf	??_JSN_Sensor_Init
  5404  0266  0851               	movf	??_JSN_Sensor_Init,w
  5405  0267  00C4               	movwf	_lastTrig
  5406  0268                     l43:
  5407  0268  0008               	return
  5408  0269                     __end_of_JSN_Sensor_Init:
  5409                           
  5410                           	psect	text13
  5411  0072                     __ptext13:	
  5412 ;; *************** function _WritePin *****************
  5413 ;; Defined at:
  5414 ;;		line 175 in file "PIC16Xpress_DevBoard.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  pin             1    wreg     enum E7062
  5417 ;;  val             1    0[BANK0 ] unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  pin             1    3[BANK0 ] enum E7062
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      unsigned char 
  5422 ;; Registers used:
  5423 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5429 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5431 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5432 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5433 ;;Total ram usage:        4 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 4
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_JSN_Sensor_Init
  5440 ;;		_JSN_Sensor_Trig
  5441 ;;		_main
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445  0072                     _WritePin:	
  5446                           ;psect for function _WritePin
  5447                           
  5448                           
  5449                           ;incstack = 0
  5450                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  5451                           ;WritePin@pin stored from wreg
  5452  0072  0020               	movlb	0	; select bank0
  5453  0073  00CE               	movwf	WritePin@pin
  5454  0074                     l1946:
  5455                           
  5456                           ;PIC16Xpress_DevBoard.c: 176:     switch(pin) {
  5457  0074  28EC               	goto	l2018
  5458  0075                     l1948:
  5459                           
  5460                           ;PIC16Xpress_DevBoard.c: 178:             LATAbits.LATA5 = val;
  5461  0075  0C4B               	rrf	WritePin@val,w
  5462  0076  0022               	movlb	2	; select bank2
  5463  0077  1C03               	skipc
  5464  0078  128C               	bcf	12,5	;volatile
  5465  0079  1803               	skipnc
  5466  007A  168C               	bsf	12,5	;volatile
  5467  007B  292C               	goto	l266
  5468  007C                     l1952:
  5469                           
  5470                           ;PIC16Xpress_DevBoard.c: 181:             LATAbits.LATA4 = val;
  5471  007C  0C4B               	rrf	WritePin@val,w
  5472  007D  0022               	movlb	2	; select bank2
  5473  007E  1C03               	skipc
  5474  007F  120C               	bcf	12,4	;volatile
  5475  0080  1803               	skipnc
  5476  0081  160C               	bsf	12,4	;volatile
  5477  0082  292C               	goto	l266
  5478  0083                     l1956:
  5479                           
  5480                           ;PIC16Xpress_DevBoard.c: 186:             LATCbits.LATC5 = val;
  5481  0083  0C4B               	rrf	WritePin@val,w
  5482  0084  0022               	movlb	2	; select bank2
  5483  0085  1C03               	skipc
  5484  0086  128E               	bcf	14,5	;volatile
  5485  0087  1803               	skipnc
  5486  0088  168E               	bsf	14,5	;volatile
  5487  0089  292C               	goto	l266
  5488  008A                     l1960:
  5489                           
  5490                           ;PIC16Xpress_DevBoard.c: 189:             LATCbits.LATC4 = val;
  5491  008A  0C4B               	rrf	WritePin@val,w
  5492  008B  0022               	movlb	2	; select bank2
  5493  008C  1C03               	skipc
  5494  008D  120E               	bcf	14,4	;volatile
  5495  008E  1803               	skipnc
  5496  008F  160E               	bsf	14,4	;volatile
  5497  0090  292C               	goto	l266
  5498  0091                     l1964:
  5499                           
  5500                           ;PIC16Xpress_DevBoard.c: 192:             LATCbits.LATC3 = val;
  5501  0091  0C4B               	rrf	WritePin@val,w
  5502  0092  0022               	movlb	2	; select bank2
  5503  0093  1C03               	skipc
  5504  0094  118E               	bcf	14,3	;volatile
  5505  0095  1803               	skipnc
  5506  0096  158E               	bsf	14,3	;volatile
  5507  0097  292C               	goto	l266
  5508  0098                     l1968:
  5509                           
  5510                           ;PIC16Xpress_DevBoard.c: 195:             LATCbits.LATC6 = val;
  5511  0098  0C4B               	rrf	WritePin@val,w
  5512  0099  0022               	movlb	2	; select bank2
  5513  009A  1C03               	skipc
  5514  009B  130E               	bcf	14,6	;volatile
  5515  009C  1803               	skipnc
  5516  009D  170E               	bsf	14,6	;volatile
  5517  009E  292C               	goto	l266
  5518  009F                     l1972:
  5519                           
  5520                           ;PIC16Xpress_DevBoard.c: 198:             LATCbits.LATC7 = val;
  5521  009F  0C4B               	rrf	WritePin@val,w
  5522  00A0  0022               	movlb	2	; select bank2
  5523  00A1  1C03               	skipc
  5524  00A2  138E               	bcf	14,7	;volatile
  5525  00A3  1803               	skipnc
  5526  00A4  178E               	bsf	14,7	;volatile
  5527  00A5  292C               	goto	l266
  5528  00A6                     l1976:
  5529                           
  5530                           ;PIC16Xpress_DevBoard.c: 201:             LATBbits.LATB7 = val;
  5531  00A6  0C4B               	rrf	WritePin@val,w
  5532  00A7  0022               	movlb	2	; select bank2
  5533  00A8  1C03               	skipc
  5534  00A9  138D               	bcf	13,7	;volatile
  5535  00AA  1803               	skipnc
  5536  00AB  178D               	bsf	13,7	;volatile
  5537  00AC  292C               	goto	l266
  5538  00AD                     l1980:
  5539                           
  5540                           ;PIC16Xpress_DevBoard.c: 204:             LATAbits.LATA0 = val;
  5541  00AD  0C4B               	rrf	WritePin@val,w
  5542  00AE  0022               	movlb	2	; select bank2
  5543  00AF  1C03               	skipc
  5544  00B0  100C               	bcf	12,0	;volatile
  5545  00B1  1803               	skipnc
  5546  00B2  140C               	bsf	12,0	;volatile
  5547  00B3  292C               	goto	l266
  5548  00B4                     l1984:
  5549                           
  5550                           ;PIC16Xpress_DevBoard.c: 207:             LATAbits.LATA1 = val;
  5551  00B4  0C4B               	rrf	WritePin@val,w
  5552  00B5  0022               	movlb	2	; select bank2
  5553  00B6  1C03               	skipc
  5554  00B7  108C               	bcf	12,1	;volatile
  5555  00B8  1803               	skipnc
  5556  00B9  148C               	bsf	12,1	;volatile
  5557  00BA  292C               	goto	l266
  5558  00BB                     l1988:
  5559                           
  5560                           ;PIC16Xpress_DevBoard.c: 210:             LATAbits.LATA2 = val;
  5561  00BB  0C4B               	rrf	WritePin@val,w
  5562  00BC  0022               	movlb	2	; select bank2
  5563  00BD  1C03               	skipc
  5564  00BE  110C               	bcf	12,2	;volatile
  5565  00BF  1803               	skipnc
  5566  00C0  150C               	bsf	12,2	;volatile
  5567  00C1  292C               	goto	l266
  5568  00C2                     l1992:
  5569                           
  5570                           ;PIC16Xpress_DevBoard.c: 213:             LATCbits.LATC0 = val;
  5571  00C2  0C4B               	rrf	WritePin@val,w
  5572  00C3  0022               	movlb	2	; select bank2
  5573  00C4  1C03               	skipc
  5574  00C5  100E               	bcf	14,0	;volatile
  5575  00C6  1803               	skipnc
  5576  00C7  140E               	bsf	14,0	;volatile
  5577  00C8  292C               	goto	l266
  5578  00C9                     l1996:
  5579                           
  5580                           ;PIC16Xpress_DevBoard.c: 216:             LATCbits.LATC1 = val;
  5581  00C9  0C4B               	rrf	WritePin@val,w
  5582  00CA  0022               	movlb	2	; select bank2
  5583  00CB  1C03               	skipc
  5584  00CC  108E               	bcf	14,1	;volatile
  5585  00CD  1803               	skipnc
  5586  00CE  148E               	bsf	14,1	;volatile
  5587  00CF  292C               	goto	l266
  5588  00D0                     l2000:
  5589                           
  5590                           ;PIC16Xpress_DevBoard.c: 219:             LATCbits.LATC2 = val;
  5591  00D0  0C4B               	rrf	WritePin@val,w
  5592  00D1  0022               	movlb	2	; select bank2
  5593  00D2  1C03               	skipc
  5594  00D3  110E               	bcf	14,2	;volatile
  5595  00D4  1803               	skipnc
  5596  00D5  150E               	bsf	14,2	;volatile
  5597  00D6  292C               	goto	l266
  5598  00D7                     l2004:
  5599                           
  5600                           ;PIC16Xpress_DevBoard.c: 222:             LATBbits.LATB4 = val;
  5601  00D7  0C4B               	rrf	WritePin@val,w
  5602  00D8  0022               	movlb	2	; select bank2
  5603  00D9  1C03               	skipc
  5604  00DA  120D               	bcf	13,4	;volatile
  5605  00DB  1803               	skipnc
  5606  00DC  160D               	bsf	13,4	;volatile
  5607  00DD  292C               	goto	l266
  5608  00DE                     l2008:
  5609                           
  5610                           ;PIC16Xpress_DevBoard.c: 225:             LATBbits.LATB5 = val;
  5611  00DE  0C4B               	rrf	WritePin@val,w
  5612  00DF  0022               	movlb	2	; select bank2
  5613  00E0  1C03               	skipc
  5614  00E1  128D               	bcf	13,5	;volatile
  5615  00E2  1803               	skipnc
  5616  00E3  168D               	bsf	13,5	;volatile
  5617  00E4  292C               	goto	l266
  5618  00E5                     l2012:
  5619                           
  5620                           ;PIC16Xpress_DevBoard.c: 228:             LATBbits.LATB6 = val;
  5621  00E5  0C4B               	rrf	WritePin@val,w
  5622  00E6  0022               	movlb	2	; select bank2
  5623  00E7  1C03               	skipc
  5624  00E8  130D               	bcf	13,6	;volatile
  5625  00E9  1803               	skipnc
  5626  00EA  170D               	bsf	13,6	;volatile
  5627  00EB  292C               	goto	l266
  5628  00EC                     l2018:
  5629  00EC  084E               	movf	WritePin@pin,w
  5630  00ED  00CC               	movwf	??_WritePin
  5631  00EE  01CD               	clrf	??_WritePin+1
  5632                           
  5633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5634                           ; Switch size 1, requested type "simple"
  5635                           ; Number of cases is 1, Range of values is 0 to 0
  5636                           ; switch strategies available:
  5637                           ; Name         Instructions Cycles
  5638                           ; simple_byte            4     3 (average)
  5639                           ; direct_byte            8     6 (fixed)
  5640                           ; jumptable            260     6 (fixed)
  5641                           ;	Chosen strategy is simple_byte
  5642  00EF  084D               	movf	??_WritePin+1,w
  5643  00F0  3A00               	xorlw	0	; case 0
  5644  00F1  1903               	skipnz
  5645  00F2  28F4               	goto	l2880
  5646  00F3  292C               	goto	l266
  5647  00F4                     l2880:
  5648                           
  5649                           ; Switch size 1, requested type "simple"
  5650                           ; Number of cases is 18, Range of values is 0 to 17
  5651                           ; switch strategies available:
  5652                           ; Name         Instructions Cycles
  5653                           ; direct_byte           42     6 (fixed)
  5654                           ; simple_byte           55    28 (average)
  5655                           ; jumptable            260     6 (fixed)
  5656                           ;	Chosen strategy is simple_byte
  5657  00F4  084C               	movf	??_WritePin,w
  5658  00F5  3A00               	xorlw	0	; case 0
  5659  00F6  1903               	skipnz
  5660  00F7  2875               	goto	l1948
  5661  00F8  3A01               	xorlw	1	; case 1
  5662  00F9  1903               	skipnz
  5663  00FA  287C               	goto	l1952
  5664  00FB  3A03               	xorlw	3	; case 2
  5665  00FC  1903               	skipnz
  5666  00FD  292C               	goto	l266
  5667  00FE  3A01               	xorlw	1	; case 3
  5668  00FF  1903               	skipnz
  5669  0100  2883               	goto	l1956
  5670  0101  3A07               	xorlw	7	; case 4
  5671  0102  1903               	skipnz
  5672  0103  288A               	goto	l1960
  5673  0104  3A01               	xorlw	1	; case 5
  5674  0105  1903               	skipnz
  5675  0106  2891               	goto	l1964
  5676  0107  3A03               	xorlw	3	; case 6
  5677  0108  1903               	skipnz
  5678  0109  2898               	goto	l1968
  5679  010A  3A01               	xorlw	1	; case 7
  5680  010B  1903               	skipnz
  5681  010C  289F               	goto	l1972
  5682  010D  3A0F               	xorlw	15	; case 8
  5683  010E  1903               	skipnz
  5684  010F  28A6               	goto	l1976
  5685  0110  3A01               	xorlw	1	; case 9
  5686  0111  1903               	skipnz
  5687  0112  28AD               	goto	l1980
  5688  0113  3A03               	xorlw	3	; case 10
  5689  0114  1903               	skipnz
  5690  0115  28B4               	goto	l1984
  5691  0116  3A01               	xorlw	1	; case 11
  5692  0117  1903               	skipnz
  5693  0118  28BB               	goto	l1988
  5694  0119  3A07               	xorlw	7	; case 12
  5695  011A  1903               	skipnz
  5696  011B  28C2               	goto	l1992
  5697  011C  3A01               	xorlw	1	; case 13
  5698  011D  1903               	skipnz
  5699  011E  28C9               	goto	l1996
  5700  011F  3A03               	xorlw	3	; case 14
  5701  0120  1903               	skipnz
  5702  0121  28D0               	goto	l2000
  5703  0122  3A01               	xorlw	1	; case 15
  5704  0123  1903               	skipnz
  5705  0124  28D7               	goto	l2004
  5706  0125  3A1F               	xorlw	31	; case 16
  5707  0126  1903               	skipnz
  5708  0127  28DE               	goto	l2008
  5709  0128  3A01               	xorlw	1	; case 17
  5710  0129  1903               	skipnz
  5711  012A  28E5               	goto	l2012
  5712  012B  292C               	goto	l266
  5713  012C                     l266:
  5714  012C  0008               	return
  5715  012D                     __end_of_WritePin:
  5716                           
  5717                           	psect	text14
  5718  012D                     __ptext14:	
  5719 ;; *************** function _SetPin *****************
  5720 ;; Defined at:
  5721 ;;		line 68 in file "PIC16Xpress_DevBoard.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  pin             1    wreg     enum E7062
  5724 ;;  io              1    0[BANK0 ] unsigned char 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  pin             1    3[BANK0 ] enum E7062
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      unsigned char 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5736 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;Total ram usage:        4 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 4
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_JSN_Sensor_Init
  5747 ;;		_main
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751  012D                     _SetPin:	
  5752                           ;psect for function _SetPin
  5753                           
  5754                           
  5755                           ;incstack = 0
  5756                           ; Regs used in _SetPin: [wreg-fsr0h+status,2+status,0]
  5757                           ;SetPin@pin stored from wreg
  5758  012D  0020               	movlb	0	; select bank0
  5759  012E  00CE               	movwf	SetPin@pin
  5760  012F                     l1866:
  5761                           
  5762                           ;PIC16Xpress_DevBoard.c: 69:     switch(pin) {
  5763  012F  29A7               	goto	l1938
  5764  0130                     l1868:
  5765                           
  5766                           ;PIC16Xpress_DevBoard.c: 71:             TRISAbits.TRISA5 = io;
  5767  0130  0C4B               	rrf	SetPin@io,w
  5768  0131  0021               	movlb	1	; select bank1
  5769  0132  1C03               	skipc
  5770  0133  128C               	bcf	12,5	;volatile
  5771  0134  1803               	skipnc
  5772  0135  168C               	bsf	12,5	;volatile
  5773  0136  29E7               	goto	l218
  5774  0137                     l1872:
  5775                           
  5776                           ;PIC16Xpress_DevBoard.c: 74:             TRISAbits.TRISA4 = io;
  5777  0137  0C4B               	rrf	SetPin@io,w
  5778  0138  0021               	movlb	1	; select bank1
  5779  0139  1C03               	skipc
  5780  013A  120C               	bcf	12,4	;volatile
  5781  013B  1803               	skipnc
  5782  013C  160C               	bsf	12,4	;volatile
  5783  013D  29E7               	goto	l218
  5784  013E                     l1876:
  5785                           
  5786                           ;PIC16Xpress_DevBoard.c: 79:             TRISCbits.TRISC5 = io;
  5787  013E  0C4B               	rrf	SetPin@io,w
  5788  013F  0021               	movlb	1	; select bank1
  5789  0140  1C03               	skipc
  5790  0141  128E               	bcf	14,5	;volatile
  5791  0142  1803               	skipnc
  5792  0143  168E               	bsf	14,5	;volatile
  5793  0144  29E7               	goto	l218
  5794  0145                     l1880:
  5795                           
  5796                           ;PIC16Xpress_DevBoard.c: 82:             TRISCbits.TRISC4 = io;
  5797  0145  0C4B               	rrf	SetPin@io,w
  5798  0146  0021               	movlb	1	; select bank1
  5799  0147  1C03               	skipc
  5800  0148  120E               	bcf	14,4	;volatile
  5801  0149  1803               	skipnc
  5802  014A  160E               	bsf	14,4	;volatile
  5803  014B  29E7               	goto	l218
  5804  014C                     l1884:
  5805                           
  5806                           ;PIC16Xpress_DevBoard.c: 85:             TRISCbits.TRISC3 = io;
  5807  014C  0C4B               	rrf	SetPin@io,w
  5808  014D  0021               	movlb	1	; select bank1
  5809  014E  1C03               	skipc
  5810  014F  118E               	bcf	14,3	;volatile
  5811  0150  1803               	skipnc
  5812  0151  158E               	bsf	14,3	;volatile
  5813  0152  29E7               	goto	l218
  5814  0153                     l1888:
  5815                           
  5816                           ;PIC16Xpress_DevBoard.c: 88:             TRISCbits.TRISC6 = io;
  5817  0153  0C4B               	rrf	SetPin@io,w
  5818  0154  0021               	movlb	1	; select bank1
  5819  0155  1C03               	skipc
  5820  0156  130E               	bcf	14,6	;volatile
  5821  0157  1803               	skipnc
  5822  0158  170E               	bsf	14,6	;volatile
  5823  0159  29E7               	goto	l218
  5824  015A                     l1892:
  5825                           
  5826                           ;PIC16Xpress_DevBoard.c: 91:             TRISCbits.TRISC7 = io;
  5827  015A  0C4B               	rrf	SetPin@io,w
  5828  015B  0021               	movlb	1	; select bank1
  5829  015C  1C03               	skipc
  5830  015D  138E               	bcf	14,7	;volatile
  5831  015E  1803               	skipnc
  5832  015F  178E               	bsf	14,7	;volatile
  5833  0160  29E7               	goto	l218
  5834  0161                     l1896:
  5835                           
  5836                           ;PIC16Xpress_DevBoard.c: 94:             TRISBbits.TRISB7 = io;
  5837  0161  0C4B               	rrf	SetPin@io,w
  5838  0162  0021               	movlb	1	; select bank1
  5839  0163  1C03               	skipc
  5840  0164  138D               	bcf	13,7	;volatile
  5841  0165  1803               	skipnc
  5842  0166  178D               	bsf	13,7	;volatile
  5843  0167  29E7               	goto	l218
  5844  0168                     l1900:
  5845                           
  5846                           ;PIC16Xpress_DevBoard.c: 97:             TRISAbits.TRISA0 = io;
  5847  0168  0C4B               	rrf	SetPin@io,w
  5848  0169  0021               	movlb	1	; select bank1
  5849  016A  1C03               	skipc
  5850  016B  100C               	bcf	12,0	;volatile
  5851  016C  1803               	skipnc
  5852  016D  140C               	bsf	12,0	;volatile
  5853  016E  29E7               	goto	l218
  5854  016F                     l1904:
  5855                           
  5856                           ;PIC16Xpress_DevBoard.c: 100:             TRISAbits.TRISA1 = io;
  5857  016F  0C4B               	rrf	SetPin@io,w
  5858  0170  0021               	movlb	1	; select bank1
  5859  0171  1C03               	skipc
  5860  0172  108C               	bcf	12,1	;volatile
  5861  0173  1803               	skipnc
  5862  0174  148C               	bsf	12,1	;volatile
  5863  0175  29E7               	goto	l218
  5864  0176                     l1908:
  5865                           
  5866                           ;PIC16Xpress_DevBoard.c: 103:             TRISAbits.TRISA2 = io;
  5867  0176  0C4B               	rrf	SetPin@io,w
  5868  0177  0021               	movlb	1	; select bank1
  5869  0178  1C03               	skipc
  5870  0179  110C               	bcf	12,2	;volatile
  5871  017A  1803               	skipnc
  5872  017B  150C               	bsf	12,2	;volatile
  5873  017C  29E7               	goto	l218
  5874  017D                     l1912:
  5875                           
  5876                           ;PIC16Xpress_DevBoard.c: 106:             TRISCbits.TRISC0 = io;
  5877  017D  0C4B               	rrf	SetPin@io,w
  5878  017E  0021               	movlb	1	; select bank1
  5879  017F  1C03               	skipc
  5880  0180  100E               	bcf	14,0	;volatile
  5881  0181  1803               	skipnc
  5882  0182  140E               	bsf	14,0	;volatile
  5883  0183  29E7               	goto	l218
  5884  0184                     l1916:
  5885                           
  5886                           ;PIC16Xpress_DevBoard.c: 109:             TRISCbits.TRISC1 = io;
  5887  0184  0C4B               	rrf	SetPin@io,w
  5888  0185  0021               	movlb	1	; select bank1
  5889  0186  1C03               	skipc
  5890  0187  108E               	bcf	14,1	;volatile
  5891  0188  1803               	skipnc
  5892  0189  148E               	bsf	14,1	;volatile
  5893  018A  29E7               	goto	l218
  5894  018B                     l1920:
  5895                           
  5896                           ;PIC16Xpress_DevBoard.c: 112:             TRISCbits.TRISC2 = io;
  5897  018B  0C4B               	rrf	SetPin@io,w
  5898  018C  0021               	movlb	1	; select bank1
  5899  018D  1C03               	skipc
  5900  018E  110E               	bcf	14,2	;volatile
  5901  018F  1803               	skipnc
  5902  0190  150E               	bsf	14,2	;volatile
  5903  0191  29E7               	goto	l218
  5904  0192                     l1924:
  5905                           
  5906                           ;PIC16Xpress_DevBoard.c: 115:             TRISBbits.TRISB4 = io;
  5907  0192  0C4B               	rrf	SetPin@io,w
  5908  0193  0021               	movlb	1	; select bank1
  5909  0194  1C03               	skipc
  5910  0195  120D               	bcf	13,4	;volatile
  5911  0196  1803               	skipnc
  5912  0197  160D               	bsf	13,4	;volatile
  5913  0198  29E7               	goto	l218
  5914  0199                     l1928:
  5915                           
  5916                           ;PIC16Xpress_DevBoard.c: 118:             TRISBbits.TRISB5 = io;
  5917  0199  0C4B               	rrf	SetPin@io,w
  5918  019A  0021               	movlb	1	; select bank1
  5919  019B  1C03               	skipc
  5920  019C  128D               	bcf	13,5	;volatile
  5921  019D  1803               	skipnc
  5922  019E  168D               	bsf	13,5	;volatile
  5923  019F  29E7               	goto	l218
  5924  01A0                     l1932:
  5925                           
  5926                           ;PIC16Xpress_DevBoard.c: 121:             TRISBbits.TRISB6 = io;
  5927  01A0  0C4B               	rrf	SetPin@io,w
  5928  01A1  0021               	movlb	1	; select bank1
  5929  01A2  1C03               	skipc
  5930  01A3  130D               	bcf	13,6	;volatile
  5931  01A4  1803               	skipnc
  5932  01A5  170D               	bsf	13,6	;volatile
  5933  01A6  29E7               	goto	l218
  5934  01A7                     l1938:
  5935  01A7  084E               	movf	SetPin@pin,w
  5936  01A8  00CC               	movwf	??_SetPin
  5937  01A9  01CD               	clrf	??_SetPin+1
  5938                           
  5939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5940                           ; Switch size 1, requested type "simple"
  5941                           ; Number of cases is 1, Range of values is 0 to 0
  5942                           ; switch strategies available:
  5943                           ; Name         Instructions Cycles
  5944                           ; simple_byte            4     3 (average)
  5945                           ; direct_byte            8     6 (fixed)
  5946                           ; jumptable            260     6 (fixed)
  5947                           ;	Chosen strategy is simple_byte
  5948  01AA  084D               	movf	??_SetPin+1,w
  5949  01AB  3A00               	xorlw	0	; case 0
  5950  01AC  1903               	skipnz
  5951  01AD  29AF               	goto	l2882
  5952  01AE  29E7               	goto	l218
  5953  01AF                     l2882:
  5954                           
  5955                           ; Switch size 1, requested type "simple"
  5956                           ; Number of cases is 18, Range of values is 0 to 17
  5957                           ; switch strategies available:
  5958                           ; Name         Instructions Cycles
  5959                           ; direct_byte           42     6 (fixed)
  5960                           ; simple_byte           55    28 (average)
  5961                           ; jumptable            260     6 (fixed)
  5962                           ;	Chosen strategy is simple_byte
  5963  01AF  084C               	movf	??_SetPin,w
  5964  01B0  3A00               	xorlw	0	; case 0
  5965  01B1  1903               	skipnz
  5966  01B2  2930               	goto	l1868
  5967  01B3  3A01               	xorlw	1	; case 1
  5968  01B4  1903               	skipnz
  5969  01B5  2937               	goto	l1872
  5970  01B6  3A03               	xorlw	3	; case 2
  5971  01B7  1903               	skipnz
  5972  01B8  29E7               	goto	l218
  5973  01B9  3A01               	xorlw	1	; case 3
  5974  01BA  1903               	skipnz
  5975  01BB  293E               	goto	l1876
  5976  01BC  3A07               	xorlw	7	; case 4
  5977  01BD  1903               	skipnz
  5978  01BE  2945               	goto	l1880
  5979  01BF  3A01               	xorlw	1	; case 5
  5980  01C0  1903               	skipnz
  5981  01C1  294C               	goto	l1884
  5982  01C2  3A03               	xorlw	3	; case 6
  5983  01C3  1903               	skipnz
  5984  01C4  2953               	goto	l1888
  5985  01C5  3A01               	xorlw	1	; case 7
  5986  01C6  1903               	skipnz
  5987  01C7  295A               	goto	l1892
  5988  01C8  3A0F               	xorlw	15	; case 8
  5989  01C9  1903               	skipnz
  5990  01CA  2961               	goto	l1896
  5991  01CB  3A01               	xorlw	1	; case 9
  5992  01CC  1903               	skipnz
  5993  01CD  2968               	goto	l1900
  5994  01CE  3A03               	xorlw	3	; case 10
  5995  01CF  1903               	skipnz
  5996  01D0  296F               	goto	l1904
  5997  01D1  3A01               	xorlw	1	; case 11
  5998  01D2  1903               	skipnz
  5999  01D3  2976               	goto	l1908
  6000  01D4  3A07               	xorlw	7	; case 12
  6001  01D5  1903               	skipnz
  6002  01D6  297D               	goto	l1912
  6003  01D7  3A01               	xorlw	1	; case 13
  6004  01D8  1903               	skipnz
  6005  01D9  2984               	goto	l1916
  6006  01DA  3A03               	xorlw	3	; case 14
  6007  01DB  1903               	skipnz
  6008  01DC  298B               	goto	l1920
  6009  01DD  3A01               	xorlw	1	; case 15
  6010  01DE  1903               	skipnz
  6011  01DF  2992               	goto	l1924
  6012  01E0  3A1F               	xorlw	31	; case 16
  6013  01E1  1903               	skipnz
  6014  01E2  2999               	goto	l1928
  6015  01E3  3A01               	xorlw	1	; case 17
  6016  01E4  1903               	skipnz
  6017  01E5  29A0               	goto	l1932
  6018  01E6  29E7               	goto	l218
  6019  01E7                     l218:
  6020  01E7  0008               	return
  6021  01E8                     __end_of_SetPin:
  6022                           
  6023                           	psect	text15
  6024  039E                     __ptext15:	
  6025 ;; *************** function _CCP1_Initialize *****************
  6026 ;; Defined at:
  6027 ;;		line 40 in file "ccp1.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0, pclath, cstack
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used: 1
  6047 ;; Hardware stack levels required when called: 5
  6048 ;; This function calls:
  6049 ;;		_CCP1_SetCallBack
  6050 ;; This function is called by:
  6051 ;;		_JSN_Library_Init
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055  039E                     _CCP1_Initialize:	
  6056                           ;psect for function _CCP1_Initialize
  6057                           
  6058  039E                     l2584:	
  6059                           ;incstack = 0
  6060                           ; Regs used in _CCP1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6061                           
  6062                           
  6063                           ;ccp1.c: 45:  CCP1CON = 0x83;
  6064  039E  3083               	movlw	131
  6065  039F  0025               	movlb	5	; select bank5
  6066  03A0  0093               	movwf	19	;volatile
  6067  03A1                     l2586:
  6068                           
  6069                           ;ccp1.c: 48:  CCP1CAP = 0x00;
  6070  03A1  0194               	clrf	20	;volatile
  6071  03A2                     l2588:
  6072                           
  6073                           ;ccp1.c: 51:  CCPR1H = 0x00;
  6074  03A2  0192               	clrf	18	;volatile
  6075  03A3                     l2590:
  6076                           
  6077                           ;ccp1.c: 54:  CCPR1L = 0x00;
  6078  03A3  0191               	clrf	17	;volatile
  6079  03A4                     l2592:
  6080                           
  6081                           ;ccp1.c: 57:     CCP1_SetCallBack(CCP1_DefaultCallBack);
  6082  03A4  3056               	movlw	low _CCP1_DefaultCallBack
  6083  03A5  0020               	movlb	0	; select bank0
  6084  03A6  00CB               	movwf	CCP1_SetCallBack@customCallBack
  6085  03A7  3003               	movlw	high _CCP1_DefaultCallBack
  6086  03A8  00CC               	movwf	CCP1_SetCallBack@customCallBack+1
  6087  03A9  3184  24DB  3183   	fcall	_CCP1_SetCallBack
  6088  03AC                     l2594:
  6089                           
  6090                           ;ccp1.c: 60:  CCPTMRSbits.C1TSEL = 0x1;
  6091  03AC  0025               	movlb	5	; select bank5
  6092  03AD  081F               	movf	31,w	;volatile
  6093  03AE  39FC               	andlw	-4
  6094  03AF  3801               	iorlw	1
  6095  03B0  009F               	movwf	31	;volatile
  6096  03B1                     l2596:
  6097                           
  6098                           ;ccp1.c: 63:     PIR4bits.CCP1IF = 0;
  6099  03B1  0020               	movlb	0	; select bank0
  6100  03B2  1014               	bcf	20,0	;volatile
  6101  03B3                     l2598:
  6102                           
  6103                           ;ccp1.c: 66:     PIE4bits.CCP1IE = 1;
  6104  03B3  0021               	movlb	1	; select bank1
  6105  03B4  1414               	bsf	20,0	;volatile
  6106  03B5                     l445:
  6107  03B5  0008               	return
  6108  03B6                     __end_of_CCP1_Initialize:
  6109                           
  6110                           	psect	text16
  6111  04DB                     __ptext16:	
  6112 ;; *************** function _CCP1_SetCallBack *****************
  6113 ;; Defined at:
  6114 ;;		line 88 in file "ccp1.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  customCallBa    2    0[BANK0 ] PTR FTN(unsigned short ,
  6117 ;;		 -> CCP1_DefaultCallBack(1), 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6129 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;Total ram usage:        2 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; Hardware stack levels required when called: 4
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_CCP1_Initialize
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143  04DB                     _CCP1_SetCallBack:	
  6144                           ;psect for function _CCP1_SetCallBack
  6145                           
  6146  04DB                     l2566:	
  6147                           ;incstack = 0
  6148                           ; Regs used in _CCP1_SetCallBack: [wreg]
  6149                           
  6150                           
  6151                           ;ccp1.c: 89:     CCP1_CallBack = customCallBack;
  6152  04DB  0020               	movlb	0	; select bank0
  6153  04DC  084C               	movf	CCP1_SetCallBack@customCallBack+1,w
  6154  04DD  00FA               	movwf	_CCP1_CallBack+1
  6155  04DE  084B               	movf	CCP1_SetCallBack@customCallBack,w
  6156  04DF  00F9               	movwf	_CCP1_CallBack
  6157  04E0                     l451:
  6158  04E0  0008               	return
  6159  04E1                     __end_of_CCP1_SetCallBack:
  6160                           
  6161                           	psect	text17
  6162  04EB                     __ptext17:	
  6163 ;; *************** function _FR_Timer_Init *****************
  6164 ;; Defined at:
  6165 ;;		line 33 in file "FR_Timer.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;		None
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, pclath, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;Total ram usage:        0 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 6
  6186 ;; This function calls:
  6187 ;;		_TMR0_Initialize
  6188 ;; This function is called by:
  6189 ;;		_main
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193  04EB                     _FR_Timer_Init:	
  6194                           ;psect for function _FR_Timer_Init
  6195                           
  6196  04EB                     l2702:	
  6197                           ;incstack = 0
  6198                           ; Regs used in _FR_Timer_Init: [wreg+status,2+status,0+pclath+cstack]
  6199                           
  6200                           
  6201                           ;FR_Timer.c: 34:     TMR0_Initialize();
  6202  04EB  3183  23F7  3184   	fcall	_TMR0_Initialize
  6203  04EE                     l92:
  6204  04EE  0008               	return
  6205  04EF                     __end_of_FR_Timer_Init:
  6206                           
  6207                           	psect	text18
  6208  03F7                     __ptext18:	
  6209 ;; *************** function _TMR0_Initialize *****************
  6210 ;; Defined at:
  6211 ;;		line 18 in file "tmr0.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  1    wreg      void 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0, pclath, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;Total ram usage:        0 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; Hardware stack levels required when called: 5
  6232 ;; This function calls:
  6233 ;;		_TMR0_SetInterruptHandler
  6234 ;; This function is called by:
  6235 ;;		_FR_Timer_Init
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239  03F7                     _TMR0_Initialize:	
  6240                           ;psect for function _TMR0_Initialize
  6241                           
  6242  03F7                     l2604:	
  6243                           ;incstack = 0
  6244                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6245                           
  6246                           
  6247                           ;tmr0.c: 23:     T0CON1 = 0x42;
  6248  03F7  3042               	movlw	66
  6249  03F8  0020               	movlb	0	; select bank0
  6250  03F9  0098               	movwf	24	;volatile
  6251                           
  6252                           ;tmr0.c: 26:     TMR0H = 0xF9;
  6253  03FA  30F9               	movlw	249
  6254  03FB  0096               	movwf	22	;volatile
  6255  03FC                     l2606:
  6256                           
  6257                           ;tmr0.c: 29:     TMR0L = 0x00;
  6258  03FC  0195               	clrf	21	;volatile
  6259  03FD                     l2608:
  6260                           
  6261                           ;tmr0.c: 32:     PIR0bits.TMR0IF = 0;
  6262  03FD  1290               	bcf	16,5	;volatile
  6263  03FE                     l2610:
  6264                           
  6265                           ;tmr0.c: 35:     PIE0bits.TMR0IE = 1;
  6266  03FE  0021               	movlb	1	; select bank1
  6267  03FF  1690               	bsf	16,5	;volatile
  6268  0400                     l2612:
  6269                           
  6270                           ;tmr0.c: 38:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  6271  0400  30F3               	movlw	low _TMR0_DefaultInterruptHandler
  6272  0401  0020               	movlb	0	; select bank0
  6273  0402  00CB               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6274  0403  3004               	movlw	high _TMR0_DefaultInterruptHandler
  6275  0404  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6276  0405  3184  24E1  3183   	fcall	_TMR0_SetInterruptHandler
  6277  0408                     l2614:
  6278                           
  6279                           ;tmr0.c: 41:     T0CON0 = 0x80;
  6280  0408  3080               	movlw	128
  6281  0409  0020               	movlb	0	; select bank0
  6282  040A  0097               	movwf	23	;volatile
  6283  040B                     l378:
  6284  040B  0008               	return
  6285  040C                     __end_of_TMR0_Initialize:
  6286                           
  6287                           	psect	text19
  6288  04E1                     __ptext19:	
  6289 ;; *************** function _TMR0_SetInterruptHandler *****************
  6290 ;; Defined at:
  6291 ;;		line 124 in file "tmr0.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6294 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;Total ram usage:        2 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 4
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_TMR0_Initialize
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320  04E1                     _TMR0_SetInterruptHandler:	
  6321                           ;psect for function _TMR0_SetInterruptHandler
  6322                           
  6323  04E1                     l2564:	
  6324                           ;incstack = 0
  6325                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6326                           
  6327                           
  6328                           ;tmr0.c: 125:     TMR0_InterruptHandler = InterruptHandler;
  6329  04E1  0020               	movlb	0	; select bank0
  6330  04E2  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6331  04E3  00C3               	movwf	_TMR0_InterruptHandler+1
  6332  04E4  084B               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6333  04E5  00C2               	movwf	_TMR0_InterruptHandler
  6334  04E6                     l406:
  6335  04E6  0008               	return
  6336  04E7                     __end_of_TMR0_SetInterruptHandler:
  6337                           
  6338                           	psect	text20
  6339  04AA                     __ptext20:	
  6340 ;; *************** function _FR_Timer_GetMillis *****************
  6341 ;; Defined at:
  6342 ;;		line 40 in file "FR_Timer.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  4    0[BANK0 ] unsigned long 
  6349 ;; Registers used:
  6350 ;;		wreg
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6356 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6360 ;;Total ram usage:        4 bytes
  6361 ;; Hardware stack levels used: 1
  6362 ;; Hardware stack levels required when called: 4
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370  04AA                     _FR_Timer_GetMillis:	
  6371                           ;psect for function _FR_Timer_GetMillis
  6372                           
  6373  04AA                     l2706:	
  6374                           ;incstack = 0
  6375                           ; Regs used in _FR_Timer_GetMillis: [wreg]
  6376                           
  6377                           
  6378                           ;FR_Timer.c: 41:     return millis;
  6379  04AA  0020               	movlb	0	; select bank0
  6380  04AB  0833               	movf	_millis+3,w
  6381  04AC  00CE               	movwf	?_FR_Timer_GetMillis+3
  6382  04AD  0832               	movf	_millis+2,w
  6383  04AE  00CD               	movwf	?_FR_Timer_GetMillis+2
  6384  04AF  0831               	movf	_millis+1,w
  6385  04B0  00CC               	movwf	?_FR_Timer_GetMillis+1
  6386  04B1  0830               	movf	_millis,w
  6387  04B2  00CB               	movwf	?_FR_Timer_GetMillis
  6388  04B3                     l95:
  6389  04B3  0008               	return
  6390  04B4                     __end_of_FR_Timer_GetMillis:
  6391                           
  6392                           	psect	intentry
  6393  0004                     __pintentry:	
  6394 ;; *************** function _InterruptManager *****************
  6395 ;; Defined at:
  6396 ;;		line 240 in file "PIC16Xpress_DevBoard.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used: 1
  6416 ;; Hardware stack levels required when called: 3
  6417 ;; This function calls:
  6418 ;;		_CCP1_CaptureISR
  6419 ;;		_CCP2_CaptureISR
  6420 ;;		_CCP3_CaptureISR
  6421 ;;		_TMR0_ISR
  6422 ;;		_TMR1_ISR
  6423 ;; This function is called by:
  6424 ;;		Interrupt level 1
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428  0004                     _InterruptManager:
  6429                           
  6430                           ;incstack = 0
  6431  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6432                           
  6433                           ; Regs used in _InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6434  0005  3180               	pagesel	$
  6435  0006                     i1l2340:
  6436                           
  6437                           ;PIC16Xpress_DevBoard.c: 243:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  6438  0006  0021               	movlb	1	; select bank1
  6439  0007  1E90               	btfss	16,5	;volatile
  6440  0008  280A               	goto	u30_21
  6441  0009  280B               	goto	u30_20
  6442  000A                     u30_21:
  6443  000A  2814               	goto	i1l290
  6444  000B                     u30_20:
  6445  000B                     i1l2342:
  6446  000B  0020               	movlb	0	; select bank0
  6447  000C  1E90               	btfss	16,5	;volatile
  6448  000D  280F               	goto	u31_21
  6449  000E  2810               	goto	u31_20
  6450  000F                     u31_21:
  6451  000F  2814               	goto	i1l290
  6452  0010                     u31_20:
  6453  0010                     i1l2344:
  6454                           
  6455                           ;PIC16Xpress_DevBoard.c: 244:     {;PIC16Xpress_DevBoard.c: 245:         TMR0_ISR();
  6456  0010  3184  240C  3180   	fcall	_TMR0_ISR
  6457                           
  6458                           ;PIC16Xpress_DevBoard.c: 246:     }
  6459  0013  285C               	goto	i1l302
  6460  0014                     i1l290:	
  6461                           ;PIC16Xpress_DevBoard.c: 247:     else if(PIE0bits.IOCIE == 1 && PIR0bits.IOCIF == 1)
  6462                           
  6463  0014  0021               	movlb	1	; select bank1
  6464  0015  1E10               	btfss	16,4	;volatile
  6465  0016  2818               	goto	u32_21
  6466  0017  2819               	goto	u32_20
  6467  0018                     u32_21:
  6468  0018  2820               	goto	i1l292
  6469  0019                     u32_20:
  6470  0019                     i1l2346:
  6471  0019  0020               	movlb	0	; select bank0
  6472  001A  1E10               	btfss	16,4	;volatile
  6473  001B  281D               	goto	u33_21
  6474  001C  281E               	goto	u33_20
  6475  001D                     u33_21:
  6476  001D  2820               	goto	i1l292
  6477  001E                     u33_20:
  6478  001E                     i1l2348:
  6479                           
  6480                           ;PIC16Xpress_DevBoard.c: 248:     {;PIC16Xpress_DevBoard.c: 249:         PIR0bits.IOCIF 
      +                          = 0;
  6481  001E  1210               	bcf	16,4	;volatile
  6482                           
  6483                           ;PIC16Xpress_DevBoard.c: 250:     }
  6484  001F  285C               	goto	i1l302
  6485  0020                     i1l292:	
  6486                           ;PIC16Xpress_DevBoard.c: 251:     else if(INTCONbits.PEIE == 1)
  6487                           
  6488  0020  1F0B               	btfss	11,6	;volatile
  6489  0021  2823               	goto	u34_21
  6490  0022  2824               	goto	u34_20
  6491  0023                     u34_21:
  6492  0023  285C               	goto	i1l302
  6493  0024                     u34_20:
  6494  0024                     i1l2350:
  6495                           
  6496                           ;PIC16Xpress_DevBoard.c: 252:     {;PIC16Xpress_DevBoard.c: 253:         if(PIE4bits.CCP
      +                          3IE == 1 && PIR4bits.CCP3IF == 1)
  6497  0024  0021               	movlb	1	; select bank1
  6498  0025  1D14               	btfss	20,2	;volatile
  6499  0026  2828               	goto	u35_21
  6500  0027  2829               	goto	u35_20
  6501  0028                     u35_21:
  6502  0028  2832               	goto	i1l295
  6503  0029                     u35_20:
  6504  0029                     i1l2352:
  6505  0029  0020               	movlb	0	; select bank0
  6506  002A  1D14               	btfss	20,2	;volatile
  6507  002B  282D               	goto	u36_21
  6508  002C  282E               	goto	u36_20
  6509  002D                     u36_21:
  6510  002D  2832               	goto	i1l295
  6511  002E                     u36_20:
  6512  002E                     i1l2354:
  6513                           
  6514                           ;PIC16Xpress_DevBoard.c: 254:         {;PIC16Xpress_DevBoard.c: 255:             CCP3_Ca
      +                          ptureISR();
  6515  002E  3183  23B6  3180   	fcall	_CCP3_CaptureISR
  6516                           
  6517                           ;PIC16Xpress_DevBoard.c: 256:         }
  6518  0031  285C               	goto	i1l302
  6519  0032                     i1l295:	
  6520                           ;PIC16Xpress_DevBoard.c: 257:         else if(PIE4bits.CCP2IE == 1 && PIR4bits.CCP2IF ==
      +                           1)
  6521                           
  6522  0032  0021               	movlb	1	; select bank1
  6523  0033  1C94               	btfss	20,1	;volatile
  6524  0034  2836               	goto	u37_21
  6525  0035  2837               	goto	u37_20
  6526  0036                     u37_21:
  6527  0036  2840               	goto	i1l297
  6528  0037                     u37_20:
  6529  0037                     i1l2356:
  6530  0037  0020               	movlb	0	; select bank0
  6531  0038  1C94               	btfss	20,1	;volatile
  6532  0039  283B               	goto	u38_21
  6533  003A  283C               	goto	u38_20
  6534  003B                     u38_21:
  6535  003B  2840               	goto	i1l297
  6536  003C                     u38_20:
  6537  003C                     i1l2358:
  6538                           
  6539                           ;PIC16Xpress_DevBoard.c: 258:         {;PIC16Xpress_DevBoard.c: 259:             CCP2_Ca
      +                          ptureISR();
  6540  003C  3183  23CC  3180   	fcall	_CCP2_CaptureISR
  6541                           
  6542                           ;PIC16Xpress_DevBoard.c: 260:         }
  6543  003F  285C               	goto	i1l302
  6544  0040                     i1l297:	
  6545                           ;PIC16Xpress_DevBoard.c: 261:         else if(PIE4bits.CCP1IE == 1 && PIR4bits.CCP1IF ==
      +                           1)
  6546                           
  6547  0040  0021               	movlb	1	; select bank1
  6548  0041  1C14               	btfss	20,0	;volatile
  6549  0042  2844               	goto	u39_21
  6550  0043  2845               	goto	u39_20
  6551  0044                     u39_21:
  6552  0044  284E               	goto	i1l299
  6553  0045                     u39_20:
  6554  0045                     i1l2360:
  6555  0045  0020               	movlb	0	; select bank0
  6556  0046  1C14               	btfss	20,0	;volatile
  6557  0047  2849               	goto	u40_21
  6558  0048  284A               	goto	u40_20
  6559  0049                     u40_21:
  6560  0049  284E               	goto	i1l299
  6561  004A                     u40_20:
  6562  004A                     i1l2362:
  6563                           
  6564                           ;PIC16Xpress_DevBoard.c: 262:         {;PIC16Xpress_DevBoard.c: 263:             CCP1_Ca
      +                          ptureISR();
  6565  004A  3184  2421  3180   	fcall	_CCP1_CaptureISR
  6566                           
  6567                           ;PIC16Xpress_DevBoard.c: 264:         }
  6568  004D  285C               	goto	i1l302
  6569  004E                     i1l299:	
  6570                           ;PIC16Xpress_DevBoard.c: 265:         else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF ==
      +                           1)
  6571                           
  6572  004E  0021               	movlb	1	; select bank1
  6573  004F  1C11               	btfss	17,0	;volatile
  6574  0050  2852               	goto	u41_21
  6575  0051  2853               	goto	u41_20
  6576  0052                     u41_21:
  6577  0052  285C               	goto	i1l296
  6578  0053                     u41_20:
  6579  0053                     i1l2364:
  6580  0053  0020               	movlb	0	; select bank0
  6581  0054  1C11               	btfss	17,0	;volatile
  6582  0055  2857               	goto	u42_21
  6583  0056  2858               	goto	u42_20
  6584  0057                     u42_21:
  6585  0057  285C               	goto	i1l296
  6586  0058                     u42_20:
  6587  0058                     i1l2366:
  6588                           
  6589                           ;PIC16Xpress_DevBoard.c: 266:         {;PIC16Xpress_DevBoard.c: 267:             TMR1_IS
      +                          R();
  6590  0058  3184  246E  3180   	fcall	_TMR1_ISR
  6591  005B  285C               	goto	i1l302
  6592  005C                     i1l296:
  6593  005C                     i1l302:
  6594  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6595  005D  0009               	retfie
  6596  005E                     __end_of_InterruptManager:
  6597                           
  6598                           	psect	text22
  6599  046E                     __ptext22:	
  6600 ;; *************** function _TMR1_ISR *****************
  6601 ;; Defined at:
  6602 ;;		line 129 in file "tmr1.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;		None
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      void 
  6609 ;; Registers used:
  6610 ;;		wreg, status,2, status,0, pclath, cstack
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used: 1
  6622 ;; Hardware stack levels required when called: 2
  6623 ;; This function calls:
  6624 ;;		_TMR1_CallBack
  6625 ;;		_TMR1_WriteTimer
  6626 ;; This function is called by:
  6627 ;;		_InterruptManager
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631  046E                     _TMR1_ISR:	
  6632                           ;psect for function _TMR1_ISR
  6633                           
  6634  046E                     i1l2310:	
  6635                           ;incstack = 0
  6636                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  6637                           
  6638                           
  6639                           ;tmr1.c: 133:     PIR1bits.TMR1IF = 0;
  6640  046E  0020               	movlb	0	; select bank0
  6641  046F  1011               	bcf	17,0	;volatile
  6642  0470                     i1l2312:
  6643                           
  6644                           ;tmr1.c: 134:     TMR1_WriteTimer(timer1ReloadVal);
  6645  0470  0878               	movf	_timer1ReloadVal+1,w	;volatile
  6646  0471  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  6647  0472  0877               	movf	_timer1ReloadVal,w	;volatile
  6648  0473  00F0               	movwf	TMR1_WriteTimer@timerVal
  6649  0474  3184  245D  3184   	fcall	_TMR1_WriteTimer
  6650                           
  6651                           ;tmr1.c: 138:     TMR1_CallBack();
  6652  0477  3184  247B  3184   	fcall	_TMR1_CallBack
  6653  047A                     i1l566:
  6654  047A  0008               	return
  6655  047B                     __end_of_TMR1_ISR:
  6656                           
  6657                           	psect	text23
  6658  045D                     __ptext23:	
  6659 ;; *************** function _TMR1_WriteTimer *****************
  6660 ;; Defined at:
  6661 ;;		line 84 in file "tmr1.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  timerVal        2    0[COMMON] unsigned short 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1    wreg      void 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6679 ;;Total ram usage:        2 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_TMR1_ISR
  6685 ;;		_TMR1_Reload
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689  045D                     _TMR1_WriteTimer:	
  6690                           ;psect for function _TMR1_WriteTimer
  6691                           
  6692  045D                     i1l2174:	
  6693                           ;incstack = 0
  6694                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  6695                           
  6696                           
  6697                           ;tmr1.c: 84: void TMR1_WriteTimer(uint16_t timerVal);tmr1.c: 85: {;tmr1.c: 86:     if (T
      +                          1CONbits.T1SYNC == 1)
  6698  045D  0020               	movlb	0	; select bank0
  6699  045E  1D1B               	btfss	27,2	;volatile
  6700  045F  2C61               	goto	u24_21
  6701  0460  2C62               	goto	u24_20
  6702  0461                     u24_21:
  6703  0461  2C69               	goto	i1l2184
  6704  0462                     u24_20:
  6705  0462                     i1l2176:
  6706                           
  6707                           ;tmr1.c: 87:     {;tmr1.c: 89:         T1CONbits.TMR1ON = 0;
  6708  0462  101B               	bcf	27,0	;volatile
  6709  0463                     i1l2178:
  6710                           
  6711                           ;tmr1.c: 92:         TMR1H = (uint8_t)(timerVal >> 8);
  6712  0463  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6713  0464  009A               	movwf	26	;volatile
  6714  0465                     i1l2180:
  6715                           
  6716                           ;tmr1.c: 93:         TMR1L = (uint8_t)timerVal;
  6717  0465  0870               	movf	TMR1_WriteTimer@timerVal,w
  6718  0466  0099               	movwf	25	;volatile
  6719  0467                     i1l2182:
  6720                           
  6721                           ;tmr1.c: 96:         T1CONbits.TMR1ON =1;
  6722  0467  141B               	bsf	27,0	;volatile
  6723                           
  6724                           ;tmr1.c: 97:     }
  6725  0468  2C6D               	goto	i1l554
  6726  0469                     i1l2184:
  6727                           
  6728                           ;tmr1.c: 99:     {;tmr1.c: 101:         TMR1H = (uint8_t)(timerVal >> 8);
  6729  0469  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  6730  046A  009A               	movwf	26	;volatile
  6731  046B                     i1l2186:
  6732                           
  6733                           ;tmr1.c: 102:         TMR1L = (uint8_t)timerVal;
  6734  046B  0870               	movf	TMR1_WriteTimer@timerVal,w
  6735  046C  0099               	movwf	25	;volatile
  6736  046D                     i1l554:
  6737  046D  0008               	return
  6738  046E                     __end_of_TMR1_WriteTimer:
  6739                           
  6740                           	psect	text24
  6741  047B                     __ptext24:	
  6742 ;; *************** function _TMR1_CallBack *****************
  6743 ;; Defined at:
  6744 ;;		line 143 in file "tmr1.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;		None
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      void 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0, pclath, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;Total ram usage:        0 bytes
  6763 ;; Hardware stack levels used: 1
  6764 ;; Hardware stack levels required when called: 1
  6765 ;; This function calls:
  6766 ;;		Absolute function
  6767 ;;		_TMR1_DefaultInterruptHandler
  6768 ;; This function is called by:
  6769 ;;		_TMR1_ISR
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773  047B                     _TMR1_CallBack:	
  6774                           ;psect for function _TMR1_CallBack
  6775                           
  6776  047B                     i1l2188:	
  6777                           ;incstack = 0
  6778                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6779                           
  6780                           
  6781                           ;tmr1.c: 146:     if(TMR1_InterruptHandler)
  6782  047B  0020               	movlb	0	; select bank0
  6783  047C  0838               	movf	_TMR1_InterruptHandler,w
  6784  047D  0439               	iorwf	_TMR1_InterruptHandler+1,w
  6785  047E  1903               	btfsc	3,2
  6786  047F  2C81               	goto	u25_21
  6787  0480  2C82               	goto	u25_20
  6788  0481                     u25_21:
  6789  0481  2C87               	goto	i1l570
  6790  0482                     u25_20:
  6791  0482                     i1l2190:
  6792                           
  6793                           ;tmr1.c: 147:     {;tmr1.c: 148:         TMR1_InterruptHandler();
  6794  0482  0839               	movf	_TMR1_InterruptHandler+1,w
  6795  0483  008A               	movwf	10
  6796  0484  0838               	movf	_TMR1_InterruptHandler,w
  6797  0485  000A               	callw
  6798  0486  3184               	pagesel	$
  6799  0487                     i1l570:
  6800  0487  0008               	return
  6801  0488                     __end_of_TMR1_CallBack:
  6802                           
  6803                           	psect	text25
  6804  04F2                     __ptext25:	
  6805 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  6806 ;; Defined at:
  6807 ;;		line 160 in file "tmr1.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;		None
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      void 
  6814 ;; Registers used:
  6815 ;;		None
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used: 1
  6827 ;; This function calls:
  6828 ;;		Nothing
  6829 ;; This function is called by:
  6830 ;;		_TMR1_Initialize
  6831 ;;		_TMR1_CallBack
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835  04F2                     _TMR1_DefaultInterruptHandler:	
  6836                           ;psect for function _TMR1_DefaultInterruptHandler
  6837                           
  6838  04F2                     i1l576:	
  6839                           ;incstack = 0
  6840                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  6841                           
  6842  04F2  0008               	return
  6843  04F3                     __end_of_TMR1_DefaultInterruptHandler:
  6844                           
  6845                           	psect	text26
  6846  040C                     __ptext26:	
  6847 ;; *************** function _TMR0_ISR *****************
  6848 ;; Defined at:
  6849 ;;		line 90 in file "tmr0.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, pclath, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 2
  6870 ;; This function calls:
  6871 ;;		_TMR0_CallBack
  6872 ;; This function is called by:
  6873 ;;		_InterruptManager
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877  040C                     _TMR0_ISR:	
  6878                           ;psect for function _TMR0_ISR
  6879                           
  6880  040C                     i1l2284:	
  6881                           ;incstack = 0
  6882                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6883                           
  6884                           
  6885                           ;tmr0.c: 92:     static volatile uint16_t CountCallBack = 0;;tmr0.c: 95:     PIR0bits.TM
      +                          R0IF = 0;
  6886  040C  0020               	movlb	0	; select bank0
  6887  040D  1290               	bcf	16,5	;volatile
  6888  040E                     i1l2286:
  6889                           
  6890                           ;tmr0.c: 97:     if (++CountCallBack >= 4)
  6891  040E  3001               	movlw	1
  6892  040F  07FB               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  6893  0410  3000               	movlw	0
  6894  0411  3DFC               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  6895  0412  3000               	movlw	0
  6896  0413  027C               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  6897  0414  3004               	movlw	4
  6898  0415  1903               	skipnz
  6899  0416  027B               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  6900  0417  1C03               	skipc
  6901  0418  2C1A               	goto	u27_21
  6902  0419  2C1B               	goto	u27_20
  6903  041A                     u27_21:
  6904  041A  2C20               	goto	i1l399
  6905  041B                     u27_20:
  6906  041B                     i1l2288:
  6907                           
  6908                           ;tmr0.c: 98:     {;tmr0.c: 100:         TMR0_CallBack();
  6909  041B  3184  244A  3184   	fcall	_TMR0_CallBack
  6910  041E                     i1l2290:
  6911                           
  6912                           ;tmr0.c: 103:         CountCallBack = 0;
  6913  041E  01FB               	clrf	TMR0_ISR@CountCallBack	;volatile
  6914  041F  01FC               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  6915  0420                     i1l399:
  6916  0420  0008               	return
  6917  0421                     __end_of_TMR0_ISR:
  6918                           
  6919                           	psect	text27
  6920  044A                     __ptext27:	
  6921 ;; *************** function _TMR0_CallBack *****************
  6922 ;; Defined at:
  6923 ;;		line 111 in file "tmr0.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 1
  6944 ;; This function calls:
  6945 ;;		Absolute function
  6946 ;;		_FR_Timer_IncMicros
  6947 ;;		_FR_Timer_IncMillis
  6948 ;;		_TMR0_DefaultInterruptHandler
  6949 ;; This function is called by:
  6950 ;;		_TMR0_ISR
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954  044A                     _TMR0_CallBack:	
  6955                           ;psect for function _TMR0_CallBack
  6956                           
  6957  044A                     i1l2152:	
  6958                           ;incstack = 0
  6959                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6960                           
  6961                           
  6962                           ;tmr0.c: 113:     FR_Timer_IncMillis();
  6963  044A  3184  24B4  3184   	fcall	_FR_Timer_IncMillis
  6964                           
  6965                           ;tmr0.c: 114:     FR_Timer_IncMicros();
  6966  044D  3184  24BE  3184   	fcall	_FR_Timer_IncMicros
  6967  0450                     i1l2154:
  6968                           
  6969                           ;tmr0.c: 116:     if(TMR0_InterruptHandler)
  6970  0450  0020               	movlb	0	; select bank0
  6971  0451  0842               	movf	_TMR0_InterruptHandler,w
  6972  0452  0443               	iorwf	_TMR0_InterruptHandler+1,w
  6973  0453  1903               	btfsc	3,2
  6974  0454  2C56               	goto	u23_21
  6975  0455  2C57               	goto	u23_20
  6976  0456                     u23_21:
  6977  0456  2C5C               	goto	i1l403
  6978  0457                     u23_20:
  6979  0457                     i1l2156:
  6980                           
  6981                           ;tmr0.c: 117:     {;tmr0.c: 118:         TMR0_InterruptHandler();
  6982  0457  0843               	movf	_TMR0_InterruptHandler+1,w
  6983  0458  008A               	movwf	10
  6984  0459  0842               	movf	_TMR0_InterruptHandler,w
  6985  045A  000A               	callw
  6986  045B  3184               	pagesel	$
  6987  045C                     i1l403:
  6988  045C  0008               	return
  6989  045D                     __end_of_TMR0_CallBack:
  6990                           
  6991                           	psect	text28
  6992  04F3                     __ptext28:	
  6993 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6994 ;; Defined at:
  6995 ;;		line 130 in file "tmr0.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;		None
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;		None
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      void 
  7002 ;; Registers used:
  7003 ;;		None
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;Total ram usage:        0 bytes
  7014 ;; Hardware stack levels used: 1
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_TMR0_Initialize
  7019 ;;		_TMR0_CallBack
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023  04F3                     _TMR0_DefaultInterruptHandler:	
  7024                           ;psect for function _TMR0_DefaultInterruptHandler
  7025                           
  7026  04F3                     i1l409:	
  7027                           ;incstack = 0
  7028                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7029                           
  7030  04F3  0008               	return
  7031  04F4                     __end_of_TMR0_DefaultInterruptHandler:
  7032                           
  7033                           	psect	text29
  7034  04B4                     __ptext29:	
  7035 ;; *************** function _FR_Timer_IncMillis *****************
  7036 ;; Defined at:
  7037 ;;		line 52 in file "FR_Timer.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;		None
  7040 ;; Auto vars:     Size  Location     Type
  7041 ;;		None
  7042 ;; Return value:  Size  Location     Type
  7043 ;;                  1    wreg      void 
  7044 ;; Registers used:
  7045 ;;		wreg
  7046 ;; Tracked objects:
  7047 ;;		On entry : 0/0
  7048 ;;		On exit  : 0/0
  7049 ;;		Unchanged: 0/0
  7050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;Total ram usage:        0 bytes
  7056 ;; Hardware stack levels used: 1
  7057 ;; This function calls:
  7058 ;;		Nothing
  7059 ;; This function is called by:
  7060 ;;		_TMR0_CallBack
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064  04B4                     _FR_Timer_IncMillis:	
  7065                           ;psect for function _FR_Timer_IncMillis
  7066                           
  7067  04B4                     i1l2034:	
  7068                           ;incstack = 0
  7069                           ; Regs used in _FR_Timer_IncMillis: [wreg]
  7070                           
  7071                           
  7072                           ;FR_Timer.c: 53:     millis ++;
  7073  04B4  3001               	movlw	1
  7074  04B5  0020               	movlb	0	; select bank0
  7075  04B6  07B0               	addwf	_millis,f
  7076  04B7  3000               	movlw	0
  7077  04B8  3DB1               	addwfc	_millis+1,f
  7078  04B9  3000               	movlw	0
  7079  04BA  3DB2               	addwfc	_millis+2,f
  7080  04BB  3000               	movlw	0
  7081  04BC  3DB3               	addwfc	_millis+3,f
  7082  04BD                     i1l101:
  7083  04BD  0008               	return
  7084  04BE                     __end_of_FR_Timer_IncMillis:
  7085                           
  7086                           	psect	text30
  7087  04BE                     __ptext30:	
  7088 ;; *************** function _FR_Timer_IncMicros *****************
  7089 ;; Defined at:
  7090 ;;		line 59 in file "FR_Timer.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;		None
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      void 
  7097 ;; Registers used:
  7098 ;;		wreg
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;Total ram usage:        0 bytes
  7109 ;; Hardware stack levels used: 1
  7110 ;; This function calls:
  7111 ;;		Nothing
  7112 ;; This function is called by:
  7113 ;;		_TMR0_CallBack
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117  04BE                     _FR_Timer_IncMicros:	
  7118                           ;psect for function _FR_Timer_IncMicros
  7119                           
  7120  04BE                     i1l2038:	
  7121                           ;incstack = 0
  7122                           ; Regs used in _FR_Timer_IncMicros: [wreg]
  7123                           
  7124                           
  7125                           ;FR_Timer.c: 60:     micros += 1000;
  7126  04BE  30E8               	movlw	232
  7127  04BF  0020               	movlb	0	; select bank0
  7128  04C0  07AC               	addwf	_micros@FR_Timer$F186,f
  7129  04C1  3003               	movlw	3
  7130  04C2  3DAD               	addwfc	_micros@FR_Timer$F186+1,f
  7131  04C3  3000               	movlw	0
  7132  04C4  3DAE               	addwfc	_micros@FR_Timer$F186+2,f
  7133  04C5  3000               	movlw	0
  7134  04C6  3DAF               	addwfc	_micros@FR_Timer$F186+3,f
  7135  04C7                     i1l104:
  7136  04C7  0008               	return
  7137  04C8                     __end_of_FR_Timer_IncMicros:
  7138                           
  7139                           	psect	text31
  7140  03B6                     __ptext31:	
  7141 ;; *************** function _CCP3_CaptureISR *****************
  7142 ;; Defined at:
  7143 ;;		line 55 in file "ccp3.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  module          2    3[COMMON] struct CCPR3Reg_tag
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2, status,0, pclath, cstack
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;Total ram usage:        3 bytes
  7162 ;; Hardware stack levels used: 1
  7163 ;; Hardware stack levels required when called: 1
  7164 ;; This function calls:
  7165 ;;		Absolute function
  7166 ;;		_CCP3_DefaultCallBack
  7167 ;; This function is called by:
  7168 ;;		_InterruptManager
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172  03B6                     _CCP3_CaptureISR:	
  7173                           ;psect for function _CCP3_CaptureISR
  7174                           
  7175  03B6                     i1l2292:	
  7176                           ;incstack = 0
  7177                           ; Regs used in _CCP3_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  7178                           
  7179                           
  7180                           ;ccp3.c: 57:     CCP3_PERIOD_REG_T module;;ccp3.c: 60:     PIR4bits.CCP3IF = 0;
  7181  03B6  0020               	movlb	0	; select bank0
  7182  03B7  1114               	bcf	20,2	;volatile
  7183  03B8                     i1l2294:
  7184                           
  7185                           ;ccp3.c: 63:     module.ccpr3l = CCPR3L;
  7186  03B8  0026               	movlb	6	; select bank6
  7187  03B9  0811               	movf	17,w	;volatile
  7188  03BA  00F2               	movwf	??_CCP3_CaptureISR
  7189  03BB  0872               	movf	??_CCP3_CaptureISR,w
  7190  03BC  00F3               	movwf	CCP3_CaptureISR@module
  7191                           
  7192                           ;ccp3.c: 64:     module.ccpr3h = CCPR3H;
  7193  03BD  0812               	movf	18,w	;volatile
  7194  03BE  00F2               	movwf	??_CCP3_CaptureISR
  7195  03BF  0872               	movf	??_CCP3_CaptureISR,w
  7196  03C0  00F4               	movwf	CCP3_CaptureISR@module+1
  7197  03C1                     i1l2296:
  7198                           
  7199                           ;ccp3.c: 67:     CCP3_CallBack(module.ccpr3_16Bit);
  7200  03C1  0874               	movf	CCP3_CaptureISR@module+1,w
  7201  03C2  00F1               	movwf	CCP3_DefaultCallBack@capturedValue+1
  7202  03C3  0873               	movf	CCP3_CaptureISR@module,w
  7203  03C4  00F0               	movwf	CCP3_DefaultCallBack@capturedValue
  7204  03C5  0020               	movlb	0	; select bank0
  7205  03C6  083B               	movf	_CCP3_CallBack+1,w
  7206  03C7  008A               	movwf	10
  7207  03C8  083A               	movf	_CCP3_CallBack,w
  7208  03C9  000A               	callw
  7209  03CA  3183               	pagesel	$
  7210  03CB                     i1l508:
  7211  03CB  0008               	return
  7212  03CC                     __end_of_CCP3_CaptureISR:
  7213                           
  7214                           	psect	text32
  7215  04F4                     __ptext32:	
  7216 ;; *************** function _CCP3_DefaultCallBack *****************
  7217 ;; Defined at:
  7218 ;;		line 17 in file "ccp3.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  capturedValu    2    0[COMMON] unsigned short 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		None
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;Total ram usage:        2 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_CCP3_Initialize
  7242 ;;		_CCP3_CaptureISR
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246  04F4                     _CCP3_DefaultCallBack:	
  7247                           ;psect for function _CCP3_DefaultCallBack
  7248                           
  7249  04F4                     i1l502:	
  7250                           ;incstack = 0
  7251                           ; Regs used in _CCP3_DefaultCallBack: []
  7252                           
  7253  04F4  0008               	return
  7254  04F5                     __end_of_CCP3_DefaultCallBack:
  7255                           
  7256                           	psect	text33
  7257  03CC                     __ptext33:	
  7258 ;; *************** function _CCP2_CaptureISR *****************
  7259 ;; Defined at:
  7260 ;;		line 55 in file "ccp2.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;		None
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  module          2    3[COMMON] struct CCPR2Reg_tag
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0, pclath, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7276 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7278 ;;Total ram usage:        3 bytes
  7279 ;; Hardware stack levels used: 1
  7280 ;; Hardware stack levels required when called: 1
  7281 ;; This function calls:
  7282 ;;		Absolute function
  7283 ;;		_CCP2_DefaultCallBack
  7284 ;; This function is called by:
  7285 ;;		_InterruptManager
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289  03CC                     _CCP2_CaptureISR:	
  7290                           ;psect for function _CCP2_CaptureISR
  7291                           
  7292  03CC                     i1l2298:	
  7293                           ;incstack = 0
  7294                           ; Regs used in _CCP2_CaptureISR: [wreg+status,2+status,0+pclath+cstack]
  7295                           
  7296                           
  7297                           ;ccp2.c: 57:     CCP2_PERIOD_REG_T module;;ccp2.c: 60:     PIR4bits.CCP2IF = 0;
  7298  03CC  0020               	movlb	0	; select bank0
  7299  03CD  1094               	bcf	20,1	;volatile
  7300  03CE                     i1l2300:
  7301                           
  7302                           ;ccp2.c: 63:     module.ccpr2l = CCPR2L;
  7303  03CE  0025               	movlb	5	; select bank5
  7304  03CF  0815               	movf	21,w	;volatile
  7305  03D0  00F2               	movwf	??_CCP2_CaptureISR
  7306  03D1  0872               	movf	??_CCP2_CaptureISR,w
  7307  03D2  00F3               	movwf	CCP2_CaptureISR@module
  7308                           
  7309                           ;ccp2.c: 64:     module.ccpr2h = CCPR2H;
  7310  03D3  0816               	movf	22,w	;volatile
  7311  03D4  00F2               	movwf	??_CCP2_CaptureISR
  7312  03D5  0872               	movf	??_CCP2_CaptureISR,w
  7313  03D6  00F4               	movwf	CCP2_CaptureISR@module+1
  7314  03D7                     i1l2302:
  7315                           
  7316                           ;ccp2.c: 67:     CCP2_CallBack(module.ccpr2_16Bit);
  7317  03D7  0874               	movf	CCP2_CaptureISR@module+1,w
  7318  03D8  00F1               	movwf	CCP2_DefaultCallBack@capturedValue+1
  7319  03D9  0873               	movf	CCP2_CaptureISR@module,w
  7320  03DA  00F0               	movwf	CCP2_DefaultCallBack@capturedValue
  7321  03DB  0020               	movlb	0	; select bank0
  7322  03DC  083D               	movf	_CCP2_CallBack+1,w
  7323  03DD  008A               	movwf	10
  7324  03DE  083C               	movf	_CCP2_CallBack,w
  7325  03DF  000A               	callw
  7326  03E0  3183               	pagesel	$
  7327  03E1                     i1l478:
  7328  03E1  0008               	return
  7329  03E2                     __end_of_CCP2_CaptureISR:
  7330                           
  7331                           	psect	text34
  7332  04F5                     __ptext34:	
  7333 ;; *************** function _CCP2_DefaultCallBack *****************
  7334 ;; Defined at:
  7335 ;;		line 17 in file "ccp2.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  capturedValu    2    0[COMMON] unsigned short 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		None
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;Total ram usage:        2 bytes
  7354 ;; Hardware stack levels used: 1
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_CCP2_Initialize
  7359 ;;		_CCP2_CaptureISR
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363  04F5                     _CCP2_DefaultCallBack:	
  7364                           ;psect for function _CCP2_DefaultCallBack
  7365                           
  7366  04F5                     i1l472:	
  7367                           ;incstack = 0
  7368                           ; Regs used in _CCP2_DefaultCallBack: []
  7369                           
  7370  04F5  0008               	return
  7371  04F6                     __end_of_CCP2_DefaultCallBack:
  7372                           
  7373                           	psect	text35
  7374  0421                     __ptext35:	
  7375 ;; *************** function _CCP1_CaptureISR *****************
  7376 ;; Defined at:
  7377 ;;		line 71 in file "ccp1.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  module          2    5[COMMON] struct CCPR1Reg_tag
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;Total ram usage:        3 bytes
  7396 ;; Hardware stack levels used: 1
  7397 ;; Hardware stack levels required when called: 2
  7398 ;; This function calls:
  7399 ;;		Absolute function
  7400 ;;		_CCP1_DefaultCallBack
  7401 ;; This function is called by:
  7402 ;;		_InterruptManager
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406  0421                     _CCP1_CaptureISR:	
  7407                           ;psect for function _CCP1_CaptureISR
  7408                           
  7409  0421                     i1l2304:	
  7410                           ;incstack = 0
  7411                           ; Regs used in _CCP1_CaptureISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7412                           
  7413                           
  7414                           ;ccp1.c: 73:     CCP1_PERIOD_REG_T module;;ccp1.c: 76:     PIR4bits.CCP1IF = 0;
  7415  0421  0020               	movlb	0	; select bank0
  7416  0422  1014               	bcf	20,0	;volatile
  7417  0423                     i1l2306:
  7418                           
  7419                           ;ccp1.c: 79:     module.ccpr1l = CCPR1L;
  7420  0423  0025               	movlb	5	; select bank5
  7421  0424  0811               	movf	17,w	;volatile
  7422  0425  00F4               	movwf	??_CCP1_CaptureISR
  7423  0426  0874               	movf	??_CCP1_CaptureISR,w
  7424  0427  00F5               	movwf	CCP1_CaptureISR@module
  7425                           
  7426                           ;ccp1.c: 80:     module.ccpr1h = CCPR1H;
  7427  0428  0812               	movf	18,w	;volatile
  7428  0429  00F4               	movwf	??_CCP1_CaptureISR
  7429  042A  0874               	movf	??_CCP1_CaptureISR,w
  7430  042B  00F6               	movwf	CCP1_CaptureISR@module+1
  7431  042C                     i1l2308:
  7432                           
  7433                           ;ccp1.c: 83:     CCP1_CallBack(module.ccpr1_16Bit);
  7434  042C  0876               	movf	CCP1_CaptureISR@module+1,w
  7435  042D  00F1               	movwf	CCP1_DefaultCallBack@capturedValue+1
  7436  042E  0875               	movf	CCP1_CaptureISR@module,w
  7437  042F  00F0               	movwf	CCP1_DefaultCallBack@capturedValue
  7438  0430  087A               	movf	_CCP1_CallBack+1,w
  7439  0431  008A               	movwf	10
  7440  0432  0879               	movf	_CCP1_CallBack,w
  7441  0433  000A               	callw
  7442  0434  3184               	pagesel	$
  7443  0435                     i1l448:
  7444  0435  0008               	return
  7445  0436                     __end_of_CCP1_CaptureISR:
  7446                           
  7447                           	psect	text36
  7448  0356                     __ptext36:	
  7449 ;; *************** function _CCP1_DefaultCallBack *****************
  7450 ;; Defined at:
  7451 ;;		line 23 in file "ccp1.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  capturedValu    2    0[COMMON] unsigned short 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7468 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;Total ram usage:        4 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 1
  7472 ;; This function calls:
  7473 ;;		_JSN_GetLastTrig
  7474 ;; This function is called by:
  7475 ;;		_CCP1_Initialize
  7476 ;;		_CCP1_CaptureISR
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480  0356                     _CCP1_DefaultCallBack:	
  7481                           ;psect for function _CCP1_DefaultCallBack
  7482                           
  7483  0356                     i1l2158:	
  7484                           ;incstack = 0
  7485                           ; Regs used in _CCP1_DefaultCallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7486                           
  7487                           
  7488                           ;ccp1.c: 23: static void CCP1_DefaultCallBack(uint16_t capturedValue);ccp1.c: 24: {;ccp1
      +                          .c: 25:     switch(PORTCbits.RC5) {
  7489  0356  2B72               	goto	i1l2168
  7490  0357                     i1l2160:
  7491                           
  7492                           ;ccp1.c: 28:             ticksUp = capturedValue;
  7493  0357  0871               	movf	CCP1_DefaultCallBack@capturedValue+1,w
  7494  0358  00C1               	movwf	_ticksUp+1
  7495  0359  0870               	movf	CCP1_DefaultCallBack@capturedValue,w
  7496  035A  00C0               	movwf	_ticksUp
  7497                           
  7498                           ;ccp1.c: 29:             break;
  7499  035B  2B85               	goto	i1l442
  7500  035C                     i1l2162:
  7501                           
  7502                           ;ccp1.c: 32:             ticksDown = capturedValue;
  7503  035C  0871               	movf	CCP1_DefaultCallBack@capturedValue+1,w
  7504  035D  00BF               	movwf	_ticksDown+1
  7505  035E  0870               	movf	CCP1_DefaultCallBack@capturedValue,w
  7506  035F  00BE               	movwf	_ticksDown
  7507  0360                     i1l2164:
  7508                           
  7509                           ;ccp1.c: 33:             JSN_GetLastTrig()->echoHighTime = ((ticksDown - ticksUp) >> 1);
  7510  0360  0840               	movf	_ticksUp,w
  7511  0361  023E               	subwf	_ticksDown,w
  7512  0362  00F2               	movwf	??_CCP1_DefaultCallBack
  7513  0363  0841               	movf	_ticksUp+1,w
  7514  0364  3B3F               	subwfb	_ticksDown+1,w
  7515  0365  00F3               	movwf	??_CCP1_DefaultCallBack+1
  7516  0366  36F3               	lsrf	??_CCP1_DefaultCallBack+1,f
  7517  0367  0CF2               	rrf	??_CCP1_DefaultCallBack,f
  7518  0368  3184  24EF  3183   	fcall	_JSN_GetLastTrig
  7519  036B  0086               	movwf	6
  7520  036C  0187               	clrf	7
  7521  036D  0872               	movf	??_CCP1_DefaultCallBack,w
  7522  036E  3FC0               	movwi [0]fsr1
  7523  036F  0873               	movf	??_CCP1_DefaultCallBack+1,w
  7524  0370  3FC1               	movwi [1]fsr1
  7525                           
  7526                           ;ccp1.c: 34:             break;
  7527  0371  2B85               	goto	i1l442
  7528  0372                     i1l2168:
  7529  0372  0020               	movlb	0	; select bank0
  7530  0373  0E0E               	swapf	14,w	;volatile
  7531  0374  0C89               	rrf	9,f
  7532  0375  3901               	andlw	1
  7533  0376  00F2               	movwf	??_CCP1_DefaultCallBack
  7534  0377  01F3               	clrf	??_CCP1_DefaultCallBack+1
  7535                           
  7536                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7537                           ; Switch size 1, requested type "simple"
  7538                           ; Number of cases is 1, Range of values is 0 to 0
  7539                           ; switch strategies available:
  7540                           ; Name         Instructions Cycles
  7541                           ; simple_byte            4     3 (average)
  7542                           ; direct_byte            8     6 (fixed)
  7543                           ; jumptable            260     6 (fixed)
  7544                           ;	Chosen strategy is simple_byte
  7545  0378  0873               	movf	??_CCP1_DefaultCallBack+1,w
  7546  0379  3A00               	xorlw	0	; case 0
  7547  037A  1903               	skipnz
  7548  037B  2B7D               	goto	i1l2884
  7549  037C  2B85               	goto	i1l442
  7550  037D                     i1l2884:
  7551                           
  7552                           ; Switch size 1, requested type "simple"
  7553                           ; Number of cases is 2, Range of values is 0 to 1
  7554                           ; switch strategies available:
  7555                           ; Name         Instructions Cycles
  7556                           ; simple_byte            7     4 (average)
  7557                           ; direct_byte           10     6 (fixed)
  7558                           ; jumptable            260     6 (fixed)
  7559                           ;	Chosen strategy is simple_byte
  7560  037D  0872               	movf	??_CCP1_DefaultCallBack,w
  7561  037E  3A00               	xorlw	0	; case 0
  7562  037F  1903               	skipnz
  7563  0380  2B5C               	goto	i1l2162
  7564  0381  3A01               	xorlw	1	; case 1
  7565  0382  1903               	skipnz
  7566  0383  2B57               	goto	i1l2160
  7567  0384  2B85               	goto	i1l442
  7568  0385                     i1l442:
  7569  0385  0008               	return
  7570  0386                     __end_of_CCP1_DefaultCallBack:
  7571                           
  7572                           	psect	text37
  7573  04EF                     __ptext37:	
  7574 ;; *************** function _JSN_GetLastTrig *****************
  7575 ;; Defined at:
  7576 ;;		line 119 in file "JSN_Sensor.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;		None
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      PTR struct .
  7583 ;; Registers used:
  7584 ;;		wreg
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;Total ram usage:        0 bytes
  7595 ;; Hardware stack levels used: 1
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_CCP1_DefaultCallBack
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603  04EF                     _JSN_GetLastTrig:	
  7604                           ;psect for function _JSN_GetLastTrig
  7605                           
  7606  04EF                     i1l2026:	
  7607                           ;incstack = 0
  7608                           ; Regs used in _JSN_GetLastTrig: [wreg]
  7609                           
  7610                           
  7611                           ;JSN_Sensor.c: 120:     return lastTrig;
  7612  04EF  0020               	movlb	0	; select bank0
  7613  04F0  0844               	movf	_lastTrig,w
  7614  04F1                     i1l71:
  7615  04F1  0008               	return
  7616  04F2                     __end_of_JSN_GetLastTrig:
  7617  007E                     btemp	set	126	;btemp
  7618  007E                     int$flags	set	126
  7619  007E                     wtemp0	set	126
  7620                           
  7621                           	psect	idloc
  7622                           
  7623                           ;Config register IDLOC0 @ 0x8000
  7624                           ;	unspecified, using default values
  7625  8000                     	org	32768
  7626  8000  3FFF               	dw	16383
  7627                           
  7628                           ;Config register IDLOC1 @ 0x8001
  7629                           ;	unspecified, using default values
  7630  8001                     	org	32769
  7631  8001  3FFF               	dw	16383
  7632                           
  7633                           ;Config register IDLOC2 @ 0x8002
  7634                           ;	unspecified, using default values
  7635  8002                     	org	32770
  7636  8002  3FFF               	dw	16383
  7637                           
  7638                           ;Config register IDLOC3 @ 0x8003
  7639                           ;	unspecified, using default values
  7640  8003                     	org	32771
  7641  8003  3FFF               	dw	16383
  7642                           
  7643                           	psect	config
  7644                           
  7645                           ;Config register CONFIG1 @ 0x8007
  7646                           ;	FEXTOSC External Oscillator mode Selection bits
  7647                           ;	FEXTOSC = OFF, Oscillator not enabled
  7648                           ;	Power-up default value for COSC bits
  7649                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
  7650                           ;	Clock Out Enable bit
  7651                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  7652                           ;	Clock Switch Enable bit
  7653                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7654                           ;	Fail-Safe Clock Monitor Enable
  7655                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  7656  8007                     	org	32775
  7657  8007  3F8C               	dw	16268
  7658                           
  7659                           ;Config register CONFIG2 @ 0x8008
  7660                           ;	Master Clear Enable bit
  7661                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  7662                           ;	Power-up Timer Enable bit
  7663                           ;	PWRTE = OFF, PWRT disabled
  7664                           ;	Watchdog Timer Enable bits
  7665                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
  7666                           ;	Low-power BOR enable bit
  7667                           ;	LPBOREN = OFF, ULPBOR disabled
  7668                           ;	Brown-out Reset Enable bits
  7669                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
  7670                           ;	Brown-out Reset Voltage selection bit
  7671                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  7672                           ;	PPSLOCK bit One-Way Set Enable bit
  7673                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  7674                           ;	Stack Overflow/Underflow Reset Enable bit
  7675                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7676                           ;	Debugger enable bit
  7677                           ;	DEBUG = OFF, Background debugger disabled
  7678  8008                     	org	32776
  7679  8008  3FF3               	dw	16371
  7680                           
  7681                           ;Config register CONFIG3 @ 0x8009
  7682                           ;	User NVM self-write protection bits
  7683                           ;	WRT = OFF, Write protection off
  7684                           ;	Low Voltage Programming Enable bit
  7685                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
  7686  8009                     	org	32777
  7687  8009  3FFF               	dw	16383
  7688                           
  7689                           ;Config register CONFIG4 @ 0x800A
  7690                           ;	User NVM Program Memory Code Protection bit
  7691                           ;	CP = OFF, User NVM code protection disabled
  7692                           ;	Data NVM Memory Code Protection bit
  7693                           ;	CPD = OFF, Data NVM code protection disabled
  7694  800A                     	org	32778
  7695  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         49
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     23      66
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    CCP2_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP2_DefaultCallBack(), Absolute function(), 

    CCP1_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), 

    CCP1_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP1_DefaultCallBack(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    sp__JSN_GetLastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK0[6]), 

    JSN_Sensor_Trig@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK0[6]), 

    lastTrig	PTR struct . size(1) Largest target is 6
		 -> NULL(NULL[0]), Sens1(BANK0[6]), 

    JSN_Sensor_Init@Sensor	PTR struct . size(1) Largest target is 6
		 -> Sens1(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterruptManager in COMMON

    _InterruptManager->_CCP1_CaptureISR
    _TMR1_ISR->_TMR1_WriteTimer
    _CCP3_CaptureISR->_CCP3_DefaultCallBack
    _CCP2_CaptureISR->_CCP2_DefaultCallBack
    _CCP1_CaptureISR->_CCP1_DefaultCallBack

Critical Paths under _main in BANK0

    _main->_JSN_Library_Init
    _main->_JSN_Sensor_Trig
    _JSN_Sensor_Trig->_FR_Timer_GetMicros
    _FR_Timer_GetMicros->_TMR0_ReadTimer
    _JSN_Library_Init->_JSN_Sensor_Init
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _JSN_Sensor_Init->_SetPin
    _JSN_Sensor_Init->_WritePin
    _CCP1_Initialize->_CCP1_SetCallBack
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    4453
                                             11 BANK0     12    12      0
                 _FR_Timer_GetMillis
                      _FR_Timer_Init
                   _JSN_Library_Init
                    _JSN_Sensor_Trig
                         _PIC16_Init
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _PIC16_Init                                           0     0      0       0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _JSN_Sensor_Trig                                      5     5      0     888
                                              6 BANK0      5     5      0
                 _FR_Timer_GetMicros
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _FR_Timer_GetMicros                                   4     0      4      23
                                              2 BANK0      4     0      4
                     _TMR0_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_ReadTimer                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _JSN_Library_Init                                     2     2      0    2015
                                              9 BANK0      2     2      0
                    _CCP1_Initialize
                    _JSN_Sensor_Init
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _JSN_Sensor_Init                                      5     3      2    1773
                                              4 BANK0      5     3      2
                             _SetPin
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _WritePin                                             4     3      1     700
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetPin                                               4     3      1     624
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0     121
                   _CCP1_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP1_SetCallBack                                     2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_Init                                        0     0      0     121
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     121
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _FR_Timer_GetMillis                                   4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     0     0      0     584
                    _CCP1_CaptureISR
                    _CCP2_CaptureISR
                    _CCP3_CaptureISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
                 _FR_Timer_IncMicros
                 _FR_Timer_IncMillis
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _FR_Timer_IncMillis                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _FR_Timer_IncMicros                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _CCP3_CaptureISR                                      3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP3_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _CCP2_CaptureISR                                      3     3      0     100
                                              2 COMMON     3     3      0
                   Absolute function *
               _CCP2_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP2_DefaultCallBack                                 2     0      2      53
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _CCP1_CaptureISR                                      3     3      0     144
                                              4 COMMON     3     3      0
                   Absolute function *
               _CCP1_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (6) _CCP1_DefaultCallBack                                 4     2      2      97
                                              0 COMMON     4     2      2
                    _JSN_GetLastTrig
 ---------------------------------------------------------------------------------
 (7) _JSN_GetLastTrig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FR_Timer_GetMillis
   _FR_Timer_Init
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _JSN_Library_Init
     _CCP1_Initialize
       _CCP1_SetCallBack
     _JSN_Sensor_Init
       _SetPin
       _WritePin
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _JSN_Sensor_Trig
     _FR_Timer_GetMicros
       _TMR0_ReadTimer
     _WritePin
   _PIC16_Init
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PMD_Initialize
       _WDT_Initialize
   _SetPin
   _WritePin

 _InterruptManager (ROOT)
   _CCP1_CaptureISR
     Absolute function(Fake) *
     _CCP1_DefaultCallBack *
       _JSN_GetLastTrig
   _CCP2_CaptureISR
     Absolute function(Fake) *
     _CCP2_DefaultCallBack *
   _CCP3_CaptureISR
     Absolute function(Fake) *
     _CCP3_DefaultCallBack *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _FR_Timer_IncMicros *
       _FR_Timer_IncMillis *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Jan 27 17:30:24 2022

                      ??_InterruptManager 0077                    ??_CCP3_DefaultCallBack 0072  
                                      l33 0449                                        l43 0268  
                                      l39 01EB                                        l48 0208  
                                      l65 031C                                        l92 04EE  
                                      l95 04B3                                        l98 03F6  
                 __end_of_CCP1_Initialize 03B6                                       l213 0355  
                                     l218 01E7                                       l340 049B  
                                     l406 04E6                                       l343 049F  
                                     l337 04A9                                       l266 012C  
                                     l346 04EA                                       l451 04E0  
                                     l540 039D                                       l445 03B5  
                                     l349 0493                                       l378 040B  
                                     l387 04CE                                       l573 04DA  
                                     u430 049F                                       u431 049E  
                                     u440 030D                                       u441 030C  
                                     u450 02B0                                       u451 02AF  
                                     u460 02B7                                       u461 02B6  
                         _timer1ReloadVal 0077                                       wreg 0009  
                                    l2000 00D0                                      l2012 00E5  
                                    l2004 00D7                                      l2110 0246  
                                    l2102 01F2                                      l2030 04C8  
                                    l2008 00DE                                      l2112 024E  
                                    l2104 0208                                      l2018 00EC  
                                    l2114 0254                                      l2116 025C  
                                    l2108 0214                                      l2118 0264  
                                    l2096 01EA                                      l2600 03E2  
                                    l2610 03FE                                      l2098 01EB  
                                    l2612 0400                                      l2604 03F7  
                                    l1900 0168                                      l2620 043C  
                                    l2700 0354                                      l2614 0408  
                                    l2606 03FC                                      l2702 04EB  
                                    l2630 030D                                      l2550 048C  
                                    l2710 0269                                      l2608 03FD  
                                    l1920 018B                                      l1912 017D  
                                    l1904 016F                                      l2632 0317  
                                    l2624 02D8                                      l2560 049A  
                                    l2552 048E                                      l2616 04A0  
                                    l2640 0322                                      l2720 0280  
                                    l2712 026F                                      l2706 04AA  
                                    l2570 0386                                      l2618 0436  
                                    l2626 02E4                                      l2554 0490  
                                    l2546 0488                                      l2562 04E7  
                                    l2650 0328                                      l2642 0323  
                                    l2730 02B7                                      l2722 0286  
                                    l2714 0272                                      l2564 04E1  
                                    l1932 01A0                                      l1924 0192  
                                    l1916 0184                                      l1908 0176  
                                    l2580 0392                                      l2572 0388  
                                    l2628 02EE                                      l2556 0494  
                                    l2548 048A                                      l2660 0331  
                                    l2652 0329                                      l2644 0324  
                                    l2636 031D                                      l2732 02C6  
                                    l2724 028A                                      l2716 0272  
                                    l2566 04DB                                      l2590 03A3  
                                    l2582 039A                                      l2574 038A  
                                    l2558 0498                                      l2670 033B  
                                    l2662 0334                                      l2654 032A  
                                    l2646 0325                                      l2638 0320  
                                    l2734 02CA                                      l2726 0296  
                                    l2718 027B                                      l2592 03A4  
                                    l2584 039E                                      l1928 0199  
                                    l1880 0145                                      l1872 0137  
                                    l1960 008A                                      l1952 007C  
                                    l2568 04D5                                      l2576 038B  
                                    l2680 0343                                      l2672 033C  
                                    l2664 0336                                      l2656 032D  
                                    l2648 0326                                      l2728 02B0  
                                    l2594 03AC                                      l2586 03A1  
                                    l1938 01A7                                      l1866 012F  
                                    l1946 0074                                      l2578 0390  
                                    l2690 034E                                      l2682 0345  
                                    l2674 033E                                      l2666 0338  
                                    l2658 032F                                      l2596 03B1  
                                    l2588 03A2                                      l1892 015A  
                                    l1884 014C                                      l1876 013E  
                                    l1868 0130                                      l1980 00AD  
                                    l1972 009F                                      l1964 0091  
                                    l1956 0083                                      l1948 0075  
                                    l2692 0350                                      l2684 0347  
                                    l2676 033F                                      l2668 033A  
                                    l2598 03B3                                      l2694 0351  
                                    l2686 034A                                      l2678 0340  
                                    l1896 0161                                      l1888 0153  
                                    l2880 00F4                                      l1992 00C2  
                                    l1984 00B4                                      l1976 00A6  
                                    l1968 0098                                      l2696 0352  
                                    l2688 034C                                      l2882 01AF  
                                    l2698 0353                                      l1996 00C9  
                                    l1988 00BB                                      l2876 01FA  
                                    l2878 021D                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                                    _PIE0 0090                                      _PIE1 0091  
                                    _PIE2 0092                                      _PIE3 0093  
                                    _PIE4 0094                                      _PMD0 0911  
                                    _PMD1 0912                                      _PMD2 0913  
                                    _PMD3 0914                                      _PMD4 0915  
                                    _PMD5 0916                                      i1l71 04F1  
                                    _PIR0 0010                                      _PIR1 0011  
                                    _PIR2 0012                                      _PIR3 0013  
                                    _PIR4 0014                                      _PLLR 48E0  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                                      _main 0269  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 005E  
                __end_of_CCP1_SetCallBack 04E1                ??_TMR1_SetInterruptHandler 004D  
                        ?_CCP1_CaptureISR 0070                      _micros@FR_Timer$F186 002C  
                 __end_of_TMR0_Initialize 040C            ??_TMR0_DefaultInterruptHandler 0070  
           __end_of_OSCILLATOR_Initialize 04A0                         ?_JSN_Library_Init 0070  
                                   ?_main 0070                                     _T1CON 001B  
                                   i1l101 04BD                                     i1l104 04C7  
                                   i1l302 005C                                     i1l403 045C  
                                   i1l502 04F4                                     i1l409 04F3  
                                   i1l442 0385                                     i1l290 0014  
                                   i1l508 03CB                                     i1l292 0020  
                                   i1l295 0032                                     i1l448 0435  
                                   i1l472 04F5                                     i1l296 005C  
                                   i1l297 0040                                     i1l570 0487  
                                   i1l554 046D                                     i1l299 004E  
                                   i1l478 03E1                                     i1l566 047A  
                                   i1l399 0420                                     i1l576 04F2  
                                   _OSCEN 091D                                     u30_20 000B  
                                   u30_21 000A                                     u23_20 0457  
                                   u31_20 0010                                     u23_21 0456  
                                   u31_21 000F                                     u24_20 0462  
                                   u40_20 004A                                     u32_20 0019  
                                   u24_21 0461                                     u40_21 0049  
                                   u32_21 0018                                     u25_20 0482  
                                   u41_20 0053                                     u33_20 001E  
                      ??_JSN_Library_Init 0054                                     _TMR0H 0016  
                                   u25_21 0481                                     u41_21 0052  
                                   u33_21 001D                                     _TMR1H 001A  
                                   _TMR0L 0015                                     _TMR1L 0019  
                                   u42_20 0058                                     u34_20 0024  
                                   u42_21 0057                                     u34_21 0023  
                                   u27_20 041B                                     u35_20 0029  
                                   u27_21 041A                                     u35_21 0028  
                                   u36_20 002E                                     u36_21 002D  
                                   u37_20 0037                                     u37_21 0036  
                                   u38_20 003C                                     u38_21 003B  
                                   u39_20 0045                                     u39_21 0044  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                 ?_TMR0_SetInterruptHandler 004B  
                                   _Sens1 0045                                     _Sens2 0026  
                                   _Sens3 0020                          __end_of_TMR0_ISR 0421  
                        __end_of_TMR1_ISR 047B                          ?_CCP2_CaptureISR 0070  
                          _WDT_Initialize 04E7                   __end_of_TMR1_Initialize 039E  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                     __end_of_FR_Timer_Init 04EF  
                         _TMR1_WriteTimer 045D                           __initialization 0060  
                        ?_CCP3_CaptureISR 0070                              __end_of_main 02D6  
                                  ??_main 0056                          ?_CCP1_Initialize 0070  
                  __end_of_WDT_Initialize 04EB                           _JSN_GetLastTrig 04EF  
                                  _CCPR1H 0292                                    _CCPR2H 0296  
                                  _CCPR3H 0312                                    _CCPR1L 0291  
                                  _CCPR2L 0295                                    _CCPR3L 0311  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                                    _T0CON0 0017  
                                  _T0CON1 0018                                    _T1GCON 001C  
                        __end_of_WritePin 012D                   TMR1_WriteTimer@timerVal 0070  
                                  i1l2026 04EF                                    i1l2034 04B4  
                                  i1l2300 03CE                                    i1l2302 03D7  
                                  i1l2038 04BE                                    i1l2310 046E  
                                  i1l2160 0357                                    i1l2304 0421  
                                  i1l2152 044A                                    i1l2312 0470  
                                  _ODCONA 028C                                    i1l2162 035C  
                                  i1l2306 0423                                    i1l2154 0450  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l2164 0360                                    i1l2308 042C  
                                  i1l2156 0457                                    i1l2180 0465  
                                  i1l2340 0006                                    i1l2158 0356  
                                  i1l2190 0482                                    i1l2182 0467  
                                  i1l2174 045D                                    i1l2350 0024  
                                  i1l2342 000B                                    i1l2168 0372  
                                  i1l2176 0462                                    i1l2184 0469  
                                  i1l2360 0045                                    i1l2352 0029  
                                  i1l2344 0010                                    i1l2290 041E  
                                  i1l2186 046B                                    i1l2178 0463  
                                  i1l2362 004A                                    i1l2354 002E  
                                  i1l2346 0019                                    i1l2292 03B6  
                                  i1l2284 040C                                    i1l2188 047B  
                                  i1l2364 0053                                    i1l2356 0037  
                                  i1l2348 001E                                    i1l2294 03B8  
                                  i1l2286 040E                                    i1l2366 0058  
                                  i1l2358 003C                                    i1l2296 03C1  
                                  i1l2288 041B                                    i1l2298 03CC  
                                  i1l2884 037D                                    _INLVLA 038C  
                                  _INLVLB 038D                                    _INLVLC 038E  
                           main@currMilli 005E                                    _OSCFRQ 091F  
                                  _WDTCON 0097                         ??_JSN_Sensor_Init 0051  
                       ??_JSN_Sensor_Trig 0051                             _CCP1_CallBack 0079  
                                  _SetPin 012D      __end_of_TMR1_DefaultInterruptHandler 04F3  
            _TMR1_DefaultInterruptHandler 04F2                             _CCP2_CallBack 003C  
                           _CCP3_CallBack 003A                          ?_TMR0_Initialize 0070  
                                  _micros 0034                                    _millis 0030  
                           main@prevMilli 005A                            _PMD_Initialize 0488  
       CCP2_DefaultCallBack@capturedValue 0070                           ?_WDT_Initialize 0070  
                   __end_of_TMR0_CallBack 045D  TMR1_SetInterruptHandler@InterruptHandler 004B  
TMR0_SetInterruptHandler@InterruptHandler 004B                   __end_of_TMR1_WriteTimer 046E  
                   __end_of_TMR1_CallBack 0488                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 04A0                   __end_of__initialization 006E  
                      ?_SYSTEM_Initialize 0070                              ??_PIC16_Init 004B  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 004B  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                    __end_of_PMD_Initialize 0494  
                 __end_of_JSN_GetLastTrig 04F2                     CCP3_CaptureISR@module 0073  
                   TMR0_ISR@CountCallBack 007B                        __end_of_PIC16_Init 0356  
               __end_of_SYSTEM_Initialize 04AA                                __pbssBANK0 0020  
                                 ?_SetPin 004B                         ?_CCP1_SetCallBack 004B  
                              __pmaintext 0269          __end_of_TMR0_SetInterruptHandler 04E7  
                              ??_TMR0_ISR 0070                                ??_TMR1_ISR 0072  
                      ??_CCP1_SetCallBack 004D                                __pintentry 0004  
                                 _CCP1CAP 0294                                   _CCP2CAP 0298  
                                 _CCP3CAP 0314                                   _CCP1CON 0293  
                                 _CCP2CON 0297                                   _CCP3CON 0313  
                         ?_PMD_Initialize 0070                                 ?_WritePin 004B  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _OSCTUNE 091E                                   _SLRCONA 030C  
                                 _SLRCONB 030D                                   _SLRCONC 030E  
                        ?_TMR1_WriteTimer 0070         CCP1_DefaultCallBack@capturedValue 0070  
                              ??_WritePin 004C                                   __ptext1 031D  
                                 __ptext2 04A0                                   __ptext3 04E7  
                                 __ptext4 0488                                   __ptext5 0494  
                                 __ptext6 02D6                                   __ptext7 03E2  
                                 __ptext8 04C8                                   __ptext9 0436  
                        ?_JSN_GetLastTrig 0070            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 001B                     _OSCILLATOR_Initialize 0494  
               ?_TMR1_SetInterruptHandler 004B                                   _ticksUp 0040  
                         _JSN_Sensor_Init 01E8                           _JSN_Sensor_Trig 02D6  
                                 clrloop0 04D0                      end_of_initialization 006E  
                   TMR0_ReadTimer@readVal 004C              __end_of_CCP1_DefaultCallBack 0386  
                          _TMR0_ReadTimer 04C8                          ??_WDT_Initialize 004B  
                _TMR0_SetInterruptHandler 04E1                                 _PORTAbits 000C  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                        _InterruptManager 0004                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                  __end_of_TMR0_ReadTimer 04CF                            __end_of_SetPin 01E8  
                 __end_of_JSN_Sensor_Init 0269                    ?_OSCILLATOR_Initialize 0070  
                 __end_of_JSN_Sensor_Trig 031D              __end_of_CCP2_DefaultCallBack 04F6  
                     start_initialization 0060                                 SetPin@pin 004E  
                       ??_CCP1_CaptureISR 0074                          _JSN_Library_Init 0436  
              __end_of_FR_Timer_GetMicros 03F7                __end_of_FR_Timer_GetMillis 04B4  
                           _FR_Timer_Init 04EB                                  ??_SetPin 004C  
              __end_of_FR_Timer_IncMicros 04C8                __end_of_FR_Timer_IncMillis 04BE  
                        ??_PMD_Initialize 004B                           ?_TMR0_ReadTimer 0070  
                       ??_CCP2_CaptureISR 0072                    JSN_Sensor_Init@echoPin 0050  
                             _CCPTMRSbits 029F                     CCP1_CaptureISR@module 0075  
                             __pbssCOMMON 0077                                 ___latbits 0002  
                  JSN_Sensor_Init@trigPin 004F                             __pcstackBANK0 004B  
                       ??_CCP3_CaptureISR 0072              __end_of_CCP3_DefaultCallBack 04F5  
                    _CCP1_DefaultCallBack 0356                            ?_FR_Timer_Init 0070  
                   _TMR0_InterruptHandler 0042                         ??_CCP1_Initialize 004D  
                             WritePin@pin 004E                               WritePin@val 004B  
        __end_of_TMR1_SetInterruptHandler 04DB         CCP3_DefaultCallBack@capturedValue 0070  
                        ?_JSN_Sensor_Init 004F                          ?_JSN_Sensor_Trig 0070  
                           _TMR0_CallBack 044A                     ?_CCP1_DefaultCallBack 0070  
                           _TMR1_CallBack 047B                         ??_TMR0_Initialize 004D  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                  __end_of_InterruptManager 005E  
                               clear_ram0 04CF                                  _PIE0bits 0090  
                                _PIE1bits 0091                                  _PIE4bits 0094  
                    _CCP2_DefaultCallBack 04F5                ??_TMR0_SetInterruptHandler 004D  
                                _PIR0bits 0010                                  _PIR1bits 0011  
                               _ticksDown 003E                                  _PIR4bits 0014  
                                _TMR0_ISR 040C                                  _TMR1_ISR 046E  
                       ??_TMR1_Initialize 004D                            ?_TMR0_CallBack 0070  
                          ?_TMR1_CallBack 0070                           ??_FR_Timer_Init 004D  
                                SetPin@io 004B                     ?_CCP2_DefaultCallBack 0070  
                   JSN_Sensor_Init@Sensor 0053                   ??_OSCILLATOR_Initialize 004B  
                    _CCP3_DefaultCallBack 04F4                  __end_of_JSN_Library_Init 044A  
                         _CCP1_CaptureISR 0421                                  _WritePin 0072  
                _TMR1_SetInterruptHandler 04D5                     _TMR1_InterruptHandler 0038  
                              _T0CON0bits 0017                          _CCP1_SetCallBack 04DB  
          CCP1_SetCallBack@customCallBack 004B                                  __ptext10 0386  
                                __ptext11 04D5                                  __ptext20 04AA  
                                __ptext12 01E8                                  __ptext13 0072  
                              _T1GCONbits 001C                                  __ptext30 04BE  
                                __ptext22 046E                                  __ptext14 012D  
                                __ptext31 03B6                                  __ptext23 045D  
                                __ptext15 039E                                  __ptext32 04F4  
                                __ptext24 047B                                  __ptext16 04DB  
                                __ptext33 03CC                                  __ptext25 04F2  
                                __ptext17 04EB                                  __ptext34 04F5  
                                __ptext26 040C                                  __ptext18 03F7  
                                __ptext35 0421                                  __ptext27 044A  
                                __ptext19 04E1                                  __ptext36 0356  
                                __ptext28 04F3                                  __ptext37 04EF  
                                __ptext29 04B4                    ??_CCP1_DefaultCallBack 0072  
                                _lastTrig 0044                           _CCP2_CaptureISR 03CC  
                        ??_TMR0_ReadTimer 004B      __end_of_TMR0_DefaultInterruptHandler 04F4  
            _TMR0_DefaultInterruptHandler 04F3                                _PIC16_Init 031D  
                                int$flags 007E                     ?_CCP3_DefaultCallBack 0070  
                       ??_TMR1_WriteTimer 0072                        _FR_Timer_GetMicros 03E2  
                      _FR_Timer_GetMillis 04AA                           _CCP3_CaptureISR 03B6  
                      _FR_Timer_IncMicros 04BE                        _FR_Timer_IncMillis 04B4  
                              _INTCONbits 000B                           ??_TMR0_CallBack 0070  
                     ?_FR_Timer_GetMicros 004D                       ?_FR_Timer_GetMillis 004B  
                         _CCP1_Initialize 039E                           ??_TMR1_CallBack 0070  
                     ?_FR_Timer_IncMicros 0070                       ?_FR_Timer_IncMillis 0070  
                                intlevel1 0000                    ??_CCP2_DefaultCallBack 0072  
                       ??_JSN_GetLastTrig 0070                      ??_FR_Timer_GetMicros 0051  
                    ??_FR_Timer_GetMillis 004F             ?_TMR0_DefaultInterruptHandler 0070  
                 __end_of_CCP1_CaptureISR 0436                      ??_FR_Timer_IncMicros 0070  
                    ??_FR_Timer_IncMillis 0070                     CCP2_CaptureISR@module 0073  
                         _TMR0_Initialize 03F7                   __end_of_CCP2_CaptureISR 03E2  
                   JSN_Sensor_Trig@Sensor 0055                         ?_InterruptManager 0070  
                         _TMR1_Initialize 0386                               ?_PIC16_Init 0070  
                 __end_of_CCP3_CaptureISR 03CC  
